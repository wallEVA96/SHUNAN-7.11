#include "MK60F15.h"
#include "ShunAn_Lib.h"
#include "start_ShunAn.h"
#include "BlessedAlien.h"
#include "ControlPads.h"
#include "ExInterface.h"
#include "BIOS.h"
#include "TFT.h"
s_SysTem g_SysTem ={.TotalTime = 0,.Hardware_error  = 0,.Timer_Tick = &NULL_Tick};;
Message g_Message;
void NULL_Tick(void)
{
    return;
}
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
void*(*msg_Run)(Message *);
/******************************************************************************/
uint8 msg_operation( Message * Msg_In )  // 消息执行函数
{
    msg_Run = (void*(*)(Message*))msg_Run(Msg_In); // 代码执行
    return 0;
}

void* (ON_NONE) (Message * Message_In)// 这里为接收数据
{
    // 按键检索
    if(1 == u8_Button_set(&g_Message,&g_Buttons,&g_ExInterfaces)){return (void*)ON_BUTTON;};
    return (void*)ON_NONE;
}

void* (ON_SWITCH) (Message * Message_In) // 返回 ON_NONE
{
    Message_In->Topest->Done(Message_In->Topest);// 执行当前函数部分
    Message_In->Topest->Done = Message_In->Topest->Idle;
    return (void*)ON_NONE;
}

void* (ON_BUTTON) (Message * Message_In) // 返回 ON_SWITCH
{
    s_Control * Topest = Message_In->Topest;
    ExInterfaces * ExInterfaces_In = (ExInterfaces *)(Message_In->msgGaia); // 外部信息归一化
    if(((ExInterfaces_In->ButtonsOn)>>0)&0x01) // 按键1
    {//v_BIOS_6x8str_Ascii(x,0,Black,White,"1");// 移动上次
        Topest ->Idle(Topest); // 强行执行函数
        Topest = Topest->LeFriend;
        Topest ->Done = Topest->OnPend;
    }
    if(((ExInterfaces_In->ButtonsOn)>>1)&0x01) // 按键2
    {//v_BIOS_6x8str_Ascii(x,0,Black,White,"2");// 移动下次
        Topest ->Idle(Topest); // 强行执行函数
        Topest = Topest->RiFriend;
        Topest ->Done = Topest->OnPend;
    }
    if(((ExInterfaces_In->ButtonsOn)>>2)&0x01) // 按键3 // 确认按键 Enter CallBack
    {//v_BIOS_6x8str_Ascii(x,0,Black,White,"3");
        Topest ->Done = Topest->CallBack;// 返回CallBack函数
    }   
    if(((ExInterfaces_In->ButtonsOn)>>3)&0x01) // 按键4
    {//v_BIOS_6x8str_Ascii(x,0,Black,White,"4");
    }
    return (void*)ON_SWITCH;
}

void* (ON_UART) (Message * Message_In) // 转为 ON_SWITCH
{
    return (void*)ON_SWITCH;
}


/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
/******************************************************************************/
void v_OriginalSin()
{
    /*
    { // 最早窗口
        static _s_GUI_Window OrsWindow; // 窗口原始
        OrsWindow.Color = Black;
        // Data Scope
        static _s_GUI_Cmd OrsWindow_0;
        OrsWindow_0.Color.fontColor = White;
        OrsWindow_0.Color.FrameColor = Blue;
        OrsWindow_0.getFocus = 0;
        OrsWindow_0.Text.Content = "Data Scope";
        OrsWindow_0.Text.Style = 0;
        // Rigid Roll
        static _s_GUI_Cmd OrsWindow_1;
        OrsWindow_1.Color.fontColor = White;
        OrsWindow_1.Color.FrameColor = Blue;
        OrsWindow_1.getFocus = 0;
        OrsWindow_1.Text.Content = "Rigid Roll";
        OrsWindow_1.Text.Style = 0;
        //
        static s_Control Window_0;
        Window_0.Tag = GUI_Cmd;
        Window_0.Name = (void*)&OrsWindow_0;
        Window_0.Father = &Windows_Gaia;
        static s_Control Window_1;
        Window_1.Tag = GUI_Cmd;
        Window_1.Name = (void*)&OrsWindow_1;
        Window_1.Father = &Windows_Gaia;
        static s_Control * sons[] = {(&Window_0),(&Window_1)};
        OrsWindow.Sons = sons;
        OrsWindow.SonsNum = 2;
        //
        Windows_Gaia.Father = (s_Control*)0;
        Windows_Gaia.Tag = GUI_Window;
        Windows_Gaia.Name = (void*)&OrsWindow;
        // 坐标定义
        OrsWindow_0.Position.x = 100;
        OrsWindow_0.Position.y = 100;
        OrsWindow_0.Position.width = 80;
        OrsWindow_0.Position.height = 15;
        OrsWindow_1.Position.x = 100;
        OrsWindow_1.Position.y = 120;
        OrsWindow_1.Position.width = 80;
        OrsWindow_1.Position.height = 15;
        v_allSons_inCreate(&Windows_Gaia);
    }
    */
}