###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      16/Aug/2014  22:11:10 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -          #
#                    TM4123G\代码\遥控器\ShunAn2\GR_Bluetoothx11_12.c         #
#    Command line =  "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\ShunAn2\GR_Bluetoothx11_12.c" -D     #
#                    IAR -D ShunAn2 -lCN "C:\Users\pc\Desktop\继续做的事情\四 #
#                    旋翼飞行器 - TM4123G\代码\遥控器\FLASH_1M\List\" -lB     #
#                    "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\FLASH_1M\List\" -o                   #
#                    "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\FLASH_1M\Obj\" --no_cse --no_unroll  #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 #
#                     - TM4123G\代码\遥控器\ShunAn2\" -I                      #
#                    "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\Library\" -I                         #
#                    "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\Library\BlessedAlien\" -Ol           #
#                    --use_c++_inline                                         #
#    List file    =  C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -          #
#                    TM4123G\代码\遥控器\FLASH_1M\List\GR_Bluetoothx11_12.lst #
#    Object file  =  C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -          #
#                    TM4123G\代码\遥控器\FLASH_1M\Obj\GR_Bluetoothx11_12.o    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 - TM4123G\代码\遥控器\ShunAn2\GR_Bluetoothx11_12.c
      1          /**
      2          /. -----------------------//k60底层库//-------------------------
      3          
      4          /. 测试硬件平台：K60
      5           . 版权所有：朱葛峻 
      6           . 制作者：朱葛峻
      7           . 文件名：alienUART.c
      8           . 用途：
      9           . 最后修改日期: 20140117
     10          */
     11          #include "GR_Bluetoothx11_12.h"
     12          #include "GR_ControlPads.h"
     13          /*************************************************************************
     14          //函数名：__v_Uart_Init_
     15          //制作：朱葛峻
     16          //用途：开启所启用引脚时钟，开启UART功能引脚，设置波特率参数。
     17                  暂时只支持 PTC16 与 PTC17，以后扩展。
     18          
     19          //波特率简介：所谓波特率表示每秒种传输离散信号事件的个数，或每秒信号电平的变化次数，单位为band（波特）。
     20          
     21                    初始化默认配置        --TXD--      --RXD--
     22                    UART4,                 PTC17        PTC16
     23          
     24          //目前参数：BaudRate
     25          //使用波特率：9600
     26          *************************************************************************/
     27          

   \                                 In section .text, align 2, keep-with-next
     28          void __v_Uart_Init_(uint32 BaudRate)
     29          {   
   \                     __v_Uart_Init_: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
     30              // 常参量
     31              uint32 tempReg  = 0;
   \   00000002   0x2100             MOVS     R1,#+0
     32              uint32 BdRtBits = 0;
   \   00000004   0x2200             MOVS     R2,#+0
     33              uint32 BRFAdjst = 0;
   \   00000006   0x2300             MOVS     R3,#+0
     34              
     35              // 设置时钟
     36              SIM_SCGC4 |= SIM_SCGC4_UART3_MASK;
   \   00000008   0x....             LDR.N    R4,??DataTable5  ;; 0x40048034
   \   0000000A   0x6824             LDR      R4,[R4, #+0]
   \   0000000C   0xF454 0x5400      ORRS     R4,R4,#0x2000
   \   00000010   0x....             LDR.N    R5,??DataTable5  ;; 0x40048034
   \   00000012   0x602C             STR      R4,[R5, #+0]
     37              SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK ;//使能PORTE时钟
   \   00000014   0x....             LDR.N    R4,??DataTable5_1  ;; 0x40048038
   \   00000016   0x6824             LDR      R4,[R4, #+0]
   \   00000018   0xF454 0x6400      ORRS     R4,R4,#0x800
   \   0000001C   0x....             LDR.N    R5,??DataTable5_1  ;; 0x40048038
   \   0000001E   0x602C             STR      R4,[R5, #+0]
     38              //SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK ;//
     39              // 设置引脚参数
     40              //PORT_PCR_REG(PORTX[PTC],14) = PORT_PCR_MUX(0);
     41              //PORT_PCR_REG(PORTX[PTC],15) = PORT_PCR_MUX(0);
     42              //PORT_PCR_REG(PORTX[PTE],23) = PORT_PCR_MUX(3);
     43              //PORT_PCR_REG(PORTX[PTE],24) = PORT_PCR_MUX(3);
     44              
     45              //PORTC_PCR14 |= 0x00000000u;//引脚复用选择UART4_TX
     46              //PORTC_PCR15 |= 0x00000000u;//引脚复用选择UART4_TX
     47              PORTC_PCR16 |= 0x00000300u;//引脚复用选择UART4_RX
   \   00000020   0x....             LDR.N    R4,??DataTable5_2  ;; 0x4004b040
   \   00000022   0x6824             LDR      R4,[R4, #+0]
   \   00000024   0xF454 0x7440      ORRS     R4,R4,#0x300
   \   00000028   0x....             LDR.N    R5,??DataTable5_2  ;; 0x4004b040
   \   0000002A   0x602C             STR      R4,[R5, #+0]
     48              PORTC_PCR17 |= 0x00000300u;//引脚复用选择UART4_RX
   \   0000002C   0x....             LDR.N    R4,??DataTable5_3  ;; 0x4004b044
   \   0000002E   0x6824             LDR      R4,[R4, #+0]
   \   00000030   0xF454 0x7440      ORRS     R4,R4,#0x300
   \   00000034   0x....             LDR.N    R5,??DataTable5_3  ;; 0x4004b044
   \   00000036   0x602C             STR      R4,[R5, #+0]
     49              
     50              // 关闭接收及发送器，等待触发时波特率生成
     51              (UART3_BASE_PTR)->C2 &= ~( UART_C2_TE_MASK | UART_C2_RE_MASK );
   \   00000038   0x....             LDR.N    R4,??DataTable5_4  ;; 0x4006d003
   \   0000003A   0x7824             LDRB     R4,[R4, #+0]
   \   0000003C   0xF014 0x04F3      ANDS     R4,R4,#0xF3
   \   00000040   0x....             LDR.N    R5,??DataTable5_4  ;; 0x4006d003
   \   00000042   0x702C             STRB     R4,[R5, #+0]
     52              
     53              // C1设置默认
     54              (UART3_BASE_PTR)->C1  = 0;
   \   00000044   0x....             LDR.N    R4,??DataTable5_5  ;; 0x4006d002
   \   00000046   0x2500             MOVS     R5,#+0
   \   00000048   0x7025             STRB     R5,[R4, #+0]
     55              
     56              // 设置波特率
     57              // 设置 Band Rate Bits
     58              BdRtBits = (uint16)((bus_clk_khz * 1000)/(BaudRate << 4));
   \   0000004A   0x....             LDR.N    R4,??DataTable5_6
   \   0000004C   0x6824             LDR      R4,[R4, #+0]
   \   0000004E   0xF44F 0x757A      MOV      R5,#+1000
   \   00000052   0x436C             MULS     R4,R5,R4
   \   00000054   0x0105             LSLS     R5,R0,#+4
   \   00000056   0xFBB4 0xF4F5      UDIV     R4,R4,R5
   \   0000005A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000005C   0x0022             MOVS     R2,R4
     59              tempReg = UART_BDH_REG(UART3_BASE_PTR) & ~(UART_BDH_SBR(0x1F));
   \   0000005E   0x....             LDR.N    R4,??DataTable5_7  ;; 0x4006d000
   \   00000060   0x7824             LDRB     R4,[R4, #+0]
   \   00000062   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000064   0x0964             LSRS     R4,R4,#+5
   \   00000066   0x0164             LSLS     R4,R4,#+5
   \   00000068   0x0021             MOVS     R1,R4
     60              (UART3_BASE_PTR)->BDH = tempReg |  UART_BDH_SBR(((BdRtBits & 0x1F00) >> 8));
   \   0000006A   0x0A14             LSRS     R4,R2,#+8
   \   0000006C   0xF014 0x041F      ANDS     R4,R4,#0x1F
   \   00000070   0x4321             ORRS     R1,R4,R1
   \   00000072   0x....             LDR.N    R4,??DataTable5_7  ;; 0x4006d000
   \   00000074   0x7021             STRB     R1,[R4, #+0]
     61              (UART3_BASE_PTR)->BDL = (uint8)(BdRtBits & UART_BDL_SBR_MASK);
   \   00000076   0x....             LDR.N    R1,??DataTable5_8  ;; 0x4006d001
   \   00000078   0x700A             STRB     R2,[R1, #+0]
     62              
     63              // 设置 Band Rate Find Adjust
     64              BRFAdjst = ((((bus_clk_khz*1000)<<5)/(BaudRate <<4)) - (BdRtBits <<5));
   \   0000007A   0x....             LDR.N    R1,??DataTable5_6
   \   0000007C   0x6809             LDR      R1,[R1, #+0]
   \   0000007E   0xF44F 0x747A      MOV      R4,#+1000
   \   00000082   0x4361             MULS     R1,R4,R1
   \   00000084   0x0149             LSLS     R1,R1,#+5
   \   00000086   0x0100             LSLS     R0,R0,#+4
   \   00000088   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \   0000008C   0xEBB0 0x1042      SUBS     R0,R0,R2, LSL #+5
   \   00000090   0x0003             MOVS     R3,R0
     65              tempReg = UART_C4_REG(UART3_BASE_PTR) & ~(UART_C4_BRFA(0x1F));
   \   00000092   0x....             LDR.N    R0,??DataTable5_9  ;; 0x4006d00a
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x0941             LSRS     R1,R0,#+5
   \   0000009A   0x0149             LSLS     R1,R1,#+5
     66              (UART3_BASE_PTR)->C4 = tempReg |  UART_C4_BRFA(BRFAdjst);
   \   0000009C   0xF013 0x001F      ANDS     R0,R3,#0x1F
   \   000000A0   0x4308             ORRS     R0,R0,R1
   \   000000A2   0x....             LDR.N    R1,??DataTable5_9  ;; 0x4006d00a
   \   000000A4   0x7008             STRB     R0,[R1, #+0]
     67              // 波特率设置完毕
     68              
     69              // 触发接收器及发送器使能，触发生成波特率
     70              UART_C2_REG(UART3_BASE_PTR) |= (UART_C2_TE_MASK | UART_C2_RE_MASK );
   \   000000A6   0x....             LDR.N    R0,??DataTable5_4  ;; 0x4006d003
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0xF050 0x000C      ORRS     R0,R0,#0xC
   \   000000AE   0x....             LDR.N    R1,??DataTable5_4  ;; 0x4006d003
   \   000000B0   0x7008             STRB     R0,[R1, #+0]
     71              //
     72              (UART3_BASE_PTR)->C5 = 0x00u;
   \   000000B2   0x....             LDR.N    R0,??DataTable5_10  ;; 0x4006d00b
   \   000000B4   0x2100             MOVS     R1,#+0
   \   000000B6   0x7001             STRB     R1,[R0, #+0]
     73              return;
   \   000000B8   0xBC30             POP      {R4,R5}
   \   000000BA   0x4770             BX       LR               ;; return
     74          }
     75          
     76          /*************************************************************************
     77          //函数名：__v_Uart_TxOne_
     78          //制作：朱葛峻
     79          //用途：发送一个字符
     80          //目前参数：BaudRate
     81          //可扩展参数：引脚配置信息
     82          //使用波特率：9600
     83          //
     84          *************************************************************************/
     85          

   \                                 In section .text, align 2, keep-with-next
     86          void __v_Uart_TxOne_(unsigned char sendInfor)
     87          {
     88              // 等待发送缓冲区空 Transmit Data Register Empty Flag == 1 时退出循环
     89              while(!( (UART3_BASE_PTR->S1) & UART_S1_TDRE_MASK));
   \                     __v_Uart_TxOne_: (+1)
   \                     ??__v_Uart_TxOne__0: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable5_11  ;; 0x4006d004
   \   00000002   0x7809             LDRB     R1,[R1, #+0]
   \   00000004   0x0609             LSLS     R1,R1,#+24
   \   00000006   0xD5FB             BPL.N    ??__v_Uart_TxOne__0
     90              
     91              // 当TDRE为1时，执行发送数据指令。
     92              // 发送数据
     93              (UART3_BASE_PTR)->D = (uint8)sendInfor;
   \   00000008   0x....             LDR.N    R1,??DataTable5_12  ;; 0x4006d007
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
     94          }
   \   0000000C   0x4770             BX       LR               ;; return
     95          
     96          /*************************************************************************
     97          //函数名：__v_Uart_TxOne_
     98          //制作：朱葛峻
     99          //用途：发送一个字符
    100          //目前参数：BaudRate
    101          //可扩展参数：引脚配置信息
    102          //使用波特率：9600
    103          //
    104          *************************************************************************/
    105          

   \                                 In section .text, align 2, keep-with-next
    106          void __v_Uart_TxInt16_(unsigned short int sendUint)
    107          {
   \                     __v_Uart_TxInt16_: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    108              // 先搞后低
    109              __v_Uart_TxOne_((uint8)((sendUint>>8)&(0x00FFu)));
   \   00000004   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000006   0x0A20             LSRS     R0,R4,#+8
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       __v_Uart_TxOne_
    110              // vDelayMuchMs(100);
    111              __v_Uart_TxOne_((uint8)((sendUint)&(0x00FFu)));
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000012   0x.... 0x....      BL       __v_Uart_TxOne_
    112          }
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
    113          

   \                                 In section .text, align 2, keep-with-next
    114          void __v_Uart_TxInt32_(unsigned long int sendUint)
    115          {
   \                     __v_Uart_TxInt32_: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    116              __v_Uart_TxInt16_((uint16)((sendUint>>16)&(0x0000FFFFu)));
   \   00000004   0x0C20             LSRS     R0,R4,#+16
   \   00000006   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000008   0x.... 0x....      BL       __v_Uart_TxInt16_
    117              //vDelayMuchMs(100);
    118              __v_Uart_TxInt16_((uint16)((sendUint)&(0x0000FFFFu)));
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000010   0x.... 0x....      BL       __v_Uart_TxInt16_
    119          }
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
    120          
    121          /*!
    122           *  @brief      开串口接收中断
    123           *  @param      UARTn_e       模块号（UART0~UART5）
    124           *  @since      v5.0
    125           *  Sample usage:       uart_rx_irq_en(UART4);         //开串口3接收中断
    126           */

   \                                 In section .text, align 2, keep-with-next
    127          void __v_uart_rx_irq_en()
    128          {
   \                     __v_uart_rx_irq_en: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    129              UART_C2_REG(UART3_BASE_PTR) |= UART_C2_RIE_MASK;                          //使能UART接收中断
   \   00000002   0x....             LDR.N    R0,??DataTable5_4  ;; 0x4006d003
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000000A   0x....             LDR.N    R1,??DataTable5_4  ;; 0x4006d003
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    130              enable_irq((3 << 1) + 45);                  //使能IRQ中断
   \   0000000E   0x2033             MOVS     R0,#+51
   \   00000010   0x.... 0x....      BL       enable_irq
    131          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return
    132          
    133          /*!
    134           *  @brief      等待接受1个字节
    135           *  @param      UARTn_e       模块号（UART0~UART5）
    136           *  @param      ch          接收地址
    137           *  @since      v5.0
    138           *  @note       如果需要查询接收状态，可用 uart_query ，
    139                          如果需要查询接收数据，可用 uart_querychar
    140           *  Sample usage:       char ch = uart_getchar (UART4);   //等待接受1个字节，保存到 ch里
    141           */

   \                                 In section .text, align 2, keep-with-next
    142          void __v_uart_getchar (char *ch)
    143          {
    144              //等待接收到数据（使能了FIFO后，以下两种方法都可行，都是一样的意思）
    145              //while( !UART_RCFIFO_REG(UARTN[uratn]) );                                //等待接收到数据数量非0
    146              //while( (UART_SFIFO_REG(UARTN[uratn]) & UART_SFIFO_RXEMPT_MASK)) ;     //等待接收缓冲区/FIFO 非空的
    147          
    148              //如下方法是飞思卡尔官方例程提供的方法
    149              while (!(UART_S1_REG(UART3_BASE_PTR) & UART_S1_RDRF_MASK));       //等待接收满了
   \                     __v_uart_getchar: (+1)
   \                     ??__v_uart_getchar_0: (+1)
   \   00000000   0x....             LDR.N    R1,??DataTable5_11  ;; 0x4006d004
   \   00000002   0x7809             LDRB     R1,[R1, #+0]
   \   00000004   0x0689             LSLS     R1,R1,#+26
   \   00000006   0xD5FB             BPL.N    ??__v_uart_getchar_0
    150          
    151              // 获取接收到的8位数据
    152              *ch =  UART_D_REG(UART3_BASE_PTR);
   \   00000008   0x....             LDR.N    R1,??DataTable5_12  ;; 0x4006d007
   \   0000000A   0x7809             LDRB     R1,[R1, #+0]
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
    153          
    154              // 获取 9位数据，应该是（需要修改函数的返回类型）：
    155              // *ch =   ((( UARTx_C3_REG(UARTN[uratn]) & UART_C3_R8_MASK ) >> UART_C3_R8_SHIFT ) << 8)   |   UART_D_REG(UARTN[uratn]);  //返回9bit
    156          
    157          }
   \   0000000E   0x4770             BX       LR               ;; return
    158          
    159          

   \                                 In section .text, align 2, keep-with-next
    160          void BLagreeT(uint8  DirPWM    , uint8  D_DirPWM,
    161                        
    162                        uint8  Central   , uint8 centralChangeRate,       // 通用显示
    163                        
    164                        uint8  isAdvance , uint16 Motor_PWM,
    165                        
    166                        uint16  GiveSpeed , uint16  D_GiveSpeed,
    167                        uint16  NowSpeed  )
    168          {
   \                     BLagreeT: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
    169              // 传输开始
    170              __v_Uart_TxInt16_(0xFEFEu);        // 起始
   \   0000000A   0xF64F 0x60FE      MOVW     R0,#+65278
   \   0000000E   0x.... 0x....      BL       __v_Uart_TxInt16_
    171              
    172              __v_Uart_TxOne_(DirPWM);
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       __v_Uart_TxOne_
    173              __v_Uart_TxOne_(D_DirPWM);
   \   0000001A   0x0028             MOVS     R0,R5
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x.... 0x....      BL       __v_Uart_TxOne_
    174              
    175              __v_Uart_TxOne_(Central);
   \   00000022   0x0030             MOVS     R0,R6
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       __v_Uart_TxOne_
    176              __v_Uart_TxOne_(centralChangeRate);
   \   0000002A   0x0038             MOVS     R0,R7
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       __v_Uart_TxOne_
    177              
    178              __v_Uart_TxOne_(isAdvance);         // 1 前进，2 后退，3 停止
   \   00000032   0x9806             LDR      R0,[SP, #+24]
   \   00000034   0x.... 0x....      BL       __v_Uart_TxOne_
    179              
    180              
    181              __v_Uart_TxInt16_(NowSpeed);
   \   00000038   0x980A             LDR      R0,[SP, #+40]
   \   0000003A   0x.... 0x....      BL       __v_Uart_TxInt16_
    182              __v_Uart_TxInt16_(GiveSpeed);
   \   0000003E   0x9808             LDR      R0,[SP, #+32]
   \   00000040   0x.... 0x....      BL       __v_Uart_TxInt16_
    183              __v_Uart_TxInt16_(D_GiveSpeed);
   \   00000044   0x9809             LDR      R0,[SP, #+36]
   \   00000046   0x.... 0x....      BL       __v_Uart_TxInt16_
    184              
    185              __v_Uart_TxInt16_(Motor_PWM);
   \   0000004A   0x9807             LDR      R0,[SP, #+28]
   \   0000004C   0x.... 0x....      BL       __v_Uart_TxInt16_
    186              
    187              //__v_Uart_TxInt16_(0xFDFDu);        // 停止
    188          }
   \   00000050   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    189          
    190          
    191          /*************************************************************************
    192          //函数名：unsigned char GR_ReceiveStop()
    193          //用途：接收停车标志，非零即为停车
    194          //目前参数：BaudRate
    195          //可扩展参数：引脚配置信息
    196          //
    197          *************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    198          unsigned char GR_ReceiveStop()
    199          {
   \                     GR_ReceiveStop: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    200            uint8 RecChar = 0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF88D 0x0000      STRB     R0,[SP, #+0]
    201            if(UART_S1_REG(UART3_BASE_PTR) & UART_S1_RDRF_MASK)   //接收数据寄存器满
   \   00000008   0x....             LDR.N    R0,??DataTable5_11  ;; 0x4006d004
   \   0000000A   0x7800             LDRB     R0,[R0, #+0]
   \   0000000C   0x0680             LSLS     R0,R0,#+26
   \   0000000E   0xD50A             BPL.N    ??GR_ReceiveStop_0
    202            {
    203              __v_uart_getchar((char*)&RecChar);
   \   00000010   0xA800             ADD      R0,SP,#+0
   \   00000012   0x.... 0x....      BL       __v_uart_getchar
    204              if(0xFFu == RecChar)
   \   00000016   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000001A   0x28FF             CMP      R0,#+255
   \   0000001C   0xD101             BNE.N    ??GR_ReceiveStop_1
    205              {
    206                return 1;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xE002             B.N      ??GR_ReceiveStop_2
    207              }
    208              return 0;
   \                     ??GR_ReceiveStop_1: (+1)
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0xE000             B.N      ??GR_ReceiveStop_2
    209            }
    210            else
    211            {
    212              return 0;
   \                     ??GR_ReceiveStop_0: (+1)
   \   00000026   0x2000             MOVS     R0,#+0
   \                     ??GR_ReceiveStop_2: (+1)
   \   00000028   0xBD02             POP      {R1,PC}          ;; return
    213            }
    214          }
    215          
    216          /*************************************************************************
    217          //函数名：
    218          //用途：接收停车标志，非零即为停车
    219          //目前参数：BaudRate
    220          //可扩展参数：引脚配置信息
    221          //
    222          *************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    223          uint8 u8_tx2air()
    224          {
   \                     u8_tx2air: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    225              if(1 == g_Control.SendWhich.Start){__v_Uart_TxOne_(10);}
   \   00000002   0x....             LDR.N    R0,??DataTable5_13
   \   00000004   0x7900             LDRB     R0,[R0, #+4]
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD102             BNE.N    ??u8_tx2air_0
   \   0000000A   0x200A             MOVS     R0,#+10
   \   0000000C   0x.... 0x....      BL       __v_Uart_TxOne_
    226              if(1 == g_Control.SendWhich.Up){__v_Uart_TxOne_(20);}
   \                     ??u8_tx2air_0: (+1)
   \   00000010   0x....             LDR.N    R0,??DataTable5_13
   \   00000012   0x7940             LDRB     R0,[R0, #+5]
   \   00000014   0x2801             CMP      R0,#+1
   \   00000016   0xD102             BNE.N    ??u8_tx2air_1
   \   00000018   0x2014             MOVS     R0,#+20
   \   0000001A   0x.... 0x....      BL       __v_Uart_TxOne_
    227              if(1 == g_Control.SendWhich.Down){__v_Uart_TxOne_(30);}
   \                     ??u8_tx2air_1: (+1)
   \   0000001E   0x....             LDR.N    R0,??DataTable5_13
   \   00000020   0x7980             LDRB     R0,[R0, #+6]
   \   00000022   0x2801             CMP      R0,#+1
   \   00000024   0xD102             BNE.N    ??u8_tx2air_2
   \   00000026   0x201E             MOVS     R0,#+30
   \   00000028   0x.... 0x....      BL       __v_Uart_TxOne_
    228              if(1 == g_Control.SendWhich.Max){__v_Uart_TxOne_(40);}
   \                     ??u8_tx2air_2: (+1)
   \   0000002C   0x....             LDR.N    R0,??DataTable5_13
   \   0000002E   0x79C0             LDRB     R0,[R0, #+7]
   \   00000030   0x2801             CMP      R0,#+1
   \   00000032   0xD102             BNE.N    ??u8_tx2air_3
   \   00000034   0x2028             MOVS     R0,#+40
   \   00000036   0x.... 0x....      BL       __v_Uart_TxOne_
    229              
    230              // 标志位清空
    231              g_Control.SendWhich.Start = 0;
   \                     ??u8_tx2air_3: (+1)
   \   0000003A   0x....             LDR.N    R0,??DataTable5_13
   \   0000003C   0x2100             MOVS     R1,#+0
   \   0000003E   0x7101             STRB     R1,[R0, #+4]
    232              g_Control.SendWhich.Down  = 0;
   \   00000040   0x....             LDR.N    R0,??DataTable5_13
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x7181             STRB     R1,[R0, #+6]
    233              g_Control.SendWhich.Up    = 0;
   \   00000046   0x....             LDR.N    R0,??DataTable5_13
   \   00000048   0x2100             MOVS     R1,#+0
   \   0000004A   0x7141             STRB     R1,[R0, #+5]
    234              g_Control.SendWhich.Max   = 0;
   \   0000004C   0x....             LDR.N    R0,??DataTable5_13
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x71C1             STRB     R1,[R0, #+7]
    235          }
   \   00000052   0xBD02             POP      {R1,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x4004B040         DC32     0x4004b040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x4004B044         DC32     0x4004b044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x4006D003         DC32     0x4006d003

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x4006D002         DC32     0x4006d002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     bus_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x4006D000         DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x4006D001         DC32     0x4006d001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x4006D00A         DC32     0x4006d00a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x4006D00B         DC32     0x4006d00b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x4006D004         DC32     0x4006d004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x4006D007         DC32     0x4006d007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     g_Control

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   BLagreeT
        24   -> __v_Uart_TxInt16_
        24   -> __v_Uart_TxOne_
       8   GR_ReceiveStop
         8   -> __v_uart_getchar
       8   __v_Uart_Init_
       8   __v_Uart_TxInt16_
         8   -> __v_Uart_TxOne_
       8   __v_Uart_TxInt32_
         8   -> __v_Uart_TxInt16_
       0   __v_Uart_TxOne_
       0   __v_uart_getchar
       8   __v_uart_rx_irq_en
         8   -> enable_irq
       8   u8_tx2air
         8   -> __v_Uart_TxOne_


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
      82  BLagreeT
      42  GR_ReceiveStop
     188  __v_Uart_Init_
      24  __v_Uart_TxInt16_
      22  __v_Uart_TxInt32_
      14  __v_Uart_TxOne_
      16  __v_uart_getchar
      22  __v_uart_rx_irq_en
      84  u8_tx2air

 
 550 bytes in section .text
 
 550 bytes of CODE memory

Errors: none
Warnings: 1
