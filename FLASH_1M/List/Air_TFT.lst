###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      16/Aug/2014  22:17:46 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -          #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\ShunAn2\Air_TFT.c                    #
#    Command line =  "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\ShunAn2\Air_TFT.c" -D IAR -D         #
#                    ShunAn2 -lCN "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐ #
#                    ÐÆ÷ - TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\List\" -lB            #
#                    "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\List\" -o                   #
#                    "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\Obj\" --no_cse --no_unroll  #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ #
#                     - TM4123G\´úÂë\Ò£¿ØÆ÷\ShunAn2\" -I                      #
#                    "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\Library\" -I                         #
#                    "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\Library\BlessedAlien\" -Ol           #
#                    --use_c++_inline                                         #
#    List file    =  C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -          #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\List\Air_TFT.lst            #
#    Object file  =  C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -          #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\Obj\Air_TFT.o               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ - TM4123G\´úÂë\Ò£¿ØÆ÷\ShunAn2\Air_TFT.c
      1          /***
      2          /. -----------------------//Íâ²¿Æ÷¼þÇý¶¯//-------------------------
      3          
      4          /. ²âÊÔÓ²¼þÆ½Ì¨£ºMK60FX512VLQ15
      5           . ¹¤×÷ÆµÂÊ£º
      6           . °æÈ¨ËùÓÐ£ºÖì¸ð¾þ ÖÐÄÏ´óÑ§
      7           . ÖÆ×÷Õß£ºÖì¸ð¾þ ÖÐÄÏ´óÑ§
      8           . Çý¶¯Æ÷¼þ£ºSSD1289£¬Æ÷¼þÀ´Ô´£ºÎ¢Ñ©µç×Ó
      9           . ×îºóÐÞ¸ÄÈÕÆÚ: 20140403
     10           
     11          ***/
     12          
     13          #include "MK60F15.h"
     14          #include "ShunAn_lib.h"
     15          #include "start_ShunAn.h"
     16          #include "BlessedAlien.h"
     17          #include "GR_Bluetoothx11_12.h"
     18          #include "Air_TFT.h"
     19          #define GP_In    0                        //¶¨Òå¹Ü½ÅÊäÈë·½Ïò      GPIOx_PDDRnÀï£¬0±íÊ¾ÊäÈë£¬1±íÊ¾Êä³ö
     20          #define GP_Out   1                          //¶¨Òå¹Ü½ÅÊä³ö·½Ïò
     21          #define gpioPDOstart(x)         (x = 1)
     22          #define gpioPDOhold(x)          (x = 0)
     23          #define gpioDDrIn(x)            (x = GP_In)
     24          #define gpioDDrOut(x)           (x = GP_Out)
     25          #define gpioPDIget(x)           (x)
     26          #define gpioHIGH(x)             (x = 0xFFu)     // µãÁÁ8Î»
     27          #define gpioLOW(x)              (x = 0)
     28          #define PTD0_DDR    PTD_BASE_PTR->PDDRs.Pin0
     29          #define PTD1_DDR    PTD_BASE_PTR->PDDRs.Pin1
     30          #define PTD2_DDR    PTD_BASE_PTR->PDDRs.Pin2
     31          #define PTD3_DDR    PTD_BASE_PTR->PDDRs.Pin3
     32          #define PTD4_DDR    PTD_BASE_PTR->PDDRs.Pin4
     33          #define PTD5_DDR    PTD_BASE_PTR->PDDRs.Pin5
     34          #define PTD6_DDR    PTD_BASE_PTR->PDDRs.Pin6
     35          #define PTD7_DDR    PTD_BASE_PTR->PDDRs.Pin7
     36          #define PTD8_DDR    PTD_BASE_PTR->PDDRs.Pin8
     37          #define PTD9_DDR    PTD_BASE_PTR->PDDRs.Pin9
     38          #define PTD10_DDR   PTD_BASE_PTR->PDDRs.Pin10
     39          #define PTD11_DDR   PTD_BASE_PTR->PDDRs.Pin11
     40          #define PTD12_DDR   PTD_BASE_PTR->PDDRs.Pin12
     41          #define PTD13_DDR   PTD_BASE_PTR->PDDRs.Pin13
     42          #define PTD14_DDR   PTD_BASE_PTR->PDDRs.Pin14
     43          #define PTD15_DDR   PTD_BASE_PTR->PDDRs.Pin15
     44          #define PTE24_DDR   PTE_BASE_PTR->PDDRs.Pin24
     45          #define PTE25_DDR   PTE_BASE_PTR->PDDRs.Pin25
     46          #define PTE26_DDR   PTE_BASE_PTR->PDDRs.Pin26
     47          #define PTE27_DDR   PTE_BASE_PTR->PDDRs.Pin27
     48          #define PTE28_DDR   PTE_BASE_PTR->PDDRs.Pin28
     49          #define PTE24_OUT   PTE_BASE_PTR->PDORs.Pin24
     50          #define PTE25_OUT   PTE_BASE_PTR->PDORs.Pin25
     51          #define PTE26_OUT   PTE_BASE_PTR->PDORs.Pin26
     52          #define PTE27_OUT   PTE_BASE_PTR->PDORs.Pin27
     53          #define PTE28_OUT   PTE_BASE_PTR->PDORs.Pin28
     54          #define PTD0_OUT    PTD_BASE_PTR->PDORs.Pin0
     55          #define PTD1_OUT    PTD_BASE_PTR->PDORs.Pin1
     56          #define PTD2_OUT    PTD_BASE_PTR->PDORs.Pin2
     57          #define PTD3_OUT    PTD_BASE_PTR->PDORs.Pin3
     58          #define PTD4_OUT    PTD_BASE_PTR->PDORs.Pin4
     59          #define PTD5_OUT    PTD_BASE_PTR->PDORs.Pin5
     60          #define PTD6_OUT    PTD_BASE_PTR->PDORs.Pin6
     61          #define PTD7_OUT    PTD_BASE_PTR->PDORs.Pin7
     62          #define PTD8_OUT    PTD_BASE_PTR->PDORs.Pin8
     63          #define PTD9_OUT    PTD_BASE_PTR->PDORs.Pin9
     64          #define PTD10_OUT   PTD_BASE_PTR->PDORs.Pin10
     65          #define PTD11_OUT   PTD_BASE_PTR->PDORs.Pin11
     66          #define PTD12_OUT   PTD_BASE_PTR->PDORs.Pin12
     67          #define PTD13_OUT   PTD_BASE_PTR->PDORs.Pin13
     68          #define PTD14_OUT   PTD_BASE_PTR->PDORs.Pin14
     69          #define PTD15_OUT   PTD_BASE_PTR->PDORs.Pin15
     70          /* ¼Ä´æÆ÷ÃèÊö by Öì¸ð¾þ 20140403 */
     71          // #define IR(Index)       The index instruction specifies the RAM control indexes (R00h to RFFh).
     72          /* ¶ÁÐ¾Æ¬ */
     73          #define R00_DeviceCodeRead      0x0000u
     74          /* Õñµ´Æ÷ */
     75          #define R00_OSC                 0x0000u
     76          /* ÆÁÄ»¿ØÖÆ */
     77          #define R01_DriverOutC          0x0001u
     78          #define R02_LCDdriveAC          0x0002u
     79          /* ±È½Ï */
     80          #define R05_CmpReg              0x0005u
     81          #define R06_CmpReg              0x0006u
     82          /*  */
     83          #define R07_DisplayC            0x0007u
     84          #define R0B_FrameCycle          0x000Bu
     85          #define R0F_GateScanPos         0x000Fu
     86          /* Ä£Ê½Ñ¡Ôñ */
     87          #define R10_SleepMode           0x0010u
     88          #define R11_EntryMode           0x0011u         //
     89          /* ½Ó¿Ú¿ØÖÆ */
     90          #define R15_GenInterfaceC       0x0015u         // Ò»°ã½Ó¿Ú¿ØÖÆ // 00dx£¬ÉèÖÃÐÅºÅ¼«ÐÔ
     91          #define R16_LinePorch           0x0016u         //
     92          #define R17_VerPorch            0x0017u         // 
     93          /* Power ¿ØÖÆ */
     94          #define R03_PowerC_1            0x0003u
     95          #define R0C_PowerC_2            0x000Cu
     96          #define R0D_PowerC_3            0x000Du
     97          #define R0E_PowerC_4            0x000Eu
     98          #define R1E_PowerC_5            0x001Eu
     99          /* GRAM ²Ù×÷ */
    100          #define DRAWPOINT               0x0022u
    101          #define R22_WdataToGRAM         0x0022u         // SSD1289 selects the grayscale level according to the GDDRAM data.
    102          #define R22_RdataFrGRAM         0x0022u         // RW = W then write ; RW = R then read ;
    103          #define R23_RAMwDataMask        0x0023u
    104          #define R24_RAMwDataMask        0x0024u
    105          /* Gamma ¿ØÖÆ */
    106          // function for the 262,144-color display.
    107          #define R30_GammaC_0            0x0030u
    108          #define R31_GammaC_1            0x0031u
    109          #define R32_GammaC_2            0x0032u
    110          #define R33_GammaC_3            0x0033u
    111          #define R34_GammaC_4            0x0034u
    112          #define R35_GammaC_5            0x0035u
    113          #define R36_GammaC_6            0x0036u
    114          #define R37_GammaC_7            0x0037u
    115          #define R3A_GammaC_8            0x003Au
    116          #define R3B_GammaC_9            0x003Bu
    117          //
    118          /* ´°¿ÚÏÔÊ¾ */
    119          #define R41_VerScrC_1           0x0041u
    120          #define R42_VerScrC_2           0x0042u
    121          #define R44_LineRAMpos          0x0044u
    122          #define R45_VerticalRAMpos      0x0045u
    123          #define R46_VerticalRAMpos      0x0046u
    124          #define R48_1stWindow           0x0048u
    125          #define R49_1stWindowEnd        0x0049u
    126          #define R4A_2ndWindow           0x004Au
    127          #define R4B_2ndWindowEnd        0x004Bu
    128          #define R4E_XAD                 0x004Eu         // Make initial settings for the GDDRAM X address in the AC
    129          #define R4F_YAD                 0x004Fu
    130          /*  */
    131          #define R25_FrameFreC           0x0025u         // ¿ò¼ÜÆµÂÊ¿ØÖÆ
    132          #define R28_VcomOTP_1           0x0028u         // When OTP is access, these registers must be set accordantly.
    133          #define R29_VcomOTP_2           0x0029u 
    134          /* ¼Ä´æÆ÷ÃèÊö½áÊø */
    135          
    136          #define D0              PTD0_OUT
    137          #define D1              PTD1_OUT
    138          #define D2              PTD2_OUT
    139          #define D3              PTD3_OUT
    140          #define D4              PTD4_OUT
    141          #define D5              PTD5_OUT
    142          #define D6              PTD6_OUT
    143          #define D7              PTD7_OUT
    144          #define D8              PTD8_OUT
    145          #define D9              PTD9_OUT
    146          #define D10             PTD10_OUT
    147          #define D11             PTD11_OUT
    148          #define D12             PTD12_OUT
    149          #define D13             PTD13_OUT
    150          #define D14             PTD14_OUT
    151          #define D15             PTD15_OUT
    152          #define Data_Var        PTD_BASE_PTR->PDORwords.PIN0_15
    153          #define Data_DDR        PTD_BASE_PTR->PDDRwords.PIN0_15
    154          
    155          #define CS              PTE25_OUT
    156          
    157          #define DC              PTE24_OUT
    158          #define RS              PTE24_OUT
    159          
    160          #define WR              PTE27_OUT
    161          #define RD              PTE26_OUT
    162          #define RESET           PTE28_OUT
    163          
    164          
    165          #define X_MAX   320
    166          #define Y_MAX   240
    167          
    168          
    169          #define Pin_READ    1
    170          #define Pin_WRITE   0
    171          
    172          

   \                                 In section .rodata, align 4
    173          const uint8 Num4X8 [][8] = 
   \                     Num4X8:
   \   00000000   0x3C 0x42          DC8 60, 66, 66, 60, 0, 0, 0, 0, 68, 66, 126, 64, 0, 0, 0, 0, 102, 82
   \              0x42 0x3C    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x44 0x42    
   \              0x7E 0x40    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x66 0x52    
   \   00000012   0x4E 0x00          DC8 78, 0, 0, 0, 0, 0, 102, 74, 118, 0, 0, 0, 0, 0, 24, 20, 126, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x66 0x4A    
   \              0x76 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x18 0x14    
   \              0x7E 0x00    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0, 110, 74, 122, 0, 0, 0, 0, 0, 60, 74, 74, 48, 0, 0, 0, 0, 0
   \              0x00 0x6E    
   \              0x4A 0x7A    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3C    
   \              0x4A 0x4A    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000039   0x02 0x7A          DC8 2, 122, 6, 0, 0, 0, 0, 126, 74, 126, 0, 0, 0, 0, 0, 12, 82, 60, 0
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00 0x7E    
   \              0x4A 0x7E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x0C    
   \              0x52 0x3C    
   \              0x00         
   \   0000004C   0x00 0x00          DC8 0, 0, 0, 0
   \              0x00 0x00    
    174          {
    175              {0x3C,0x42,0x42,0x3C},/*"0",0*/
    176              {0x44,0x42,0x7E,0x40},/*"1",1*/
    177              {0x66,0x52,0x4E,0x00},/*"2",2*/
    178              {0x66,0x4A,0x76,0x00},/*"3",3*/
    179              {0x18,0x14,0x7E,0x00},/*"4",4*/
    180              {0x6E,0x4A,0x7A,0x00},/*"5",5*/       
    181              {0x3C,0x4A,0x4A,0x30},/*"6",6*/
    182              {0x00,0x02,0x7A,0x06},/*"7",7*/     
    183              {0x7E,0x4A,0x7E,0x00},/*"8",8*/
    184              {0x0C,0x52,0x3C,0x00},/*"9",9*/
    185          };
    186          

   \                                 In section .rodata, align 4
    187          const uint8 Chinese[][8] =
   \                     Chinese:
   \   00000000   0x00 0x1C          DC8 0, 28, 36, 126, 36, 36, 28, 0, 0, 16, 120, 66, 68, 64, 16, 0
   \              0x24 0x7E    
   \              0x24 0x24    
   \              0x1C 0x00    
   \              0x00 0x10    
   \              0x78 0x42    
   \              0x44 0x40    
   \              0x10 0x00    
    188          {
    189              {0x00,0x1C,0x24,0x7E,0x24,0x24,0x1C,0x00},/*"ÖÐ",0*/
    190              {0x00,0x10,0x78,0x42,0x44,0x40,0x10,0x00},/*"ÐÄ",1*/
    191          };
    192          

   \                                 In section .rodata, align 4
    193          const uint8 C12x12[][12][2] =
   \                     C12x12:
   \   00000000   0x88 0x00          DC8 136, 0, 104, 0, 255, 15, 40, 8, 64, 4, 254, 3, 2, 0, 2, 0, 254, 7
   \              0x68 0x00    
   \              0xFF 0x0F    
   \              0x28 0x08    
   \              0x40 0x04    
   \              0xFE 0x03    
   \              0x02 0x00    
   \              0x02 0x00    
   \              0xFE 0x07    
   \   00000012   0x00 0x08          DC8 0, 8, 0, 14, 0, 0, 252, 3, 36, 1, 36, 1, 36, 1, 255, 7, 36, 9, 36
   \              0x00 0x0E    
   \              0x00 0x00    
   \              0xFC 0x03    
   \              0x24 0x01    
   \              0x24 0x01    
   \              0x24 0x01    
   \              0xFF 0x07    
   \              0x24 0x09    
   \              0x24         
   \   00000025   0x09 0x24          DC8 9, 36, 9, 252, 9, 0, 8, 0, 14, 0, 0, 17, 8, 242, 7, 0, 8, 122, 10
   \              0x09 0xFC    
   \              0x09 0x00    
   \              0x08 0x00    
   \              0x0E 0x00    
   \              0x00 0x11    
   \              0x08 0xF2    
   \              0x07 0x00    
   \              0x08 0x7A    
   \              0x0A         
   \   00000038   0x4A 0x09          DC8 74, 9, 202, 8, 255, 15, 202, 8, 74, 9, 122, 10, 2, 8, 0, 0, 0, 8
   \              0xCA 0x08    
   \              0xFF 0x0F    
   \              0xCA 0x08    
   \              0x4A 0x09    
   \              0x7A 0x0A    
   \              0x02 0x08    
   \              0x00 0x00    
   \              0x00 0x08    
   \   0000004A   0xFE 0x07          DC8 254, 7, 10, 0, 138, 8, 190, 9, 170, 10, 171, 4, 170, 4, 190, 10
   \              0x0A 0x00    
   \              0x8A 0x08    
   \              0xBE 0x09    
   \              0xAA 0x0A    
   \              0xAB 0x04    
   \              0xAA 0x04    
   \              0xBE 0x0A    
   \   0000005A   0x8A 0x09          DC8 138, 9, 10, 8, 0, 0, 4, 2, 252, 3, 36, 2, 36, 0, 24, 0, 0, 0, 0, 0
   \              0x0A 0x08    
   \              0x00 0x00    
   \              0x04 0x02    
   \              0xFC 0x03    
   \              0x24 0x02    
   \              0x24 0x00    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000006E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 224, 3, 60, 0, 224, 3, 28, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x00    
   \              0xE0 0x03    
   \              0x3C 0x00    
   \              0xE0 0x03    
   \              0x1C 0x00    
   \   00000082   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 252, 3, 60, 0, 192, 3, 60
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFC 0x03    
   \              0x3C 0x00    
   \              0xC0 0x03    
   \              0x3C         
   \   00000097   0x00 0xFC          DC8 0, 252, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 2, 252, 3
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0xFC    
   \              0x03         
   \   000000AC   0x04 0x02          DC8 4, 2, 4, 2, 248, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 9
   \              0x04 0x02    
   \              0xF8 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x10 0x09    
   \   000000C2   0xDE 0x08          DC8 222, 8, 16, 4, 255, 2, 18, 1, 146, 0, 249, 9, 13, 4, 235, 3, 9, 4
   \              0x10 0x04    
   \              0xFF 0x02    
   \              0x12 0x01    
   \              0x92 0x00    
   \              0xF9 0x09    
   \              0x0D 0x04    
   \              0xEB 0x03    
   \              0x09 0x04    
   \   000000D4   0xF9 0x09          DC8 249, 9, 0, 0, 2, 2, 138, 2, 82, 2, 154, 2, 214, 2, 179, 15, 210, 2
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x8A 0x02    
   \              0x52 0x02    
   \              0x9A 0x02    
   \              0xD6 0x02    
   \              0xB3 0x0F    
   \              0xD2 0x02    
   \   000000E6   0x8A 0x02          DC8 138, 2, 82, 2, 138, 2, 2, 2, 0, 0, 0, 0, 0, 0, 48, 3, 48, 3, 0, 0
   \              0x52 0x02    
   \              0x8A 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x03    
   \              0x30 0x03    
   \              0x00 0x00    
   \   000000FA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 4, 68, 2, 0, 8, 252
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x22 0x04    
   \              0x44 0x02    
   \              0x00 0x08    
   \              0xFC         
   \   0000010F   0x07 0x24          DC8 7, 36, 8, 228, 8, 36, 5, 63, 2, 36, 5, 228, 8, 12, 8, 0, 0, 34, 8
   \              0x08 0xE4    
   \              0x08 0x24    
   \              0x05 0x3F    
   \              0x02 0x24    
   \              0x05 0xE4    
   \              0x08 0x0C    
   \              0x08 0x00    
   \              0x00 0x22    
   \              0x08         
   \   00000122   0xFE 0x07          DC8 254, 7, 34, 0, 34, 0, 254, 15, 34, 0, 0, 8, 136, 8, 68, 4, 35, 2
   \              0x22 0x00    
   \              0x22 0x00    
   \              0xFE 0x0F    
   \              0x22 0x00    
   \              0x00 0x08    
   \              0x88 0x08    
   \              0x44 0x04    
   \              0x23 0x02    
   \   00000134   0x18 0x01          DC8 24, 1, 0, 0, 252, 1, 4, 0, 255, 15, 4, 1, 252, 1, 0, 0, 221, 15, 85
   \              0x00 0x00    
   \              0xFC 0x01    
   \              0x04 0x00    
   \              0xFF 0x0F    
   \              0x04 0x01    
   \              0xFC 0x01    
   \              0x00 0x00    
   \              0xDD 0x0F    
   \              0x55         
   \   00000147   0x05 0xD5          DC8 5, 213, 7, 85, 5, 221, 15, 0, 0, 0, 8, 254, 7, 10, 0, 138, 8, 190
   \              0x07 0x55    
   \              0x05 0xDD    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x08 0xFE    
   \              0x07 0x0A    
   \              0x00 0x8A    
   \              0x08 0xBE    
   \   00000159   0x09 0xAA          DC8 9, 170, 10, 171, 4, 170, 4, 190, 10, 138, 9, 10, 8, 0, 0, 0, 8, 2
   \              0x0A 0xAB    
   \              0x04 0xAA    
   \              0x04 0xBE    
   \              0x0A 0x8A    
   \              0x09 0x0A    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x08 0x02    
   \   0000016B   0x08 0xE2          DC8 8, 226, 15, 2, 8, 2, 8, 254, 15, 66, 8, 66, 8, 66, 8, 66, 8, 0, 8
   \              0x0F 0x02    
   \              0x08 0x02    
   \              0x08 0xFE    
   \              0x0F 0x42    
   \              0x08 0x42    
   \              0x08 0x42    
   \              0x08 0x42    
   \              0x08 0x00    
   \              0x08         
   \   0000017E   0x00 0x00          DC8 0, 0, 242, 8, 146, 8, 158, 7, 0, 0, 68, 4, 100, 6, 85, 5, 206, 4
   \              0xF2 0x08    
   \              0x92 0x08    
   \              0x9E 0x07    
   \              0x00 0x00    
   \              0x44 0x04    
   \              0x64 0x06    
   \              0x55 0x05    
   \              0xCE 0x04    
   \   00000190   0x44 0x04          DC8 68, 4, 36, 6, 4, 12, 0, 0, 152, 0, 247, 15, 148, 4, 148, 8, 0, 6
   \              0x24 0x06    
   \              0x04 0x0C    
   \              0x00 0x00    
   \              0x98 0x00    
   \              0xF7 0x0F    
   \              0x94 0x04    
   \              0x94 0x08    
   \              0x00 0x06    
   \   000001A2   0xFE 0x01          DC8 254, 1, 170, 15, 170, 4, 250, 4, 170, 4, 174, 15, 0, 0, 32, 0, 160
   \              0xAA 0x0F    
   \              0xAA 0x04    
   \              0xFA 0x04    
   \              0xAA 0x04    
   \              0xAE 0x0F    
   \              0x00 0x00    
   \              0x20 0x00    
   \              0xA0         
   \   000001B3   0x0F 0x3E          DC8 15, 62, 8, 32, 12, 32, 10, 191, 9, 36, 10, 36, 12, 36, 8, 164, 15
   \              0x08 0x20    
   \              0x0C 0x20    
   \              0x0A 0xBF    
   \              0x09 0x24    
   \              0x0A 0x24    
   \              0x0C 0x24    
   \              0x08 0xA4    
   \              0x0F         
   \   000001C4   0x20 0x00          DC8 32, 0, 0, 0, 0, 8, 2, 8, 66, 8, 66, 8, 66, 8, 66, 8, 66, 8, 66, 8
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x02 0x08    
   \              0x42 0x08    
   \              0x42 0x08    
   \              0x42 0x08    
   \              0x42 0x08    
   \              0x42 0x08    
   \              0x42 0x08    
   \   000001D8   0x42 0x08          DC8 66, 8, 2, 8, 0, 8, 0, 0, 8, 8, 244, 7, 83, 1, 82, 1, 82, 1, 242, 7
   \              0x02 0x08    
   \              0x00 0x08    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF4 0x07    
   \              0x53 0x01    
   \              0x52 0x01    
   \              0x52 0x01    
   \              0xF2 0x07    
   \   000001EC   0x5A 0x01          DC8 90, 1, 86, 1, 80, 9, 240, 15, 0, 0, 0, 0, 4, 8, 4, 4, 4, 3, 252, 0
   \              0x56 0x01    
   \              0x50 0x09    
   \              0xF0 0x0F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x04 0x08    
   \              0x04 0x04    
   \              0x04 0x03    
   \              0xFC 0x00    
   \   00000200   0x25 0x00          DC8 37, 0, 38, 0, 36, 8, 36, 8, 36, 8, 228, 7, 4, 0, 0, 0, 4, 0, 124, 0
   \              0x26 0x00    
   \              0x24 0x08    
   \              0x24 0x08    
   \              0x24 0x08    
   \              0xE4 0x07    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x04 0x00    
   \              0x7C 0x00    
   \   00000214   0x80 0x03          DC8 128, 3, 224, 0, 28, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xE0 0x00    
   \              0x1C 0x00    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000229   0x00 0x00          DC8 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x02 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000240   0x20 0x08          DC8 32, 8, 224, 15, 32, 10, 32, 2, 192, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0xE0 0x0F    
   \              0x20 0x0A    
   \              0x20 0x02    
   \              0xC0 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000254   0x00 0x00          DC8 0, 0, 0, 0, 4, 2, 252, 3, 32, 0, 32, 0, 252, 3, 4, 2, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x04 0x02    
   \              0xFC 0x03    
   \              0x20 0x00    
   \              0x20 0x00    
   \              0xFC 0x03    
   \              0x04 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000269   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 32, 2, 160, 3, 96, 2, 32, 2, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x02 0xA0    
   \              0x03 0x60    
   \              0x02 0x20    
   \              0x02 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000027E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF         
   \   0000028F   0xFF 0xFF          DC8 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF 0xFF    
   \              0xFF         
   \   0000029C   0xFF 0xFF          DC8 255, 255, 255, 255, 0, 0, 32, 0, 32, 0, 32, 0, 32, 0, 0, 0, 0, 0, 0
   \              0xFF 0xFF    
   \              0x00 0x00    
   \              0x20 0x00    
   \              0x20 0x00    
   \              0x20 0x00    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000002AF   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 1, 4, 2, 4, 2, 4, 2, 248, 1, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x01 0x04    
   \              0x02 0x04    
   \              0x02 0x04    
   \              0x02 0xF8    
   \              0x01 0x00    
   \              0x00         
   \   000002C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 2, 252, 3, 0, 2, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x02    
   \              0xFC 0x03    
   \              0x00 0x02    
   \              0x00 0x00    
   \   000002DA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 3, 132, 2, 68, 2, 36
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x18 0x03    
   \              0x84 0x02    
   \              0x44 0x02    
   \              0x24         
   \   000002EF   0x02 0x18          DC8 2, 24, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 1, 4, 2, 36
   \              0x02 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x01 0x04    
   \              0x02 0x24    
   \   00000305   0x02 0x24          DC8 2, 36, 2, 216, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0
   \              0x02 0xD8    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x00         
   \   0000031A   0xB0 0x00          DC8 176, 0, 136, 0, 252, 3, 128, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x88 0x00    
   \              0xFC 0x03    
   \              0x80 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   0000032E   0x00 0x00          DC8 0, 0, 60, 1, 36, 2, 36, 2, 36, 2, 196, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x3C 0x01    
   \              0x24 0x02    
   \              0x24 0x02    
   \              0x24 0x02    
   \              0xC4 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000343   0x00 0x00          DC8 0, 0, 0, 0, 0, 248, 1, 36, 2, 36, 2, 44, 2, 192, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x01 0x24    
   \              0x02 0x24    
   \              0x02 0x2C    
   \              0x02 0xC0    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000357   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 4, 0, 228, 3, 28, 0, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x0C    
   \              0x00 0x04    
   \              0x00 0xE4    
   \              0x03 0x1C    
   \              0x00 0x04    
   \              0x00 0x00    
   \              0x00         
   \   0000036C   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 216, 1, 36, 2, 36, 2, 36, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xD8 0x01    
   \              0x24 0x02    
   \              0x24 0x02    
   \              0x24 0x02    
   \   00000380   0xD8 0x01          DC8 216, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 0, 68, 3, 68
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x38 0x00    
   \              0x44 0x03    
   \              0x44         
   \   00000395   0x02 0x44          DC8 2, 68, 2, 248, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x02 0xF8    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    194          {
    195            
    196            {{0x88,0x00},{0x68,0x00},{0xFF,0x0F},{0x28,0x08},{0x40,0x04},{0xFE,0x03},{0x02,0x00},{0x02,0x00},{0xFE,0x07},{0x00,0x08},{0x00,0x0E},{0x00,0x00}},/*"»ú",6*/
    197            {{0xFC,0x03},{0x24,0x01},{0x24,0x01},{0x24,0x01},{0xFF,0x07},{0x24,0x09},{0x24,0x09},{0x24,0x09},{0xFC,0x09},{0x00,0x08},{0x00,0x0E},{0x00,0x00}},/*"µç",7*/
    198            {{0x11,0x08},{0xF2,0x07},{0x00,0x08},{0x7A,0x0A},{0x4A,0x09},{0xCA,0x08},{0xFF,0x0F},{0xCA,0x08},{0x4A,0x09},{0x7A,0x0A},{0x02,0x08},{0x00,0x00}},/*"ËÙ",10*/
    199            {{0x00,0x08},{0xFE,0x07},{0x0A,0x00},{0x8A,0x08},{0xBE,0x09},{0xAA,0x0A},{0xAB,0x04},{0xAA,0x04},{0xBE,0x0A},{0x8A,0x09},{0x0A,0x08},{0x00,0x00}},/*"¶È",11*/
    200            {{0x04,0x02},{0xFC,0x03},{0x24,0x02},{0x24,0x00},{0x18,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"P",14*/
    201            {{0x1C,0x00},{0xE0,0x03},{0x3C,0x00},{0xE0,0x03},{0x1C,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"W",15*/
    202            {{0xFC,0x03},{0x3C,0x00},{0xC0,0x03},{0x3C,0x00},{0xFC,0x03},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"M",16*/
    203            {{0x04,0x02},{0xFC,0x03},{0x04,0x02},{0x04,0x02},{0xF8,0x01},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"D",17*/
    204            // ÒÔÏÂ×Ö·ûÓÃÓÚµçÉè±ÈÈü
    205            {{0x10,0x09},{0xDE,0x08},{0x10,0x04},{0xFF,0x02},{0x12,0x01},{0x92,0x00},{0xF9,0x09},{0x0D,0x04},{0xEB,0x03},{0x09,0x04},{0xF9,0x09},{0x00,0x00}},/*"Æµ",18*/
    206            {{0x02,0x02},{0x8A,0x02},{0x52,0x02},{0x9A,0x02},{0xD6,0x02},{0xB3,0x0F},{0xD2,0x02},{0x8A,0x02},{0x52,0x02},{0x8A,0x02},{0x02,0x02},{0x00,0x00}},/*"ÂÊ",19*/
    207            {{0x00,0x00},{0x00,0x00},{0x30,0x03},{0x30,0x03},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"£º",20*/
    208            {{0x22,0x04},{0x44,0x02},{0x00,0x08},{0xFC,0x07},{0x24,0x08},{0xE4,0x08},{0x24,0x05},{0x3F,0x02},{0x24,0x05},{0xE4,0x08},{0x0C,0x08},{0x00,0x00}},/*"²¨",21*/
    209            {{0x22,0x08},{0xFE,0x07},{0x22,0x00},{0x22,0x00},{0xFE,0x0F},{0x22,0x00},{0x00,0x08},{0x88,0x08},{0x44,0x04},{0x23,0x02},{0x18,0x01},{0x00,0x00}},/*"ÐÎ",22*/
    210            {{0xFC,0x01},{0x04,0x00},{0xFF,0x0F},{0x04,0x01},{0xFC,0x01},{0x00,0x00},{0xDD,0x0F},{0x55,0x05},{0xD5,0x07},{0x55,0x05},{0xDD,0x0F},{0x00,0x00}},/*"·ù",23*/
    211            {{0x00,0x08},{0xFE,0x07},{0x0A,0x00},{0x8A,0x08},{0xBE,0x09},{0xAA,0x0A},{0xAB,0x04},{0xAA,0x04},{0xBE,0x0A},{0x8A,0x09},{0x0A,0x08},{0x00,0x00}},/*"¶È",24*/
    212            {{0x00,0x08},{0x02,0x08},{0xE2,0x0F},{0x02,0x08},{0x02,0x08},{0xFE,0x0F},{0x42,0x08},{0x42,0x08},{0x42,0x08},{0x42,0x08},{0x00,0x08},{0x00,0x00}},/*"Õý",25*/
    213            {{0xF2,0x08},{0x92,0x08},{0x9E,0x07},{0x00,0x00},{0x44,0x04},{0x64,0x06},{0x55,0x05},{0xCE,0x04},{0x44,0x04},{0x24,0x06},{0x04,0x0C},{0x00,0x00}},/*"ÏÒ",26*/
    214            {{0x98,0x00},{0xF7,0x0F},{0x94,0x04},{0x94,0x08},{0x00,0x06},{0xFE,0x01},{0xAA,0x0F},{0xAA,0x04},{0xFA,0x04},{0xAA,0x04},{0xAE,0x0F},{0x00,0x00}},/*"¾â",27*/
    215            {{0x20,0x00},{0xA0,0x0F},{0x3E,0x08},{0x20,0x0C},{0x20,0x0A},{0xBF,0x09},{0x24,0x0A},{0x24,0x0C},{0x24,0x08},{0xA4,0x0F},{0x20,0x00},{0x00,0x00}},/*"³Ý",28*/
    216            {{0x00,0x08},{0x02,0x08},{0x42,0x08},{0x42,0x08},{0x42,0x08},{0x42,0x08},{0x42,0x08},{0x42,0x08},{0x42,0x08},{0x02,0x08},{0x00,0x08},{0x00,0x00}},/*"Èý",29*/
    217            {{0x08,0x08},{0xF4,0x07},{0x53,0x01},{0x52,0x01},{0x52,0x01},{0xF2,0x07},{0x5A,0x01},{0x56,0x01},{0x50,0x09},{0xF0,0x0F},{0x00,0x00},{0x00,0x00}},/*"½Ç",30*/
    218            {{0x04,0x08},{0x04,0x04},{0x04,0x03},{0xFC,0x00},{0x25,0x00},{0x26,0x00},{0x24,0x08},{0x24,0x08},{0x24,0x08},{0xE4,0x07},{0x04,0x00},{0x00,0x00}},/*"·½",31*/
    219            {{0x04,0x00},{0x7C,0x00},{0x80,0x03},{0xE0,0x00},{0x1C,0x00},{0x04,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"V",32*/
    220            {{0x00,0x00},{0x00,0x02},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*".",33*/
    221            {{0x20,0x08},{0xE0,0x0F},{0x20,0x0A},{0x20,0x02},{0xC0,0x01},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"p",34*/
    222            {{0x04,0x02},{0xFC,0x03},{0x20,0x00},{0x20,0x00},{0xFC,0x03},{0x04,0x02},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"H",35*/
    223            {{0x00,0x00},{0x20,0x02},{0xA0,0x03},{0x60,0x02},{0x20,0x02},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"z",36*/
    224            {{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF},{0xFF,0xFF}},/*CLEAR,37*/
    225            {{0x00,0x00},{0x20,0x00},{0x20,0x00},{0x20,0x00},{0x20,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"-",38*/
    226            {{0xF8,0x01},{0x04,0x02},{0x04,0x02},{0x04,0x02},{0xF8,0x01},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"0",39*/
    227            {{0x00,0x00},{0x08,0x02},{0xFC,0x03},{0x00,0x02},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"1",40*/
    228            {{0x18,0x03},{0x84,0x02},{0x44,0x02},{0x24,0x02},{0x18,0x02},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"2",41*/
    229            {{0x08,0x01},{0x04,0x02},{0x24,0x02},{0x24,0x02},{0xD8,0x01},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"3",42*/
    230            {{0x40,0x00},{0xB0,0x00},{0x88,0x00},{0xFC,0x03},{0x80,0x02},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"4",43*/
    231            {{0x3C,0x01},{0x24,0x02},{0x24,0x02},{0x24,0x02},{0xC4,0x01},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"5",44*/
    232            {{0xF8,0x01},{0x24,0x02},{0x24,0x02},{0x2C,0x02},{0xC0,0x01},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"6",45*/
    233            {{0x0C,0x00},{0x04,0x00},{0xE4,0x03},{0x1C,0x00},{0x04,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"7",46*/
    234            {{0xD8,0x01},{0x24,0x02},{0x24,0x02},{0x24,0x02},{0xD8,0x01},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"8",47*/
    235            {{0x38,0x00},{0x44,0x03},{0x44,0x02},{0x44,0x02},{0xF8,0x01},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00},{0x00,0x00}},/*"9",48*/
    236            
    237          };
    238          

   \                                 In section .rodata, align 4
    239          const uint8 C6x8[][6]=
   \                     C6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
    240          {
    241              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
    242              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
    243              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
    244              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
    245              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
    246              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
    247              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
    248              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
    249              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
    250              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
    251              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
    252              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
    253              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
    254              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
    255              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
    256              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
    257              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
    258              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
    259              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
    260              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
    261              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
    262              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
    263              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
    264              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
    265              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
    266              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
    267              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
    268              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
    269              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
    270              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
    271              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
    272              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
    273              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
    274              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
    275              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
    276              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
    277              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
    278              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
    279              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
    280              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
    281              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
    282              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
    283              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
    284              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
    285              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
    286              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
    287              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
    288              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
    289              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
    290              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
    291              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
    292              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
    293              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
    294              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
    295              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
    296              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
    297              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
    298              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
    299              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
    300              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
    301              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
    302              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
    303              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
    304              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
    305              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
    306              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
    307              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
    308              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
    309              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
    310              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
    311              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
    312              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
    313              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
    314              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
    315              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
    316              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
    317              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
    318              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
    319              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
    320              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
    321              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
    322              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
    323              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
    324              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
    325              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
    326              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
    327              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
    328              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
    329              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    330              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    331              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    332              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    333          
    334          
    335          };
    336          
    337          

   \                                 In section .bss, align 4
    338           char data_PWM1[308];
   \                     data_PWM1:
   \   00000000                      DS8 308

   \                                 In section .bss, align 4
    339           char data_PWM2[308];
   \                     data_PWM2:
   \   00000000                      DS8 308

   \                                 In section .bss, align 4
    340            char data_PWM3[308];
   \                     data_PWM3:
   \   00000000                      DS8 308

   \                                 In section .bss, align 4
    341             char data_PWM4[308];
   \                     data_PWM4:
   \   00000000                      DS8 308
    342          
    343          
    344          
    345          
    346          
    347          
    348          // 8x8·¶Î§ÄÚÊä³ö×ÖÄ££¬ÒÔ×óÏÂ½ÇÎª±ê×¼Î»ÖÃ²Î¿¼

   \                                 In section .text, align 2, keep-with-next
    349          void LCD_8x8show(uint16 startXPos,uint8 YPos,uint16 color,uint8 Num)
    350          {
   \                     LCD_8x8show: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    351              uint8 LineLoop = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    352              uint8 ColLoop = 0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    353              for(LineLoop=0;LineLoop<8;LineLoop++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x4680             MOV      R8,R0
   \   00000018   0xE024             B.N      ??LCD_8x8show_0
    354              {
    355                  for(ColLoop=0;ColLoop<8;ColLoop++)
    356                  {
    357                      if(0x80 == (0x80&((Chinese[Num][LineLoop])<<ColLoop)))
   \                     ??LCD_8x8show_1: (+1)
   \   0000001A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000024   0xEB10 0x00C7      ADDS     R0,R0,R7, LSL #+3
   \   00000028   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000002C   0xFA10 0xF009      LSLS     R0,R0,R9
   \   00000030   0x0600             LSLS     R0,R0,#+24
   \   00000032   0xD50E             BPL.N    ??LCD_8x8show_2
    358                      {
    359                          LCD_SetCursor(startXPos+LineLoop,YPos+ColLoop);
   \   00000034   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000038   0xFA59 0xF185      UXTAB    R1,R9,R5
   \   0000003C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000003E   0xFA54 0xF088      UXTAB    R0,R4,R8
   \   00000042   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000044   0x.... 0x....      BL       LCD_SetCursor
    360                          LCD_writeReg(DRAWPOINT,color);
   \   00000048   0x0031             MOVS     R1,R6
   \   0000004A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000004C   0x2022             MOVS     R0,#+34
   \   0000004E   0x.... 0x....      BL       LCD_writeReg
    361                      }
    362                  }
   \                     ??LCD_8x8show_2: (+1)
   \   00000052   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_8x8show_3: (+1)
   \   00000056   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000005A   0xF1B9 0x0F08      CMP      R9,#+8
   \   0000005E   0xDBDC             BLT.N    ??LCD_8x8show_1
   \   00000060   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_8x8show_0: (+1)
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000006C   0xDA02             BGE.N    ??LCD_8x8show_4
   \   0000006E   0xF05F 0x0900      MOVS     R9,#+0
   \   00000072   0xE7F0             B.N      ??LCD_8x8show_3
    363              }
    364          }
   \                     ??LCD_8x8show_4: (+1)
   \   00000074   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    365          

   \                                 In section .text, align 2, keep-with-next
    366          void LCD_12x12show(uint16 startXPos,uint8 YPos,uint16 color,uint8 Num)
    367          {
   \                     LCD_12x12show: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    368              // ÒÔÏÂ±ØÐë¸÷ÖÖÐÞ¸Ä
    369              uint8 LineLoop = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    370              uint8 ColLoop = 0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    371              for(LineLoop=0;LineLoop<12;LineLoop++)
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x4680             MOV      R8,R0
   \   00000018   0xE045             B.N      ??LCD_12x12show_0
    372              {
    373                  for(ColLoop=0;ColLoop<12;ColLoop++)
    374                  {
    375                      if(0x80 == (0x80&((C12x12[Num][LineLoop][0])<<ColLoop)))
   \                     ??LCD_12x12show_1: (+1)
   \   0000001A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000020   0x2018             MOVS     R0,#+24
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000026   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   0000002A   0xF810 0x0018      LDRB     R0,[R0, R8, LSL #+1]
   \   0000002E   0xFA10 0xF009      LSLS     R0,R0,R9
   \   00000032   0x0600             LSLS     R0,R0,#+24
   \   00000034   0xD50E             BPL.N    ??LCD_12x12show_2
    376                      {
    377                          LCD_SetCursor(startXPos+LineLoop,YPos+ColLoop);
   \   00000036   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000003A   0xFA59 0xF185      UXTAB    R1,R9,R5
   \   0000003E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000040   0xFA54 0xF088      UXTAB    R0,R4,R8
   \   00000044   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000046   0x.... 0x....      BL       LCD_SetCursor
    378                          LCD_writeReg(DRAWPOINT,color);
   \   0000004A   0x0031             MOVS     R1,R6
   \   0000004C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000004E   0x2022             MOVS     R0,#+34
   \   00000050   0x.... 0x....      BL       LCD_writeReg
    379                      }
    380                      if(0x80 == (0x80&((C12x12[Num][LineLoop][1])<<ColLoop)))
   \                     ??LCD_12x12show_2: (+1)
   \   00000054   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000058   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000005A   0x2018             MOVS     R0,#+24
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   00000060   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000064   0xEB10 0x0048      ADDS     R0,R0,R8, LSL #+1
   \   00000068   0x7840             LDRB     R0,[R0, #+1]
   \   0000006A   0xFA10 0xF009      LSLS     R0,R0,R9
   \   0000006E   0x0600             LSLS     R0,R0,#+24
   \   00000070   0xD510             BPL.N    ??LCD_12x12show_3
    381                      {
    382                          LCD_SetCursor(startXPos+LineLoop,YPos+ColLoop-8);
   \   00000072   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000076   0xFA59 0xF085      UXTAB    R0,R9,R5
   \   0000007A   0xF1B0 0x0108      SUBS     R1,R0,#+8
   \   0000007E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000080   0xFA54 0xF088      UXTAB    R0,R4,R8
   \   00000084   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000086   0x.... 0x....      BL       LCD_SetCursor
    383                          LCD_writeReg(DRAWPOINT,color);
   \   0000008A   0x0031             MOVS     R1,R6
   \   0000008C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000008E   0x2022             MOVS     R0,#+34
   \   00000090   0x.... 0x....      BL       LCD_writeReg
    384                      }
    385                  }
   \                     ??LCD_12x12show_3: (+1)
   \   00000094   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_12x12show_4: (+1)
   \   00000098   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000009C   0xF1B9 0x0F0C      CMP      R9,#+12
   \   000000A0   0xDBBB             BLT.N    ??LCD_12x12show_1
   \   000000A2   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_12x12show_0: (+1)
   \   000000A6   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000AA   0xF1B8 0x0F0C      CMP      R8,#+12
   \   000000AE   0xDA02             BGE.N    ??LCD_12x12show_5
   \   000000B0   0xF05F 0x0900      MOVS     R9,#+0
   \   000000B4   0xE7F0             B.N      ??LCD_12x12show_4
    386              }
    387              //
    388          }
   \                     ??LCD_12x12show_5: (+1)
   \   000000B6   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    389          
    390          
    391          

   \                                 In section .text, align 2, keep-with-next
    392          void LCD_PinInit(uint8 RW)
    393          {
    394              // Êä³ö¶Ë³õÊ¼»¯
    395              PORTx[PTD]->PCR[0] = PORT_PCR_MUX(1);
   \                     LCD_PinInit: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000004   0x68C9             LDR      R1,[R1, #+12]
   \   00000006   0xF44F 0x7280      MOV      R2,#+256
   \   0000000A   0x600A             STR      R2,[R1, #+0]
    396              PORTx[PTD]->PCR[1] = PORT_PCR_MUX(1);
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000010   0x68C9             LDR      R1,[R1, #+12]
   \   00000012   0xF44F 0x7280      MOV      R2,#+256
   \   00000016   0x604A             STR      R2,[R1, #+4]
    397              PORTx[PTD]->PCR[2] = PORT_PCR_MUX(1);
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000001C   0x68C9             LDR      R1,[R1, #+12]
   \   0000001E   0xF44F 0x7280      MOV      R2,#+256
   \   00000022   0x608A             STR      R2,[R1, #+8]
    398              PORTx[PTD]->PCR[3] = PORT_PCR_MUX(1);
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000028   0x68C9             LDR      R1,[R1, #+12]
   \   0000002A   0xF44F 0x7280      MOV      R2,#+256
   \   0000002E   0x60CA             STR      R2,[R1, #+12]
    399              PORTx[PTD]->PCR[4] = PORT_PCR_MUX(1);
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000034   0x68C9             LDR      R1,[R1, #+12]
   \   00000036   0xF44F 0x7280      MOV      R2,#+256
   \   0000003A   0x610A             STR      R2,[R1, #+16]
    400              PORTx[PTD]->PCR[5] = PORT_PCR_MUX(1);
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000040   0x68C9             LDR      R1,[R1, #+12]
   \   00000042   0xF44F 0x7280      MOV      R2,#+256
   \   00000046   0x614A             STR      R2,[R1, #+20]
    401              PORTx[PTD]->PCR[6] = PORT_PCR_MUX(1);
   \   00000048   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000004C   0x68C9             LDR      R1,[R1, #+12]
   \   0000004E   0xF44F 0x7280      MOV      R2,#+256
   \   00000052   0x618A             STR      R2,[R1, #+24]
    402              PORTx[PTD]->PCR[7] = PORT_PCR_MUX(1);
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000058   0x68C9             LDR      R1,[R1, #+12]
   \   0000005A   0xF44F 0x7280      MOV      R2,#+256
   \   0000005E   0x61CA             STR      R2,[R1, #+28]
    403              PORTx[PTD]->PCR[8] = PORT_PCR_MUX(1);
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000064   0x68C9             LDR      R1,[R1, #+12]
   \   00000066   0xF44F 0x7280      MOV      R2,#+256
   \   0000006A   0x620A             STR      R2,[R1, #+32]
    404              PORTx[PTD]->PCR[9] = PORT_PCR_MUX(1);
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000070   0x68C9             LDR      R1,[R1, #+12]
   \   00000072   0xF44F 0x7280      MOV      R2,#+256
   \   00000076   0x624A             STR      R2,[R1, #+36]
    405              PORTx[PTD]->PCR[10] = PORT_PCR_MUX(1);
   \   00000078   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   0000007C   0x68C9             LDR      R1,[R1, #+12]
   \   0000007E   0xF44F 0x7280      MOV      R2,#+256
   \   00000082   0x628A             STR      R2,[R1, #+40]
    406              PORTx[PTD]->PCR[11] = PORT_PCR_MUX(1);
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000088   0x68C9             LDR      R1,[R1, #+12]
   \   0000008A   0xF44F 0x7280      MOV      R2,#+256
   \   0000008E   0x62CA             STR      R2,[R1, #+44]
    407              PORTx[PTD]->PCR[12] = PORT_PCR_MUX(1);
   \   00000090   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000094   0x68C9             LDR      R1,[R1, #+12]
   \   00000096   0xF44F 0x7280      MOV      R2,#+256
   \   0000009A   0x630A             STR      R2,[R1, #+48]
    408              PORTx[PTD]->PCR[13] = PORT_PCR_MUX(1);
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000A0   0x68C9             LDR      R1,[R1, #+12]
   \   000000A2   0xF44F 0x7280      MOV      R2,#+256
   \   000000A6   0x634A             STR      R2,[R1, #+52]
    409              PORTx[PTD]->PCR[14] = PORT_PCR_MUX(1);
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000AC   0x68C9             LDR      R1,[R1, #+12]
   \   000000AE   0xF44F 0x7280      MOV      R2,#+256
   \   000000B2   0x638A             STR      R2,[R1, #+56]
    410              PORTx[PTD]->PCR[15] = PORT_PCR_MUX(1);
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000B8   0x68C9             LDR      R1,[R1, #+12]
   \   000000BA   0xF44F 0x7280      MOV      R2,#+256
   \   000000BE   0x63CA             STR      R2,[R1, #+60]
    411              if(Pin_WRITE == RW)
   \   000000C0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C2   0x2800             CMP      R0,#+0
   \   000000C4   0xF040 0x8081      BNE.W    ??LCD_PinInit_0
    412              {
    413                  gpioDDrOut(PTD0_DDR);
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000D6   0x6008             STR      R0,[R1, #+0]
    414                  gpioDDrOut(PTD1_DDR);
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000E2   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000E6   0x6008             STR      R0,[R1, #+0]
    415                  gpioDDrOut(PTD2_DDR);
   \   000000E8   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000F6   0x6008             STR      R0,[R1, #+0]
    416                  gpioDDrOut(PTD3_DDR);
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000106   0x6008             STR      R0,[R1, #+0]
    417                  gpioDDrOut(PTD4_DDR);
   \   00000108   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000010C   0x6800             LDR      R0,[R0, #+0]
   \   0000010E   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000116   0x6008             STR      R0,[R1, #+0]
    418                  gpioDDrOut(PTD5_DDR);
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000126   0x6008             STR      R0,[R1, #+0]
    419                  gpioDDrOut(PTD6_DDR);
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000136   0x6008             STR      R0,[R1, #+0]
    420                  gpioDDrOut(PTD7_DDR);
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000146   0x6008             STR      R0,[R1, #+0]
    421                  gpioDDrOut(PTD8_DDR);
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000014C   0x6800             LDR      R0,[R0, #+0]
   \   0000014E   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000156   0x6008             STR      R0,[R1, #+0]
    422                  gpioDDrOut(PTD9_DDR);
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0xF450 0x7000      ORRS     R0,R0,#0x200
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000166   0x6008             STR      R0,[R1, #+0]
    423                  gpioDDrOut(PTD10_DDR);
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000016C   0x6800             LDR      R0,[R0, #+0]
   \   0000016E   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000172   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000176   0x6008             STR      R0,[R1, #+0]
    424                  gpioDDrOut(PTD11_DDR);
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   00000182   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000186   0x6008             STR      R0,[R1, #+0]
    425                  gpioDDrOut(PTD12_DDR);
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000196   0x6008             STR      R0,[R1, #+0]
    426                  gpioDDrOut(PTD13_DDR);
   \   00000198   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000019C   0x6800             LDR      R0,[R0, #+0]
   \   0000019E   0xF450 0x5000      ORRS     R0,R0,#0x2000
   \   000001A2   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001A6   0x6008             STR      R0,[R1, #+0]
    427                  gpioDDrOut(PTD14_DDR);
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001AC   0x6800             LDR      R0,[R0, #+0]
   \   000001AE   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   000001B2   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001B6   0x6008             STR      R0,[R1, #+0]
    428                  gpioDDrOut(PTD15_DDR);
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001BC   0x6800             LDR      R0,[R0, #+0]
   \   000001BE   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   000001C2   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001C6   0x6008             STR      R0,[R1, #+0]
   \   000001C8   0xE07F             B.N      ??LCD_PinInit_1
    429              }
    430              else // Pin_READ == RW
    431              {
    432                  gpioDDrIn(PTD0_DDR);
   \                     ??LCD_PinInit_0: (+1)
   \   000001CA   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001CE   0x6800             LDR      R0,[R0, #+0]
   \   000001D0   0x0840             LSRS     R0,R0,#+1
   \   000001D2   0x0040             LSLS     R0,R0,#+1
   \   000001D4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001D8   0x6008             STR      R0,[R1, #+0]
    433                  gpioDDrIn(PTD1_DDR);
   \   000001DA   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001DE   0x6800             LDR      R0,[R0, #+0]
   \   000001E0   0xF030 0x0002      BICS     R0,R0,#0x2
   \   000001E4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001E8   0x6008             STR      R0,[R1, #+0]
    434                  gpioDDrIn(PTD2_DDR);
   \   000001EA   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001EE   0x6800             LDR      R0,[R0, #+0]
   \   000001F0   0xF030 0x0004      BICS     R0,R0,#0x4
   \   000001F4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001F8   0x6008             STR      R0,[R1, #+0]
    435                  gpioDDrIn(PTD3_DDR);
   \   000001FA   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001FE   0x6800             LDR      R0,[R0, #+0]
   \   00000200   0xF030 0x0008      BICS     R0,R0,#0x8
   \   00000204   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000208   0x6008             STR      R0,[R1, #+0]
    436                  gpioDDrIn(PTD4_DDR);
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000020E   0x6800             LDR      R0,[R0, #+0]
   \   00000210   0xF030 0x0010      BICS     R0,R0,#0x10
   \   00000214   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000218   0x6008             STR      R0,[R1, #+0]
    437                  gpioDDrIn(PTD5_DDR);
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000021E   0x6800             LDR      R0,[R0, #+0]
   \   00000220   0xF030 0x0020      BICS     R0,R0,#0x20
   \   00000224   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000228   0x6008             STR      R0,[R1, #+0]
    438                  gpioDDrIn(PTD6_DDR);
   \   0000022A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000022E   0x6800             LDR      R0,[R0, #+0]
   \   00000230   0xF030 0x0040      BICS     R0,R0,#0x40
   \   00000234   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000238   0x6008             STR      R0,[R1, #+0]
    439                  gpioDDrIn(PTD7_DDR);
   \   0000023A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000023E   0x6800             LDR      R0,[R0, #+0]
   \   00000240   0xF030 0x0080      BICS     R0,R0,#0x80
   \   00000244   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000248   0x6008             STR      R0,[R1, #+0]
    440                  gpioDDrIn(PTD8_DDR);
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000024E   0x6800             LDR      R0,[R0, #+0]
   \   00000250   0xF430 0x7080      BICS     R0,R0,#0x100
   \   00000254   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000258   0x6008             STR      R0,[R1, #+0]
    441                  gpioDDrIn(PTD9_DDR);
   \   0000025A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000025E   0x6800             LDR      R0,[R0, #+0]
   \   00000260   0xF430 0x7000      BICS     R0,R0,#0x200
   \   00000264   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000268   0x6008             STR      R0,[R1, #+0]
    442                  gpioDDrIn(PTD10_DDR);
   \   0000026A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000026E   0x6800             LDR      R0,[R0, #+0]
   \   00000270   0xF430 0x6080      BICS     R0,R0,#0x400
   \   00000274   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000278   0x6008             STR      R0,[R1, #+0]
    443                  gpioDDrIn(PTD11_DDR);
   \   0000027A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000027E   0x6800             LDR      R0,[R0, #+0]
   \   00000280   0xF430 0x6000      BICS     R0,R0,#0x800
   \   00000284   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000288   0x6008             STR      R0,[R1, #+0]
    444                  gpioDDrIn(PTD12_DDR);
   \   0000028A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000028E   0x6800             LDR      R0,[R0, #+0]
   \   00000290   0xF430 0x5080      BICS     R0,R0,#0x1000
   \   00000294   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000298   0x6008             STR      R0,[R1, #+0]
    445                  gpioDDrIn(PTD13_DDR);
   \   0000029A   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   0000029E   0x6800             LDR      R0,[R0, #+0]
   \   000002A0   0xF430 0x5000      BICS     R0,R0,#0x2000
   \   000002A4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000002A8   0x6008             STR      R0,[R1, #+0]
    446                  gpioDDrIn(PTD14_DDR);
   \   000002AA   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000002AE   0x6800             LDR      R0,[R0, #+0]
   \   000002B0   0xF430 0x4080      BICS     R0,R0,#0x4000
   \   000002B4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000002B8   0x6008             STR      R0,[R1, #+0]
    447                  gpioDDrIn(PTD15_DDR);
   \   000002BA   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000002BE   0x6800             LDR      R0,[R0, #+0]
   \   000002C0   0xF430 0x4000      BICS     R0,R0,#0x8000
   \   000002C4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000002C8   0x6008             STR      R0,[R1, #+0]
    448              }
    449              // Ð¾Æ¬¿ØÖÆ¶Ë³õÊ¼»¯
    450              PORTx[PTE]->PCR[24] = PORT_PCR_MUX(1);
   \                     ??LCD_PinInit_1: (+1)
   \   000002CA   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000002CE   0x6900             LDR      R0,[R0, #+16]
   \   000002D0   0xF44F 0x7180      MOV      R1,#+256
   \   000002D4   0x6601             STR      R1,[R0, #+96]
    451              PORTx[PTE]->PCR[25] = PORT_PCR_MUX(1);
   \   000002D6   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000002DA   0x6900             LDR      R0,[R0, #+16]
   \   000002DC   0xF44F 0x7180      MOV      R1,#+256
   \   000002E0   0x6641             STR      R1,[R0, #+100]
    452              PORTx[PTE]->PCR[26] = PORT_PCR_MUX(1);
   \   000002E2   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000002E6   0x6900             LDR      R0,[R0, #+16]
   \   000002E8   0xF44F 0x7180      MOV      R1,#+256
   \   000002EC   0x6681             STR      R1,[R0, #+104]
    453              PORTx[PTE]->PCR[27] = PORT_PCR_MUX(1);
   \   000002EE   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000002F2   0x6900             LDR      R0,[R0, #+16]
   \   000002F4   0xF44F 0x7180      MOV      R1,#+256
   \   000002F8   0x66C1             STR      R1,[R0, #+108]
    454              PORTx[PTE]->PCR[28] = PORT_PCR_MUX(1);
   \   000002FA   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   000002FE   0x6900             LDR      R0,[R0, #+16]
   \   00000300   0xF44F 0x7180      MOV      R1,#+256
   \   00000304   0x6701             STR      R1,[R0, #+112]
    455              gpioDDrOut(PTE24_DDR);
   \   00000306   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x400ff114
   \   0000030A   0x6800             LDR      R0,[R0, #+0]
   \   0000030C   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000310   0x.... 0x....      LDR.W    R1,??DataTable8_1  ;; 0x400ff114
   \   00000314   0x6008             STR      R0,[R1, #+0]
    456              gpioDDrOut(PTE25_DDR);
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x400ff114
   \   0000031A   0x6800             LDR      R0,[R0, #+0]
   \   0000031C   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000320   0x.... 0x....      LDR.W    R1,??DataTable8_1  ;; 0x400ff114
   \   00000324   0x6008             STR      R0,[R1, #+0]
    457              gpioDDrOut(PTE26_DDR);
   \   00000326   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x400ff114
   \   0000032A   0x6800             LDR      R0,[R0, #+0]
   \   0000032C   0xF050 0x6080      ORRS     R0,R0,#0x4000000
   \   00000330   0x.... 0x....      LDR.W    R1,??DataTable8_1  ;; 0x400ff114
   \   00000334   0x6008             STR      R0,[R1, #+0]
    458              gpioDDrOut(PTE27_DDR);
   \   00000336   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x400ff114
   \   0000033A   0x6800             LDR      R0,[R0, #+0]
   \   0000033C   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   00000340   0x.... 0x....      LDR.W    R1,??DataTable8_1  ;; 0x400ff114
   \   00000344   0x6008             STR      R0,[R1, #+0]
    459              gpioDDrOut(PTE28_DDR);
   \   00000346   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x400ff114
   \   0000034A   0x6800             LDR      R0,[R0, #+0]
   \   0000034C   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000350   0x.... 0x....      LDR.W    R1,??DataTable8_1  ;; 0x400ff114
   \   00000354   0x6008             STR      R0,[R1, #+0]
    460          }
   \   00000356   0x4770             BX       LR               ;; return
    461              

   \                                 In section .text, align 2, keep-with-next
    462          void LCD_writeIndex(uint16 Index)
    463          {
    464              DC = 0;
   \                     LCD_writeIndex: (+1)
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0xF031 0x7180      BICS     R1,R1,#0x1000000
   \   0000000A   0x.... 0x....      LDR.W    R2,??DataTable8_2  ;; 0x400ff100
   \   0000000E   0x6011             STR      R1,[R2, #+0]
    465              CS = 0;
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000014   0x6809             LDR      R1,[R1, #+0]
   \   00000016   0xF031 0x7100      BICS     R1,R1,#0x2000000
   \   0000001A   0x.... 0x....      LDR.W    R2,??DataTable8_2  ;; 0x400ff100
   \   0000001E   0x6011             STR      R1,[R2, #+0]
    466              Data_Var = Index;
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable8_3  ;; 0x400ff0c0
   \   00000024   0x8008             STRH     R0,[R1, #+0]
    467              WR = 0;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF030 0x6000      BICS     R0,R0,#0x8000000
   \   00000030   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000034   0x6008             STR      R0,[R1, #+0]
    468              WR = 1;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   00000040   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000044   0x6008             STR      R0,[R1, #+0]
    469              CS = 1;
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000054   0x6008             STR      R0,[R1, #+0]
    470          }
   \   00000056   0x4770             BX       LR               ;; return
    471          
    472          #define LCD_writeData(Data)     {\
    473              DC = 1;\
    474              CS = 0;\
    475              Data_Var = Data;\
    476              WR = 0;\
    477              WR = 1;\
    478              CS = 1;\
    479          }
    480          

   \                                 In section .text, align 2, keep-with-next
    481          void LCD_writeReg(uint16 Index,uint16 Data)
    482          {
   \                     LCD_writeReg: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x000C             MOVS     R4,R1
    483              CS = 0;
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0xF031 0x7100      BICS     R1,R1,#0x2000000
   \   0000000E   0x.... 0x....      LDR.W    R2,??DataTable8_2  ;; 0x400ff100
   \   00000012   0x6011             STR      R1,[R2, #+0]
    484              LCD_writeIndex(Index);
   \   00000014   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000016   0x.... 0x....      BL       LCD_writeIndex
    485              LCD_writeData(Data);
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF030 0x7000      BICS     R0,R0,#0x2000000
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000038   0x6008             STR      R0,[R1, #+0]
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x400ff0c0
   \   0000003E   0x8004             STRH     R4,[R0, #+0]
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xF030 0x6000      BICS     R0,R0,#0x8000000
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000004E   0x6008             STR      R0,[R1, #+0]
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    486              CS = 1;
   \   00000070   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    487          }
   \   00000080   0xBD10             POP      {R4,PC}          ;; return
    488          

   \                                 In section .text, align 4, keep-with-next
    489          unsigned short int LCD_readReg(uint16 Index)
    490          {
   \                     LCD_readReg: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    491              unsigned short int test = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    492              gpioDDrOut(PTD0_DDR);
   \   00000004   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0xF051 0x0101      ORRS     R1,R1,#0x1
   \   0000000E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000012   0x6011             STR      R1,[R2, #+0]
    493              gpioDDrOut(PTD1_DDR);
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000018   0x6809             LDR      R1,[R1, #+0]
   \   0000001A   0xF051 0x0102      ORRS     R1,R1,#0x2
   \   0000001E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000022   0x6011             STR      R1,[R2, #+0]
    494              gpioDDrOut(PTD2_DDR);
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0xF051 0x0104      ORRS     R1,R1,#0x4
   \   0000002E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000032   0x6011             STR      R1,[R2, #+0]
    495              gpioDDrOut(PTD3_DDR);
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0xF051 0x0108      ORRS     R1,R1,#0x8
   \   0000003E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000042   0x6011             STR      R1,[R2, #+0]
    496              gpioDDrOut(PTD4_DDR);
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000048   0x6809             LDR      R1,[R1, #+0]
   \   0000004A   0xF051 0x0110      ORRS     R1,R1,#0x10
   \   0000004E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000052   0x6011             STR      R1,[R2, #+0]
    497              gpioDDrOut(PTD5_DDR);
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0xF051 0x0120      ORRS     R1,R1,#0x20
   \   0000005E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000062   0x6011             STR      R1,[R2, #+0]
    498              gpioDDrOut(PTD6_DDR);
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000068   0x6809             LDR      R1,[R1, #+0]
   \   0000006A   0xF051 0x0140      ORRS     R1,R1,#0x40
   \   0000006E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000072   0x6011             STR      R1,[R2, #+0]
    499              gpioDDrOut(PTD7_DDR);
   \   00000074   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000078   0x6809             LDR      R1,[R1, #+0]
   \   0000007A   0xF051 0x0180      ORRS     R1,R1,#0x80
   \   0000007E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000082   0x6011             STR      R1,[R2, #+0]
    500              gpioDDrOut(PTD8_DDR);
   \   00000084   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000088   0x6809             LDR      R1,[R1, #+0]
   \   0000008A   0xF451 0x7180      ORRS     R1,R1,#0x100
   \   0000008E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000092   0x6011             STR      R1,[R2, #+0]
    501              gpioDDrOut(PTD9_DDR);
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000098   0x6809             LDR      R1,[R1, #+0]
   \   0000009A   0xF451 0x7100      ORRS     R1,R1,#0x200
   \   0000009E   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   000000A2   0x6011             STR      R1,[R2, #+0]
    502              gpioDDrOut(PTD10_DDR);
   \   000000A4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000A8   0x6809             LDR      R1,[R1, #+0]
   \   000000AA   0xF451 0x6180      ORRS     R1,R1,#0x400
   \   000000AE   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   000000B2   0x6011             STR      R1,[R2, #+0]
    503              gpioDDrOut(PTD11_DDR);
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000B8   0x6809             LDR      R1,[R1, #+0]
   \   000000BA   0xF451 0x6100      ORRS     R1,R1,#0x800
   \   000000BE   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   000000C2   0x6011             STR      R1,[R2, #+0]
    504              gpioDDrOut(PTD12_DDR);
   \   000000C4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000C8   0x6809             LDR      R1,[R1, #+0]
   \   000000CA   0xF451 0x5180      ORRS     R1,R1,#0x1000
   \   000000CE   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   000000D2   0x6011             STR      R1,[R2, #+0]
    505              gpioDDrOut(PTD13_DDR);
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000D8   0x6809             LDR      R1,[R1, #+0]
   \   000000DA   0xF451 0x5100      ORRS     R1,R1,#0x2000
   \   000000DE   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   000000E2   0x6011             STR      R1,[R2, #+0]
    506              gpioDDrOut(PTD14_DDR);
   \   000000E4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000E8   0x6809             LDR      R1,[R1, #+0]
   \   000000EA   0xF451 0x4180      ORRS     R1,R1,#0x4000
   \   000000EE   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   000000F2   0x6011             STR      R1,[R2, #+0]
    507              gpioDDrOut(PTD15_DDR);
   \   000000F4   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000000F8   0x6809             LDR      R1,[R1, #+0]
   \   000000FA   0xF451 0x4100      ORRS     R1,R1,#0x8000
   \   000000FE   0x.... 0x....      LDR.W    R2,??DataTable8  ;; 0x400ff0d4
   \   00000102   0x6011             STR      R1,[R2, #+0]
    508              LCD_writeIndex(Index);  //Ð´ÈëÒª¶ÁµÄ¼Ä´æÆ÷ºÅ
   \   00000104   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000106   0x.... 0x....      BL       LCD_writeIndex
    509              DC = 1;
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000118   0x6008             STR      R0,[R1, #+0]
    510              //DC = 0;
    511              
    512              CS = 0;
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0xF030 0x7000      BICS     R0,R0,#0x2000000
   \   00000124   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000128   0x6008             STR      R0,[R1, #+0]
    513              //WR = 1;
    514              RD = 0;
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000012E   0x6800             LDR      R0,[R0, #+0]
   \   00000130   0xF030 0x6080      BICS     R0,R0,#0x4000000
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000138   0x6008             STR      R0,[R1, #+0]
    515              Data_Var = 0xFFFFu;
   \   0000013A   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x400ff0c0
   \   0000013E   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000142   0x8001             STRH     R1,[R0, #+0]
    516              gpioDDrIn(PTD0_DDR);
   \   00000144   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000148   0x6800             LDR      R0,[R0, #+0]
   \   0000014A   0x0840             LSRS     R0,R0,#+1
   \   0000014C   0x0040             LSLS     R0,R0,#+1
   \   0000014E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000152   0x6008             STR      R0,[R1, #+0]
    517              gpioDDrIn(PTD1_DDR);
   \   00000154   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000158   0x6800             LDR      R0,[R0, #+0]
   \   0000015A   0xF030 0x0002      BICS     R0,R0,#0x2
   \   0000015E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000162   0x6008             STR      R0,[R1, #+0]
    518              gpioDDrIn(PTD2_DDR);
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0xF030 0x0004      BICS     R0,R0,#0x4
   \   0000016E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000172   0x6008             STR      R0,[R1, #+0]
    519              gpioDDrIn(PTD3_DDR);
   \   00000174   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000178   0x6800             LDR      R0,[R0, #+0]
   \   0000017A   0xF030 0x0008      BICS     R0,R0,#0x8
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000182   0x6008             STR      R0,[R1, #+0]
    520              gpioDDrIn(PTD4_DDR);
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0xF030 0x0010      BICS     R0,R0,#0x10
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000192   0x6008             STR      R0,[R1, #+0]
    521              gpioDDrIn(PTD5_DDR);
   \   00000194   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000198   0x6800             LDR      R0,[R0, #+0]
   \   0000019A   0xF030 0x0020      BICS     R0,R0,#0x20
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001A2   0x6008             STR      R0,[R1, #+0]
    522              gpioDDrIn(PTD6_DDR);
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001A8   0x6800             LDR      R0,[R0, #+0]
   \   000001AA   0xF030 0x0040      BICS     R0,R0,#0x40
   \   000001AE   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001B2   0x6008             STR      R0,[R1, #+0]
    523              gpioDDrIn(PTD7_DDR);
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0xF030 0x0080      BICS     R0,R0,#0x80
   \   000001BE   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001C2   0x6008             STR      R0,[R1, #+0]
    524              gpioDDrIn(PTD8_DDR);
   \   000001C4   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001C8   0x6800             LDR      R0,[R0, #+0]
   \   000001CA   0xF430 0x7080      BICS     R0,R0,#0x100
   \   000001CE   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001D2   0x6008             STR      R0,[R1, #+0]
    525              gpioDDrIn(PTD9_DDR);
   \   000001D4   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001D8   0x6800             LDR      R0,[R0, #+0]
   \   000001DA   0xF430 0x7000      BICS     R0,R0,#0x200
   \   000001DE   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001E2   0x6008             STR      R0,[R1, #+0]
    526              gpioDDrIn(PTD10_DDR);
   \   000001E4   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001E8   0x6800             LDR      R0,[R0, #+0]
   \   000001EA   0xF430 0x6080      BICS     R0,R0,#0x400
   \   000001EE   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000001F2   0x6008             STR      R0,[R1, #+0]
    527              gpioDDrIn(PTD11_DDR);
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000001F8   0x6800             LDR      R0,[R0, #+0]
   \   000001FA   0xF430 0x6000      BICS     R0,R0,#0x800
   \   000001FE   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000202   0x6008             STR      R0,[R1, #+0]
    528              gpioDDrIn(PTD12_DDR);
   \   00000204   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000208   0x6800             LDR      R0,[R0, #+0]
   \   0000020A   0xF430 0x5080      BICS     R0,R0,#0x1000
   \   0000020E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000212   0x6008             STR      R0,[R1, #+0]
    529              gpioDDrIn(PTD13_DDR);
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000218   0x6800             LDR      R0,[R0, #+0]
   \   0000021A   0xF430 0x5000      BICS     R0,R0,#0x2000
   \   0000021E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000222   0x6008             STR      R0,[R1, #+0]
    530              gpioDDrIn(PTD14_DDR);
   \   00000224   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000228   0x6800             LDR      R0,[R0, #+0]
   \   0000022A   0xF430 0x4080      BICS     R0,R0,#0x4000
   \   0000022E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000232   0x6008             STR      R0,[R1, #+0]
    531              gpioDDrIn(PTD15_DDR);
   \   00000234   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000238   0x6800             LDR      R0,[R0, #+0]
   \   0000023A   0xF430 0x4000      BICS     R0,R0,#0x8000
   \   0000023E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   00000242   0x6008             STR      R0,[R1, #+0]
    532              for(test=0;test<20;test++);         // ½¨Òé50ns
   \   00000244   0x2000             MOVS     R0,#+0
   \   00000246   0x0004             MOVS     R4,R0
   \   00000248   0xE000             B.N      ??LCD_readReg_0
   \                     ??LCD_readReg_1: (+1)
   \   0000024A   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_readReg_0: (+1)
   \   0000024C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000024E   0x2C14             CMP      R4,#+20
   \   00000250   0xDBFB             BLT.N    ??LCD_readReg_1
    533              Delay50ns();
   \   00000252   0xBF00             nop
   \   00000254   0xBF00             nop
   \   00000256   0xBF00             nop
   \   00000258   0xBF00             nop
   \   0000025A   0xBF00             nop
   \   0000025C   0xBF00             nop
   \   0000025E   0xBF00             nop
   \   00000260   0xBF00             nop
   \   00000262   0xBF00             nop
   \   00000264   0xBF00             nop
   \   00000266   0xBF00             nop
   \   00000268   0xBF00             nop
   \   0000026A   0xBF00             nop
    534              RD = 1;
   \   0000026C   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000270   0x6800             LDR      R0,[R0, #+0]
   \   00000272   0xF050 0x6080      ORRS     R0,R0,#0x4000000
   \   00000276   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000027A   0x6008             STR      R0,[R1, #+0]
    535              test = PTD_BASE_PTR->PDIRwords.PIN0_15;
   \   0000027C   0x.... 0x....      LDR.W    R0,??DataTable10  ;; 0x400ff0d0
   \   00000280   0x8804             LDRH     R4,[R0, #+0]
    536              CS = 1;
   \   00000282   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000286   0x6800             LDR      R0,[R0, #+0]
   \   00000288   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000028C   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000290   0x6008             STR      R0,[R1, #+0]
    537              
    538              
    539              DC = 1;
   \   00000292   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000296   0x6800             LDR      R0,[R0, #+0]
   \   00000298   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   0000029C   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   000002A0   0x6008             STR      R0,[R1, #+0]
    540              //DC = 0;
    541              CS = 0;
   \   000002A2   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   000002A6   0x6800             LDR      R0,[R0, #+0]
   \   000002A8   0xF030 0x7000      BICS     R0,R0,#0x2000000
   \   000002AC   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   000002B0   0x6008             STR      R0,[R1, #+0]
    542              WR = 1;
   \   000002B2   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   000002B6   0x6800             LDR      R0,[R0, #+0]
   \   000002B8   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   000002BC   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   000002C0   0x6008             STR      R0,[R1, #+0]
    543              RD = 0;
   \   000002C2   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   000002C6   0x6800             LDR      R0,[R0, #+0]
   \   000002C8   0xF030 0x6080      BICS     R0,R0,#0x4000000
   \   000002CC   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   000002D0   0x6008             STR      R0,[R1, #+0]
    544              Data_Var = 0xFFFFu;
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x400ff0c0
   \   000002D6   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000002DA   0x8001             STRH     R1,[R0, #+0]
    545              gpioDDrIn(PTD0_DDR);
   \   000002DC   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000002E0   0x6800             LDR      R0,[R0, #+0]
   \   000002E2   0x0840             LSRS     R0,R0,#+1
   \   000002E4   0x0040             LSLS     R0,R0,#+1
   \   000002E6   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000002EA   0x6008             STR      R0,[R1, #+0]
    546              gpioDDrIn(PTD1_DDR);
   \   000002EC   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000002F0   0x6800             LDR      R0,[R0, #+0]
   \   000002F2   0xF030 0x0002      BICS     R0,R0,#0x2
   \   000002F6   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000002FA   0x6008             STR      R0,[R1, #+0]
    547              gpioDDrIn(PTD2_DDR);
   \   000002FC   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000300   0x6800             LDR      R0,[R0, #+0]
   \   00000302   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000030A   0x6008             STR      R0,[R1, #+0]
    548              gpioDDrIn(PTD3_DDR);
   \   0000030C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000310   0x6800             LDR      R0,[R0, #+0]
   \   00000312   0xF030 0x0008      BICS     R0,R0,#0x8
   \   00000316   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000031A   0x6008             STR      R0,[R1, #+0]
    549              gpioDDrIn(PTD4_DDR);
   \   0000031C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000320   0x6800             LDR      R0,[R0, #+0]
   \   00000322   0xF030 0x0010      BICS     R0,R0,#0x10
   \   00000326   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000032A   0x6008             STR      R0,[R1, #+0]
    550              gpioDDrIn(PTD5_DDR);
   \   0000032C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000330   0x6800             LDR      R0,[R0, #+0]
   \   00000332   0xF030 0x0020      BICS     R0,R0,#0x20
   \   00000336   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000033A   0x6008             STR      R0,[R1, #+0]
    551              gpioDDrIn(PTD6_DDR);
   \   0000033C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000340   0x6800             LDR      R0,[R0, #+0]
   \   00000342   0xF030 0x0040      BICS     R0,R0,#0x40
   \   00000346   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000034A   0x6008             STR      R0,[R1, #+0]
    552              gpioDDrIn(PTD7_DDR);
   \   0000034C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000350   0x6800             LDR      R0,[R0, #+0]
   \   00000352   0xF030 0x0080      BICS     R0,R0,#0x80
   \   00000356   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000035A   0x6008             STR      R0,[R1, #+0]
    553              gpioDDrIn(PTD8_DDR);
   \   0000035C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000360   0x6800             LDR      R0,[R0, #+0]
   \   00000362   0xF430 0x7080      BICS     R0,R0,#0x100
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000036A   0x6008             STR      R0,[R1, #+0]
    554              gpioDDrIn(PTD9_DDR);
   \   0000036C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000370   0x6800             LDR      R0,[R0, #+0]
   \   00000372   0xF430 0x7000      BICS     R0,R0,#0x200
   \   00000376   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000037A   0x6008             STR      R0,[R1, #+0]
    555              gpioDDrIn(PTD10_DDR);
   \   0000037C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000380   0x6800             LDR      R0,[R0, #+0]
   \   00000382   0xF430 0x6080      BICS     R0,R0,#0x400
   \   00000386   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000038A   0x6008             STR      R0,[R1, #+0]
    556              gpioDDrIn(PTD11_DDR);
   \   0000038C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   00000390   0x6800             LDR      R0,[R0, #+0]
   \   00000392   0xF430 0x6000      BICS     R0,R0,#0x800
   \   00000396   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   0000039A   0x6008             STR      R0,[R1, #+0]
    557              gpioDDrIn(PTD12_DDR);
   \   0000039C   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000003A0   0x6800             LDR      R0,[R0, #+0]
   \   000003A2   0xF430 0x5080      BICS     R0,R0,#0x1000
   \   000003A6   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000003AA   0x6008             STR      R0,[R1, #+0]
    558              gpioDDrIn(PTD13_DDR);
   \   000003AC   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000003B0   0x6800             LDR      R0,[R0, #+0]
   \   000003B2   0xF430 0x5000      BICS     R0,R0,#0x2000
   \   000003B6   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000003BA   0x6008             STR      R0,[R1, #+0]
    559              gpioDDrIn(PTD14_DDR);
   \   000003BC   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000003C0   0x6800             LDR      R0,[R0, #+0]
   \   000003C2   0xF430 0x4080      BICS     R0,R0,#0x4000
   \   000003C6   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000003CA   0x6008             STR      R0,[R1, #+0]
    560              gpioDDrIn(PTD15_DDR);
   \   000003CC   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x400ff0d4
   \   000003D0   0x6800             LDR      R0,[R0, #+0]
   \   000003D2   0xF430 0x4000      BICS     R0,R0,#0x8000
   \   000003D6   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x400ff0d4
   \   000003DA   0x6008             STR      R0,[R1, #+0]
    561              for(test=0;test<20;test++);         // ½¨Òé50ns
   \   000003DC   0x2000             MOVS     R0,#+0
   \   000003DE   0x0004             MOVS     R4,R0
   \   000003E0   0xE000             B.N      ??LCD_readReg_2
   \                     ??LCD_readReg_3: (+1)
   \   000003E2   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_readReg_2: (+1)
   \   000003E4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000003E6   0x2C14             CMP      R4,#+20
   \   000003E8   0xDBFB             BLT.N    ??LCD_readReg_3
    562              Delay50ns();
   \   000003EA   0xBF00             nop
   \   000003EC   0xBF00             nop
   \   000003EE   0xBF00             nop
   \   000003F0   0xBF00             nop
   \   000003F2   0xBF00             nop
   \   000003F4   0xBF00             nop
   \   000003F6   0xBF00             nop
   \   000003F8   0xBF00             nop
   \   000003FA   0xBF00             nop
   \   000003FC   0xBF00             nop
   \   000003FE   0xBF00             nop
   \   00000400   0xBF00             nop
   \   00000402   0xBF00             nop
    563              RD = 1;
   \   00000404   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000408   0x6800             LDR      R0,[R0, #+0]
   \   0000040A   0xF050 0x6080      ORRS     R0,R0,#0x4000000
   \   0000040E   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000412   0x6008             STR      R0,[R1, #+0]
    564              test = PTD_BASE_PTR->PDIRwords.PIN0_15;    
   \   00000414   0x.... 0x....      LDR.W    R0,??DataTable10  ;; 0x400ff0d0
   \   00000418   0x8804             LDRH     R4,[R0, #+0]
    565              CS = 1;
   \   0000041A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000041E   0x6800             LDR      R0,[R0, #+0]
   \   00000420   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000424   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000428   0x6008             STR      R0,[R1, #+0]
    566              
    567              return test;
   \   0000042A   0x0020             MOVS     R0,R4
   \   0000042C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000042E   0xBD10             POP      {R4,PC}          ;; return
    568          }
    569          
    570          
    571          
    572          // #define LCD_WriteReg(x,y)       LCD_writeReg(x,y)
    573          

   \                                 In section .text, align 2, keep-with-next
    574          uint16 LCD_Init()
    575          {
   \                     LCD_Init: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    576              // sTFTconfig TFT;
    577              uint16 CodeDevice = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    578              LCD_PinInit(0);
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x.... 0x....      BL       LCD_PinInit
    579              // CS = 0;
    580              RESET = 0;
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF030 0x5080      BICS     R0,R0,#0x10000000
   \   00000014   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000018   0x6008             STR      R0,[R1, #+0]
    581              vDelayMs(100);
   \   0000001A   0x2064             MOVS     R0,#+100
   \   0000001C   0x.... 0x....      BL       vDelayMs
    582              RESET = 1;
   \   00000020   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000002A   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000002E   0x6008             STR      R0,[R1, #+0]
    583              vDelayMs(100);
   \   00000030   0x2064             MOVS     R0,#+100
   \   00000032   0x.... 0x....      BL       vDelayMs
    584              
    585              do
    586              {
    587                  LCD_PinInit(0);
   \                     ??LCD_Init_0: (+1)
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       LCD_PinInit
    588                  RESET = 0;
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0xF030 0x5080      BICS     R0,R0,#0x10000000
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    589                  vDelayMs(100);
   \   0000004C   0x2064             MOVS     R0,#+100
   \   0000004E   0x.... 0x....      BL       vDelayMs
    590                  RESET = 1;
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000060   0x6008             STR      R0,[R1, #+0]
    591                  vDelayMs(100);
   \   00000062   0x2064             MOVS     R0,#+100
   \   00000064   0x.... 0x....      BL       vDelayMs
    592                  CodeDevice = LCD_readReg(0x0000);
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x.... 0x....      BL       LCD_readReg
   \   0000006E   0x0004             MOVS     R4,R0
    593                  vDelayMs(50);
   \   00000070   0x2032             MOVS     R0,#+50
   \   00000072   0x.... 0x....      BL       vDelayMs
    594              }
    595              while( 0x8989 != CodeDevice );
   \   00000076   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000078   0xF648 0x1089      MOVW     R0,#+35209
   \   0000007C   0x4284             CMP      R4,R0
   \   0000007E   0xD1DA             BNE.N    ??LCD_Init_0
    596              
    597              LCD_PinInit(0);
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x.... 0x....      BL       LCD_PinInit
    598              // ´ò¿ª¾§Õñ
    599              LCD_writeReg(R00_OSC,0x0001);
   \   00000086   0x2101             MOVS     R1,#+1
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      BL       LCD_writeReg
    600              //
    601              LCD_writeReg(R10_SleepMode,0x0000);         // ÍË³öÐÝÃß
   \   0000008E   0x2100             MOVS     R1,#+0
   \   00000090   0x2010             MOVS     R0,#+16
   \   00000092   0x.... 0x....      BL       LCD_writeReg
    602              vDelayMs(50);
   \   00000096   0x2032             MOVS     R0,#+50
   \   00000098   0x.... 0x....      BL       vDelayMs
    603              
    604              LCD_writeReg(R01_DriverOutC,0x693F);        // ºáÆÁ
   \   0000009C   0xF646 0x113F      MOVW     R1,#+26943
   \   000000A0   0x2001             MOVS     R0,#+1
   \   000000A2   0x.... 0x....      BL       LCD_writeReg
    605              LCD_writeReg(R07_DisplayC,0x0033);          //
   \   000000A6   0x2133             MOVS     R1,#+51
   \   000000A8   0x2007             MOVS     R0,#+7
   \   000000AA   0x.... 0x....      BL       LCD_writeReg
    606              LCD_writeReg(R11_EntryMode,0x6030);         // ×óÊÖ×ø±êÏµ
   \   000000AE   0xF246 0x0130      MOVW     R1,#+24624
   \   000000B2   0x2011             MOVS     R0,#+17
   \   000000B4   0x.... 0x....      BL       LCD_writeReg
    607              // LCD_writeReg(R11_EntryMode,0x6030);
    608              
    609              LCD_writeReg(R02_LCDdriveAC,0x0600);
   \   000000B8   0xF44F 0x61C0      MOV      R1,#+1536
   \   000000BC   0x2002             MOVS     R0,#+2
   \   000000BE   0x.... 0x....      BL       LCD_writeReg
    610              
    611              // Power supply setting
    612              LCD_writeReg(R03_PowerC_1,0xA8A4);          // 0xA8A4
   \   000000C2   0xF64A 0x01A4      MOVW     R1,#+43172
   \   000000C6   0x2003             MOVS     R0,#+3
   \   000000C8   0x.... 0x....      BL       LCD_writeReg
    613              LCD_writeReg(R0C_PowerC_2,0x0000);    
   \   000000CC   0x2100             MOVS     R1,#+0
   \   000000CE   0x200C             MOVS     R0,#+12
   \   000000D0   0x.... 0x....      BL       LCD_writeReg
    614              LCD_writeReg(R0D_PowerC_3,0x080C);   
   \   000000D4   0xF640 0x010C      MOVW     R1,#+2060
   \   000000D8   0x200D             MOVS     R0,#+13
   \   000000DA   0x.... 0x....      BL       LCD_writeReg
    615              LCD_writeReg(R0E_PowerC_4,0x2B00);    
   \   000000DE   0xF44F 0x512C      MOV      R1,#+11008
   \   000000E2   0x200E             MOVS     R0,#+14
   \   000000E4   0x.... 0x....      BL       LCD_writeReg
    616              LCD_writeReg(R1E_PowerC_5,0x00B0);
   \   000000E8   0x21B0             MOVS     R1,#+176
   \   000000EA   0x201E             MOVS     R0,#+30
   \   000000EC   0x.... 0x....      BL       LCD_writeReg
    617          
    618              // ¿ª´°ÉèÖÃ
    619              ///LCD_writeReg(0x0044,0xEF00); //Ë®Æ½RAMµÄÆðÊ¼-½áÊøµØÖ·Î»ÖÃ (00~EF)
    620              ///LCD_writeReg(0x0045,0x0000);  //´¹Ö±RAMµÄÆðÊ¼µØÖ· 00
    621              ///LCD_writeReg(0x0046,0x013F); //´¹Ö±RAMµÄ½áÊøµØÖ· 13F
    622              
    623              // Gama¿ØÖÆ
    624              LCD_writeReg(0x0030,0x0101);  
   \   000000F0   0xF240 0x1101      MOVW     R1,#+257
   \   000000F4   0x2030             MOVS     R0,#+48
   \   000000F6   0x.... 0x....      BL       LCD_writeReg
    625              LCD_writeReg(0x0031,0x0101);  
   \   000000FA   0xF240 0x1101      MOVW     R1,#+257
   \   000000FE   0x2031             MOVS     R0,#+49
   \   00000100   0x.... 0x....      BL       LCD_writeReg
    626              LCD_writeReg(0x0032,0x0101);  
   \   00000104   0xF240 0x1101      MOVW     R1,#+257
   \   00000108   0x2032             MOVS     R0,#+50
   \   0000010A   0x.... 0x....      BL       LCD_writeReg
    627              LCD_writeReg(0x0033,0x0101);  
   \   0000010E   0xF240 0x1101      MOVW     R1,#+257
   \   00000112   0x2033             MOVS     R0,#+51
   \   00000114   0x.... 0x....      BL       LCD_writeReg
    628              LCD_writeReg(0x0034,0x0101);  
   \   00000118   0xF240 0x1101      MOVW     R1,#+257
   \   0000011C   0x2034             MOVS     R0,#+52
   \   0000011E   0x.... 0x....      BL       LCD_writeReg
    629              LCD_writeReg(0x0035,0x0101);  
   \   00000122   0xF240 0x1101      MOVW     R1,#+257
   \   00000126   0x2035             MOVS     R0,#+53
   \   00000128   0x.... 0x....      BL       LCD_writeReg
    630              LCD_writeReg(0x0036,0x0101);  
   \   0000012C   0xF240 0x1101      MOVW     R1,#+257
   \   00000130   0x2036             MOVS     R0,#+54
   \   00000132   0x.... 0x....      BL       LCD_writeReg
    631              LCD_writeReg(0x0037,0x0101);  
   \   00000136   0xF240 0x1101      MOVW     R1,#+257
   \   0000013A   0x2037             MOVS     R0,#+55
   \   0000013C   0x.... 0x....      BL       LCD_writeReg
    632              LCD_writeReg(0x003A,0x0101);  
   \   00000140   0xF240 0x1101      MOVW     R1,#+257
   \   00000144   0x203A             MOVS     R0,#+58
   \   00000146   0x.... 0x....      BL       LCD_writeReg
    633              LCD_writeReg(0x003B,0x0101);
   \   0000014A   0xF240 0x1101      MOVW     R1,#+257
   \   0000014E   0x203B             MOVS     R0,#+59
   \   00000150   0x.... 0x....      BL       LCD_writeReg
    634              /*
    635              TFT.Height = 240;
    636              TFT.Width = 320;
    637              
    638              return TFT;
    639              */
    640              return CodeDevice;
   \   00000154   0x0020             MOVS     R0,R4
   \   00000156   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000158   0xBD10             POP      {R4,PC}          ;; return
    641          }
    642          

   \                                 In section .text, align 2, keep-with-next
    643          void LCD_SetCursor( uint16 X, uint16 Y )
    644          {
   \                     LCD_SetCursor: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x000C             MOVS     R4,R1
    645              // ºáÆÁ
    646              LCD_writeReg(0x004f, X);
   \   00000004   0x0001             MOVS     R1,R0
   \   00000006   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000008   0x204F             MOVS     R0,#+79
   \   0000000A   0x.... 0x....      BL       LCD_writeReg
    647              LCD_writeReg(0x004e, Y); 
   \   0000000E   0x0021             MOVS     R1,R4
   \   00000010   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000012   0x204E             MOVS     R0,#+78
   \   00000014   0x.... 0x....      BL       LCD_writeReg
    648          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
    649          

   \                                 In section .text, align 2, keep-with-next
    650          void LCD_SetPoint(uint16 Xpos,uint16 Ypos,uint16 point)
    651          {
   \                     LCD_SetPoint: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0014             MOVS     R4,R2
    652              LCD_SetCursor(Xpos,Ypos);
   \   00000004   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000006   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000008   0x.... 0x....      BL       LCD_SetCursor
    653              LCD_writeReg(R22_WdataToGRAM,point);
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000010   0x2022             MOVS     R0,#+34
   \   00000012   0x.... 0x....      BL       LCD_writeReg
    654          }
   \   00000016   0xBD10             POP      {R4,PC}          ;; return
    655          
    656          // ´¹Ö±»òË®Æ½»­Ïß
    657          // 0 Ë®Æ½ÓÒÒÆ£¬1 ÊúÖ±ÉÏÒÆ

   \                                 In section .text, align 2, keep-with-next
    658          void LCD_SetLine(uint16 Xgaia,uint16 Ygaia,uint16 Length,uint16 Color,uint8 Dir)
    659          {
   \                     LCD_SetLine: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C06             LDR      R4,[SP, #+24]
   \   0000000E   0xE001             B.N      ??LCD_SetLine_0
    660              while(Length > 0)
    661              {
    662                  LCD_SetCursor( Xgaia , Ygaia );
    663                  LCD_writeReg( DRAWPOINT , Color );
    664                  if( 0 == Dir )
    665                  {
    666                      Xgaia ++ ;
    667                  }
    668                  else
    669                  {
    670                      Ygaia ++;
   \                     ??LCD_SetLine_1: (+1)
   \   00000010   0x1C76             ADDS     R6,R6,#+1
    671                  }
    672                  Length --;
   \                     ??LCD_SetLine_2: (+1)
   \   00000012   0x1E7F             SUBS     R7,R7,#+1
   \                     ??LCD_SetLine_0: (+1)
   \   00000014   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000016   0x2F00             CMP      R7,#+0
   \   00000018   0xD00F             BEQ.N    ??LCD_SetLine_3
   \   0000001A   0x0031             MOVS     R1,R6
   \   0000001C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001E   0x0028             MOVS     R0,R5
   \   00000020   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       LCD_SetCursor
   \   00000026   0x4641             MOV      R1,R8
   \   00000028   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000002A   0x2022             MOVS     R0,#+34
   \   0000002C   0x.... 0x....      BL       LCD_writeReg
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x2C00             CMP      R4,#+0
   \   00000034   0xD1EC             BNE.N    ??LCD_SetLine_1
   \   00000036   0x1C6D             ADDS     R5,R5,#+1
   \   00000038   0xE7EB             B.N      ??LCD_SetLine_2
    673              }
    674          }
   \                     ??LCD_SetLine_3: (+1)
   \   0000003A   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    675          

   \                                 In section .text, align 2, keep-with-next
    676          void LCD_Clear(uint16 Color)
    677          {
   \                     LCD_Clear: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    678              uint32 index=0;
   \   00000004   0x2500             MOVS     R5,#+0
    679              LCD_SetCursor(0,0);
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       LCD_SetCursor
    680              LCD_writeIndex(0x0022);
   \   0000000E   0x2022             MOVS     R0,#+34
   \   00000010   0x.... 0x....      BL       LCD_writeIndex
    681              for( index = 0; index < 76800; index++ )
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x0005             MOVS     R5,R0
   \   00000018   0xE02B             B.N      ??LCD_Clear_0
    682              {
    683                  LCD_writeData(Color);
   \                     ??LCD_Clear_1: (+1)
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000024   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000028   0x6008             STR      R0,[R1, #+0]
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0xF030 0x7000      BICS     R0,R0,#0x2000000
   \   00000034   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   00000038   0x6008             STR      R0,[R1, #+0]
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x400ff0c0
   \   0000003E   0x8004             STRH     R4,[R0, #+0]
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000044   0x6800             LDR      R0,[R0, #+0]
   \   00000046   0xF030 0x6000      BICS     R0,R0,#0x8000000
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000004E   0x6008             STR      R0,[R1, #+0]
   \   00000050   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0xF050 0x6000      ORRS     R0,R0,#0x8000000
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000005E   0x6008             STR      R0,[R1, #+0]
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x400ff100
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   0000006A   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x400ff100
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    684              }
   \   00000070   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_Clear_0: (+1)
   \   00000072   0xF5B5 0x3F96      CMP      R5,#+76800
   \   00000076   0xD3D0             BCC.N    ??LCD_Clear_1
    685          }
   \   00000078   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    686          
    687          #define TFT_HEIGHT              240
    688          #define TFT_WIDTH               320
    689          

   \                                 In section .text, align 2, keep-with-next
    690          void LCD_XYaxes(void)
    691          {
   \                     LCD_XYaxes: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
    692              LCD_SetLine(284, 208 ,34,Color_Left_Sec,0);              // ÖÐÐÄÏß
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x9000             STR      R0,[SP, #+0]
   \   00000008   0xF647 0x73FF      MOVW     R3,#+32767
   \   0000000C   0x2222             MOVS     R2,#+34
   \   0000000E   0x21D0             MOVS     R1,#+208
   \   00000010   0xF44F 0x708E      MOV      R0,#+284
   \   00000014   0x.... 0x....      BL       LCD_SetLine
    693              LCD_SetLine(284, 176 ,34,Color_Right_Sec,0);               // ÖÐÐÄÏß±ä»¯ÂÊ
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x9000             STR      R0,[SP, #+0]
   \   0000001C   0xF240 0x531F      MOVW     R3,#+1311
   \   00000020   0x2222             MOVS     R2,#+34
   \   00000022   0x21B0             MOVS     R1,#+176
   \   00000024   0xF44F 0x708E      MOV      R0,#+284
   \   00000028   0x.... 0x....      BL       LCD_SetLine
    694              LCD_SetLine(284, 144 ,34,Color_Left_Main,0);               // ¸ø¶¨ËÙ¶È
   \   0000002C   0x2000             MOVS     R0,#+0
   \   0000002E   0x9000             STR      R0,[SP, #+0]
   \   00000030   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000034   0x2222             MOVS     R2,#+34
   \   00000036   0x2190             MOVS     R1,#+144
   \   00000038   0xF44F 0x708E      MOV      R0,#+284
   \   0000003C   0x.... 0x....      BL       LCD_SetLine
    695              LCD_SetLine(284, 112 ,34,Color_Left_Thr,0);                // D_¸ø¶¨ËÙ¶È
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x9000             STR      R0,[SP, #+0]
   \   00000044   0xF44F 0x63FC      MOV      R3,#+2016
   \   00000048   0x2222             MOVS     R2,#+34
   \   0000004A   0x2170             MOVS     R1,#+112
   \   0000004C   0xF44F 0x708E      MOV      R0,#+284
   \   00000050   0x.... 0x....      BL       LCD_SetLine
    696              LCD_SetLine(284, 80 ,34,Color_Left_Refer,0);              // Êµ¼ÊËÙ¶È
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x9000             STR      R0,[SP, #+0]
   \   00000058   0xF64F 0x73E0      MOVW     R3,#+65504
   \   0000005C   0x2222             MOVS     R2,#+34
   \   0000005E   0x2150             MOVS     R1,#+80
   \   00000060   0xF44F 0x708E      MOV      R0,#+284
   \   00000064   0x.... 0x....      BL       LCD_SetLine
    697              LCD_SetLine(284, 48  ,34,Color_Right_Main,0);        // µç»úPWM
   \   00000068   0x2000             MOVS     R0,#+0
   \   0000006A   0x9000             STR      R0,[SP, #+0]
   \   0000006C   0xF44F 0x4378      MOV      R3,#+63488
   \   00000070   0x2222             MOVS     R2,#+34
   \   00000072   0x2130             MOVS     R1,#+48
   \   00000074   0xF44F 0x708E      MOV      R0,#+284
   \   00000078   0x.... 0x....      BL       LCD_SetLine
    698          
    699              sint16 CutVar = 0;
   \   0000007C   0x2400             MOVS     R4,#+0
    700              /***************************************************************/
    701              // ×ó²à×óÊÖ×ø±êÏµ£¬ÓÒ²à¸¡×ø±êÏµ
    702                        // X      Y         LENGTH           COLOR              DIR
    703              LCD_SetLine( 15  ,  0       , TFT_HEIGHT     , Color_Left_Main  , 1);
   \   0000007E   0x2001             MOVS     R0,#+1
   \   00000080   0x9000             STR      R0,[SP, #+0]
   \   00000082   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000086   0x22F0             MOVS     R2,#+240
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0x200F             MOVS     R0,#+15
   \   0000008C   0x.... 0x....      BL       LCD_SetLine
    704              LCD_SetLine( 0   ,  Fix_0   , TFT_WIDTH - 40 , Color_Left_Main  , 0);
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x9000             STR      R0,[SP, #+0]
   \   00000094   0xF64F 0x73FF      MOVW     R3,#+65535
   \   00000098   0xF44F 0x728C      MOV      R2,#+280
   \   0000009C   0x2107             MOVS     R1,#+7
   \   0000009E   0x2000             MOVS     R0,#+0
   \   000000A0   0x.... 0x....      BL       LCD_SetLine
    705              LCD_SetLine( 264 ,  0       , TFT_HEIGHT     , Color_Right_Main , 1);
   \   000000A4   0x2001             MOVS     R0,#+1
   \   000000A6   0x9000             STR      R0,[SP, #+0]
   \   000000A8   0xF44F 0x4378      MOV      R3,#+63488
   \   000000AC   0x22F0             MOVS     R2,#+240
   \   000000AE   0x2100             MOVS     R1,#+0
   \   000000B0   0xF44F 0x7084      MOV      R0,#+264
   \   000000B4   0x.... 0x....      BL       LCD_SetLine
    706              LCD_SetLine( 0   ,  Float_0 , TFT_WIDTH - 40 , Color_Right_Main , 0);
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x9000             STR      R0,[SP, #+0]
   \   000000BC   0xF44F 0x4378      MOV      R3,#+63488
   \   000000C0   0xF44F 0x728C      MOV      R2,#+280
   \   000000C4   0x2178             MOVS     R1,#+120
   \   000000C6   0x2000             MOVS     R0,#+0
   \   000000C8   0x.... 0x....      BL       LCD_SetLine
    707                  
    708              // ¼ýÍ· ×ó×ÝÖá
    709              LCD_SetCursor(14,238);
   \   000000CC   0x21EE             MOVS     R1,#+238
   \   000000CE   0x200E             MOVS     R0,#+14
   \   000000D0   0x.... 0x....      BL       LCD_SetCursor
    710              LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   000000D4   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000D8   0x2022             MOVS     R0,#+34
   \   000000DA   0x.... 0x....      BL       LCD_writeReg
    711              LCD_SetCursor(16,238);
   \   000000DE   0x21EE             MOVS     R1,#+238
   \   000000E0   0x2010             MOVS     R0,#+16
   \   000000E2   0x.... 0x....      BL       LCD_SetCursor
    712              LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   000000E6   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000EA   0x2022             MOVS     R0,#+34
   \   000000EC   0x.... 0x....      BL       LCD_writeReg
    713              LCD_SetCursor(13,237);
   \   000000F0   0x21ED             MOVS     R1,#+237
   \   000000F2   0x200D             MOVS     R0,#+13
   \   000000F4   0x.... 0x....      BL       LCD_SetCursor
    714              LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   000000F8   0xF64F 0x71FF      MOVW     R1,#+65535
   \   000000FC   0x2022             MOVS     R0,#+34
   \   000000FE   0x.... 0x....      BL       LCD_writeReg
    715              LCD_SetCursor(17,237);
   \   00000102   0x21ED             MOVS     R1,#+237
   \   00000104   0x2011             MOVS     R0,#+17
   \   00000106   0x.... 0x....      BL       LCD_SetCursor
    716              LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   0000010A   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000010E   0x2022             MOVS     R0,#+34
   \   00000110   0x.... 0x....      BL       LCD_writeReg
    717              // ¼ýÍ· ºáÖáÏÂ 264
    718              LCD_SetCursor(279,8);
   \   00000114   0x2108             MOVS     R1,#+8
   \   00000116   0xF240 0x1017      MOVW     R0,#+279
   \   0000011A   0x.... 0x....      BL       LCD_SetCursor
    719              LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   0000011E   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000122   0x2022             MOVS     R0,#+34
   \   00000124   0x.... 0x....      BL       LCD_writeReg
    720              LCD_SetCursor(279,6);
   \   00000128   0x2106             MOVS     R1,#+6
   \   0000012A   0xF240 0x1017      MOVW     R0,#+279
   \   0000012E   0x.... 0x....      BL       LCD_SetCursor
    721              LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   00000132   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000136   0x2022             MOVS     R0,#+34
   \   00000138   0x.... 0x....      BL       LCD_writeReg
    722              LCD_SetCursor(278,9);
   \   0000013C   0x2109             MOVS     R1,#+9
   \   0000013E   0xF44F 0x708B      MOV      R0,#+278
   \   00000142   0x.... 0x....      BL       LCD_SetCursor
    723              LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   00000146   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000014A   0x2022             MOVS     R0,#+34
   \   0000014C   0x.... 0x....      BL       LCD_writeReg
    724              LCD_SetCursor(278,5);
   \   00000150   0x2105             MOVS     R1,#+5
   \   00000152   0xF44F 0x708B      MOV      R0,#+278
   \   00000156   0x.... 0x....      BL       LCD_SetCursor
    725              LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   0000015A   0xF64F 0x71FF      MOVW     R1,#+65535
   \   0000015E   0x2022             MOVS     R0,#+34
   \   00000160   0x.... 0x....      BL       LCD_writeReg
    726              // ¼ýÍ· ÓÒ×ÝÖáÉÏ 264
    727              LCD_SetCursor(263,238);
   \   00000164   0x21EE             MOVS     R1,#+238
   \   00000166   0xF240 0x1007      MOVW     R0,#+263
   \   0000016A   0x.... 0x....      BL       LCD_SetCursor
    728              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   0000016E   0xF44F 0x4178      MOV      R1,#+63488
   \   00000172   0x2022             MOVS     R0,#+34
   \   00000174   0x.... 0x....      BL       LCD_writeReg
    729              LCD_SetCursor(265,238);
   \   00000178   0x21EE             MOVS     R1,#+238
   \   0000017A   0xF240 0x1009      MOVW     R0,#+265
   \   0000017E   0x.... 0x....      BL       LCD_SetCursor
    730              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   00000182   0xF44F 0x4178      MOV      R1,#+63488
   \   00000186   0x2022             MOVS     R0,#+34
   \   00000188   0x.... 0x....      BL       LCD_writeReg
    731              LCD_SetCursor(262,237);
   \   0000018C   0x21ED             MOVS     R1,#+237
   \   0000018E   0xF44F 0x7083      MOV      R0,#+262
   \   00000192   0x.... 0x....      BL       LCD_SetCursor
    732              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   00000196   0xF44F 0x4178      MOV      R1,#+63488
   \   0000019A   0x2022             MOVS     R0,#+34
   \   0000019C   0x.... 0x....      BL       LCD_writeReg
    733              LCD_SetCursor(266,237);
   \   000001A0   0x21ED             MOVS     R1,#+237
   \   000001A2   0xF44F 0x7085      MOV      R0,#+266
   \   000001A6   0x.... 0x....      BL       LCD_SetCursor
    734              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   000001AA   0xF44F 0x4178      MOV      R1,#+63488
   \   000001AE   0x2022             MOVS     R0,#+34
   \   000001B0   0x.... 0x....      BL       LCD_writeReg
    735              // ¼ýÍ· ÖÐºáÖá 264
    736              LCD_SetCursor(263,1);
   \   000001B4   0x2101             MOVS     R1,#+1
   \   000001B6   0xF240 0x1007      MOVW     R0,#+263
   \   000001BA   0x.... 0x....      BL       LCD_SetCursor
    737              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   000001BE   0xF44F 0x4178      MOV      R1,#+63488
   \   000001C2   0x2022             MOVS     R0,#+34
   \   000001C4   0x.... 0x....      BL       LCD_writeReg
    738              LCD_SetCursor(265,1);
   \   000001C8   0x2101             MOVS     R1,#+1
   \   000001CA   0xF240 0x1009      MOVW     R0,#+265
   \   000001CE   0x.... 0x....      BL       LCD_SetCursor
    739              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   000001D2   0xF44F 0x4178      MOV      R1,#+63488
   \   000001D6   0x2022             MOVS     R0,#+34
   \   000001D8   0x.... 0x....      BL       LCD_writeReg
    740              LCD_SetCursor(262,2);
   \   000001DC   0x2102             MOVS     R1,#+2
   \   000001DE   0xF44F 0x7083      MOV      R0,#+262
   \   000001E2   0x.... 0x....      BL       LCD_SetCursor
    741              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   000001E6   0xF44F 0x4178      MOV      R1,#+63488
   \   000001EA   0x2022             MOVS     R0,#+34
   \   000001EC   0x.... 0x....      BL       LCD_writeReg
    742              LCD_SetCursor(266,2);
   \   000001F0   0x2102             MOVS     R1,#+2
   \   000001F2   0xF44F 0x7085      MOV      R0,#+266
   \   000001F6   0x.... 0x....      BL       LCD_SetCursor
    743              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   000001FA   0xF44F 0x4178      MOV      R1,#+63488
   \   000001FE   0x2022             MOVS     R0,#+34
   \   00000200   0x.... 0x....      BL       LCD_writeReg
    744              //
    745              LCD_SetCursor(1,Float_0+1);
   \   00000204   0x2179             MOVS     R1,#+121
   \   00000206   0x2001             MOVS     R0,#+1
   \   00000208   0x.... 0x....      BL       LCD_SetCursor
    746              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   0000020C   0xF44F 0x4178      MOV      R1,#+63488
   \   00000210   0x2022             MOVS     R0,#+34
   \   00000212   0x.... 0x....      BL       LCD_writeReg
    747              LCD_SetCursor(1,Float_0-1);
   \   00000216   0x2177             MOVS     R1,#+119
   \   00000218   0x2001             MOVS     R0,#+1
   \   0000021A   0x.... 0x....      BL       LCD_SetCursor
    748              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   0000021E   0xF44F 0x4178      MOV      R1,#+63488
   \   00000222   0x2022             MOVS     R0,#+34
   \   00000224   0x.... 0x....      BL       LCD_writeReg
    749              LCD_SetCursor(2,Float_0-2);
   \   00000228   0x2176             MOVS     R1,#+118
   \   0000022A   0x2002             MOVS     R0,#+2
   \   0000022C   0x.... 0x....      BL       LCD_SetCursor
    750              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   00000230   0xF44F 0x4178      MOV      R1,#+63488
   \   00000234   0x2022             MOVS     R0,#+34
   \   00000236   0x.... 0x....      BL       LCD_writeReg
    751              LCD_SetCursor(2,Float_0+2);
   \   0000023A   0x217A             MOVS     R1,#+122
   \   0000023C   0x2002             MOVS     R0,#+2
   \   0000023E   0x.... 0x....      BL       LCD_SetCursor
    752              LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   00000242   0xF44F 0x4178      MOV      R1,#+63488
   \   00000246   0x2022             MOVS     R0,#+34
   \   00000248   0x.... 0x....      BL       LCD_writeReg
    753              
    754              /***************************************************************/
    755              // ±ÈÀý³ß
    756              for(CutVar = 0;CutVar<5;CutVar++)
   \   0000024C   0x2000             MOVS     R0,#+0
   \   0000024E   0x0004             MOVS     R4,R0
   \   00000250   0xE00D             B.N      ??LCD_XYaxes_0
    757              {
    758                  LCD_SetLine(12,Fix_0 + CutVar * Fix_Chat,3,Color_Left_Main,0);
   \                     ??LCD_XYaxes_1: (+1)
   \   00000252   0x2000             MOVS     R0,#+0
   \   00000254   0x9000             STR      R0,[SP, #+0]
   \   00000256   0xF64F 0x73FF      MOVW     R3,#+65535
   \   0000025A   0x2203             MOVS     R2,#+3
   \   0000025C   0x2038             MOVS     R0,#+56
   \   0000025E   0xFB14 0xF000      SMULBB   R0,R4,R0
   \   00000262   0x1DC1             ADDS     R1,R0,#+7
   \   00000264   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000266   0x200C             MOVS     R0,#+12
   \   00000268   0x.... 0x....      BL       LCD_SetLine
    759                  //                      4     * 56 = 224
    760              }
   \   0000026C   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_XYaxes_0: (+1)
   \   0000026E   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000270   0x2C05             CMP      R4,#+5
   \   00000272   0xDBEE             BLT.N    ??LCD_XYaxes_1
    761              for(CutVar = -3;CutVar<=3;CutVar++)
   \   00000274   0xF07F 0x0402      MVNS     R4,#+2
   \   00000278   0xE00F             B.N      ??LCD_XYaxes_2
    762              {
    763                  LCD_SetLine(264,Float_0 + CutVar * Float_Chat,3,Color_Right_Main,0);
   \                     ??LCD_XYaxes_3: (+1)
   \   0000027A   0x2000             MOVS     R0,#+0
   \   0000027C   0x9000             STR      R0,[SP, #+0]
   \   0000027E   0xF44F 0x4378      MOV      R3,#+63488
   \   00000282   0x2203             MOVS     R2,#+3
   \   00000284   0x2026             MOVS     R0,#+38
   \   00000286   0xFB14 0xF000      SMULBB   R0,R4,R0
   \   0000028A   0xF110 0x0178      ADDS     R1,R0,#+120
   \   0000028E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000290   0xF44F 0x7084      MOV      R0,#+264
   \   00000294   0x.... 0x....      BL       LCD_SetLine
    764                  //                         3     * 38 = 114
    765              }
   \   00000298   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_XYaxes_2: (+1)
   \   0000029A   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   0000029C   0x2C04             CMP      R4,#+4
   \   0000029E   0xDBEC             BLT.N    ??LCD_XYaxes_3
    766              
    767              LCD_SetLine(280,0,TFT_HEIGHT,Blue2,1);
   \   000002A0   0x2001             MOVS     R0,#+1
   \   000002A2   0x9000             STR      R0,[SP, #+0]
   \   000002A4   0xF240 0x531F      MOVW     R3,#+1311
   \   000002A8   0x22F0             MOVS     R2,#+240
   \   000002AA   0x2100             MOVS     R1,#+0
   \   000002AC   0xF44F 0x708C      MOV      R0,#+280
   \   000002B0   0x.... 0x....      BL       LCD_SetLine
    768          }
   \   000002B4   0xBD13             POP      {R0,R1,R4,PC}    ;; return
    769          
    770          
    771          // ×ø±êÏµÖØ¹¹ 20140411
    772          /*
    773          #define Fix_0           7
    774          #define Fix_Top         232
    775          #define Fix_Chat        ((Fix_Top - Fix_0 + 1)/4)
    776          
    777          #define Float_0         120
    778          #define Float_Top       232
    779          #define Float_Bottom    8
    780          #define Float_Chat      ((Float_Top - Float_Bottom)/6)
    781          */

   \                                 In section .text, align 2, keep-with-next
    782          sTFTaxesFlag LCD_XYaxesNum(uint16 LeftMax,uint16 LeftNexMax,uint16 RightMax,uint16 Right_2_Max)
    783          {
   \                     LCD_XYaxesNum: (+1)
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x4680             MOV      R8,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
   \   0000000C   0x001F             MOVS     R7,R3
    784              sTFTaxesFlag Amp;
    785              Amp.Left_Fix_One_Amp = LeftMax      / 224.0;                // 4 * 56 = 224 + 7   = 231
   \   0000000E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000010   0x0028             MOVS     R0,R5
   \   00000012   0x.... 0x....      BL       __aeabi_ui2d
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0x.... 0x....      LDR.W    R3,??DataTable12_3  ;; 0x406c0000
   \   0000001C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000020   0x.... 0x....      BL       __aeabi_d2f
   \   00000024   0x9000             STR      R0,[SP, #+0]
    786              Amp.Left_Fix_Two_Amp = LeftNexMax   / 224.0;        
   \   00000026   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000028   0x0030             MOVS     R0,R6
   \   0000002A   0x.... 0x....      BL       __aeabi_ui2d
   \   0000002E   0x2200             MOVS     R2,#+0
   \   00000030   0x.... 0x....      LDR.W    R3,??DataTable12_3  ;; 0x406c0000
   \   00000034   0x.... 0x....      BL       __aeabi_ddiv
   \   00000038   0x.... 0x....      BL       __aeabi_d2f
   \   0000003C   0x9001             STR      R0,[SP, #+4]
    787              Amp.RiAmp            = RightMax     / 114.0;                // 3 * 38 = 114 + 120 = 234
   \   0000003E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000040   0x0038             MOVS     R0,R7
   \   00000042   0x.... 0x....      BL       __aeabi_ui2d
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0x.... 0x....      LDR.W    R3,??DataTable12_4  ;; 0x405c8000
   \   0000004C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000050   0x.... 0x....      BL       __aeabi_d2f
   \   00000054   0x9002             STR      R0,[SP, #+8]
   \   00000056   0x9C0C             LDR      R4,[SP, #+48]
    788              Amp.RiAmp_Also       = Right_2_Max  / 114.0;
   \   00000058   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0x.... 0x....      BL       __aeabi_ui2d
   \   00000060   0x2200             MOVS     R2,#+0
   \   00000062   0x.... 0x....      LDR.W    R3,??DataTable12_4  ;; 0x405c8000
   \   00000066   0x.... 0x....      BL       __aeabi_ddiv
   \   0000006A   0x.... 0x....      BL       __aeabi_d2f
   \   0000006E   0x9003             STR      R0,[SP, #+12]
    789              uint8 CutVar = 0;
   \   00000070   0xF05F 0x0900      MOVS     R9,#+0
    790              
    791              LCD_8x6show(11,7,Color_Left_Main,0);
   \   00000074   0x2300             MOVS     R3,#+0
   \   00000076   0xF64F 0x72FF      MOVW     R2,#+65535
   \   0000007A   0x2107             MOVS     R1,#+7
   \   0000007C   0x200B             MOVS     R0,#+11
   \   0000007E   0x.... 0x....      BL       LCD_8x6show
    792              LCD_8x6show(265,120,Color_Right_Main,0);
   \   00000082   0x2300             MOVS     R3,#+0
   \   00000084   0xF44F 0x4278      MOV      R2,#+63488
   \   00000088   0x2178             MOVS     R1,#+120
   \   0000008A   0xF240 0x1009      MOVW     R0,#+265
   \   0000008E   0x.... 0x....      BL       LCD_8x6show
    793          
    794              for(CutVar = 1;CutVar<5;CutVar++)
   \   00000092   0x2001             MOVS     R0,#+1
   \   00000094   0x4681             MOV      R9,R0
   \   00000096   0xE035             B.N      ??LCD_XYaxesNum_0
    795              {
    796                  LCD_showDecFour( 0 , Fix_0 + CutVar * Fix_Chat     , Color_Left_Main , LeftMax * CutVar / 4 );
    797                  LCD_showDecFour( 0 , Fix_0 + CutVar * Fix_Chat - 8 , Color_Left_Sec  , LeftNexMax * CutVar / 4 );
    798                  if(CutVar<=2)
    799                  {
    800                      LCD_showDecFour( 264 , Float_0 + (CutVar-3) * Float_Chat , Color_Right_Main , RightMax * (3-CutVar) / 3 );
    801                      LCD_showDecFour( 264 , Float_0 + (CutVar-3) * Float_Chat - 8 , Color_Right_Sec , Right_2_Max * (3-CutVar) / 3 );
    802                  }
    803                  else
    804                  {
    805                      LCD_showDecFour( 264 , Float_0 + (5-CutVar) * Float_Chat , Color_Right_Main , RightMax * (5-CutVar) / 3 );
   \                     ??LCD_XYaxesNum_1: (+1)
   \   00000098   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000009A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000009E   0xF1D9 0x0005      RSBS     R0,R9,#+5
   \   000000A2   0xFB00 0xF007      MUL      R0,R0,R7
   \   000000A6   0x2103             MOVS     R1,#+3
   \   000000A8   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   000000AC   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000000AE   0xF44F 0x4278      MOV      R2,#+63488
   \   000000B2   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000B6   0xF1D9 0x0000      RSBS     R0,R9,#+0
   \   000000BA   0x2126             MOVS     R1,#+38
   \   000000BC   0x4348             MULS     R0,R1,R0
   \   000000BE   0xF510 0x719B      ADDS     R1,R0,#+310
   \   000000C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000C4   0xF44F 0x7084      MOV      R0,#+264
   \   000000C8   0x.... 0x....      BL       LCD_showDecFour
    806                      LCD_showDecFour( 264 , Float_0 + (5-CutVar) * Float_Chat - 8 , Color_Right_Sec , Right_2_Max * (5-CutVar) / 3 );
   \   000000CC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000CE   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000D2   0xF1D9 0x0005      RSBS     R0,R9,#+5
   \   000000D6   0xFB00 0xF004      MUL      R0,R0,R4
   \   000000DA   0x2103             MOVS     R1,#+3
   \   000000DC   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   000000E0   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000000E2   0xF240 0x521F      MOVW     R2,#+1311
   \   000000E6   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000EA   0xF1D9 0x0000      RSBS     R0,R9,#+0
   \   000000EE   0x2126             MOVS     R1,#+38
   \   000000F0   0x4348             MULS     R0,R1,R0
   \   000000F2   0xF510 0x7197      ADDS     R1,R0,#+302
   \   000000F6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F8   0xF44F 0x7084      MOV      R0,#+264
   \   000000FC   0x.... 0x....      BL       LCD_showDecFour
    807                  }
   \                     ??LCD_XYaxesNum_2: (+1)
   \   00000100   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_XYaxesNum_0: (+1)
   \   00000104   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000108   0xF1B9 0x0F05      CMP      R9,#+5
   \   0000010C   0xDA5F             BGE.N    ??LCD_XYaxesNum_3
   \   0000010E   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000110   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000114   0xFB09 0xF005      MUL      R0,R9,R5
   \   00000118   0x2104             MOVS     R1,#+4
   \   0000011A   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   0000011E   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   00000120   0xF64F 0x72FF      MOVW     R2,#+65535
   \   00000124   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000128   0x2038             MOVS     R0,#+56
   \   0000012A   0xFB00 0xF009      MUL      R0,R0,R9
   \   0000012E   0x1DC1             ADDS     R1,R0,#+7
   \   00000130   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x.... 0x....      BL       LCD_showDecFour
   \   00000138   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000013A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000013E   0xFB09 0xF006      MUL      R0,R9,R6
   \   00000142   0x2104             MOVS     R1,#+4
   \   00000144   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   00000148   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000014A   0xF647 0x72FF      MOVW     R2,#+32767
   \   0000014E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000152   0x2038             MOVS     R0,#+56
   \   00000154   0xFB00 0xF009      MUL      R0,R0,R9
   \   00000158   0x1E41             SUBS     R1,R0,#+1
   \   0000015A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000015C   0x2000             MOVS     R0,#+0
   \   0000015E   0x.... 0x....      BL       LCD_showDecFour
   \   00000162   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000166   0xF1B9 0x0F03      CMP      R9,#+3
   \   0000016A   0xDA95             BGE.N    ??LCD_XYaxesNum_1
   \   0000016C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000016E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000172   0xF1D9 0x0003      RSBS     R0,R9,#+3
   \   00000176   0xFB00 0xF007      MUL      R0,R0,R7
   \   0000017A   0x2103             MOVS     R1,#+3
   \   0000017C   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   00000180   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   00000182   0xF44F 0x4278      MOV      R2,#+63488
   \   00000186   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000018A   0x2026             MOVS     R0,#+38
   \   0000018C   0xFB00 0xF009      MUL      R0,R0,R9
   \   00000190   0x1D81             ADDS     R1,R0,#+6
   \   00000192   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000194   0xF44F 0x7084      MOV      R0,#+264
   \   00000198   0x.... 0x....      BL       LCD_showDecFour
   \   0000019C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000019E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000001A2   0xF1D9 0x0003      RSBS     R0,R9,#+3
   \   000001A6   0xFB00 0xF004      MUL      R0,R0,R4
   \   000001AA   0x2103             MOVS     R1,#+3
   \   000001AC   0xFB90 0xF3F1      SDIV     R3,R0,R1
   \   000001B0   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   000001B2   0xF240 0x521F      MOVW     R2,#+1311
   \   000001B6   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000001BA   0x2026             MOVS     R0,#+38
   \   000001BC   0xFB00 0xF009      MUL      R0,R0,R9
   \   000001C0   0x1E81             SUBS     R1,R0,#+2
   \   000001C2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001C4   0xF44F 0x7084      MOV      R0,#+264
   \   000001C8   0x.... 0x....      BL       LCD_showDecFour
   \   000001CC   0xE798             B.N      ??LCD_XYaxesNum_2
    808              }
    809              return Amp;
   \                     ??LCD_XYaxesNum_3: (+1)
   \   000001CE   0x4640             MOV      R0,R8
   \   000001D0   0xA900             ADD      R1,SP,#+0
   \   000001D2   0x2210             MOVS     R2,#+16
   \   000001D4   0x.... 0x....      BL       __aeabi_memcpy4
   \   000001D8   0xB005             ADD      SP,SP,#+20
   \   000001DA   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    810          }
    811          
    812          // ÓÃ»§º¯Êý

   \                                 In section .text, align 2, keep-with-next
    813          void LCD_ClearShowWindow(uint16 Line,const uint16 ColTarget_01,uint16 Color_01,
    814                                               const uint16 ColTarget_02,uint16 Color_02,
    815                                               const uint16 ColTarget_03,uint16 Color_03,
    816                                               const uint16 ColTarget_04,uint16 Color_04,
    817                                               const uint16 ColTarget_05,uint16 Color_05,
    818                                               const uint16 ColTarget_06,uint16 Color_06,
    819                                               uint8 ValidNum)
    820          {
   \                     LCD_ClearShowWindow: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
   \   00000008   0x001F             MOVS     R7,R3
    821              switch(ValidNum)
   \   0000000A   0x980F             LDR      R0,[SP, #+60]
   \   0000000C   0x2801             CMP      R0,#+1
   \   0000000E   0xD036             BEQ.N    ??LCD_ClearShowWindow_0
   \   00000010   0xD340             BCC.N    ??LCD_ClearShowWindow_1
   \   00000012   0x2803             CMP      R0,#+3
   \   00000014   0xD020             BEQ.N    ??LCD_ClearShowWindow_2
   \   00000016   0xD328             BCC.N    ??LCD_ClearShowWindow_3
   \   00000018   0x2805             CMP      R0,#+5
   \   0000001A   0xD00B             BEQ.N    ??LCD_ClearShowWindow_4
   \   0000001C   0xD313             BCC.N    ??LCD_ClearShowWindow_5
   \   0000001E   0x2806             CMP      R0,#+6
   \   00000020   0xD138             BNE.N    ??LCD_ClearShowWindow_1
    822              {
    823                  case 6:
    824                      LCD_SetCursor(Line,ColTarget_06);
   \                     ??LCD_ClearShowWindow_6: (+1)
   \   00000022   0x990D             LDR      R1,[SP, #+52]
   \   00000024   0x0020             MOVS     R0,R4
   \   00000026   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000028   0x.... 0x....      BL       LCD_SetCursor
    825                      LCD_writeReg(DRAWPOINT,Color_06);
   \   0000002C   0x990E             LDR      R1,[SP, #+56]
   \   0000002E   0x2022             MOVS     R0,#+34
   \   00000030   0x.... 0x....      BL       LCD_writeReg
    826                  case 5:
    827                      LCD_SetCursor(Line,ColTarget_05);
   \                     ??LCD_ClearShowWindow_4: (+1)
   \   00000034   0x990B             LDR      R1,[SP, #+44]
   \   00000036   0x0020             MOVS     R0,R4
   \   00000038   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000003A   0x.... 0x....      BL       LCD_SetCursor
    828                      LCD_writeReg(DRAWPOINT,Color_05);
   \   0000003E   0x990C             LDR      R1,[SP, #+48]
   \   00000040   0x2022             MOVS     R0,#+34
   \   00000042   0x.... 0x....      BL       LCD_writeReg
    829                  case 4:
    830                      LCD_SetCursor(Line,ColTarget_04);
   \                     ??LCD_ClearShowWindow_5: (+1)
   \   00000046   0x9909             LDR      R1,[SP, #+36]
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004C   0x.... 0x....      BL       LCD_SetCursor
    831                      LCD_writeReg(DRAWPOINT,Color_04);
   \   00000050   0x990A             LDR      R1,[SP, #+40]
   \   00000052   0x2022             MOVS     R0,#+34
   \   00000054   0x.... 0x....      BL       LCD_writeReg
    832                  case 3:
    833                      LCD_SetCursor(Line,ColTarget_03);
   \                     ??LCD_ClearShowWindow_2: (+1)
   \   00000058   0x9907             LDR      R1,[SP, #+28]
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000005E   0x.... 0x....      BL       LCD_SetCursor
    834                      LCD_writeReg(DRAWPOINT,Color_03);
   \   00000062   0x9908             LDR      R1,[SP, #+32]
   \   00000064   0x2022             MOVS     R0,#+34
   \   00000066   0x.... 0x....      BL       LCD_writeReg
    835                  case 2:
    836                      LCD_SetCursor(Line,ColTarget_02);
   \                     ??LCD_ClearShowWindow_3: (+1)
   \   0000006A   0x0039             MOVS     R1,R7
   \   0000006C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000006E   0x0020             MOVS     R0,R4
   \   00000070   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000072   0x.... 0x....      BL       LCD_SetCursor
    837                      LCD_writeReg(DRAWPOINT,Color_02);
   \   00000076   0x9906             LDR      R1,[SP, #+24]
   \   00000078   0x2022             MOVS     R0,#+34
   \   0000007A   0x.... 0x....      BL       LCD_writeReg
    838                  case 1:
    839                      LCD_SetCursor(Line,ColTarget_01);
   \                     ??LCD_ClearShowWindow_0: (+1)
   \   0000007E   0x0029             MOVS     R1,R5
   \   00000080   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000082   0x0020             MOVS     R0,R4
   \   00000084   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000086   0x.... 0x....      BL       LCD_SetCursor
    840                      LCD_writeReg(DRAWPOINT,Color_01);
   \   0000008A   0x0031             MOVS     R1,R6
   \   0000008C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000008E   0x2022             MOVS     R0,#+34
   \   00000090   0x.... 0x....      BL       LCD_writeReg
    841                  break;
    842              }
    843              LCD_SetCursor(Line,0);
   \                     ??LCD_ClearShowWindow_1: (+1)
   \   00000094   0x2100             MOVS     R1,#+0
   \   00000096   0x0020             MOVS     R0,R4
   \   00000098   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000009A   0x.... 0x....      BL       LCD_SetCursor
    844              LCD_writeReg(DRAWPOINT,Black);
   \   0000009E   0x2100             MOVS     R1,#+0
   \   000000A0   0x2022             MOVS     R0,#+34
   \   000000A2   0x.... 0x....      BL       LCD_writeReg
    845          }
   \   000000A6   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    846          

   \                                 In section .text, align 2, keep-with-next
    847          void LCD_ClearSomeThing(void)
    848          {
   \                     LCD_ClearSomeThing: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    849              uint8  Col  = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    850              uint16 Line = 0;
   \   00000004   0x2500             MOVS     R5,#+0
    851              for(Line=16;Line<=263;Line++)
   \   00000006   0x2010             MOVS     R0,#+16
   \   00000008   0x0005             MOVS     R5,R0
   \   0000000A   0xE023             B.N      ??LCD_ClearSomeThing_0
    852              {
    853                  for(Col=8;Col<=234;Col++)
    854                  {
    855                      LCD_SetCursor(Line,Col);
   \                     ??LCD_ClearSomeThing_1: (+1)
   \   0000000C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000000E   0x0021             MOVS     R1,R4
   \   00000010   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000016   0x.... 0x....      BL       LCD_SetCursor
    856                      LCD_writeReg(DRAWPOINT,Black);
   \   0000001A   0x2100             MOVS     R1,#+0
   \   0000001C   0x2022             MOVS     R0,#+34
   \   0000001E   0x.... 0x....      BL       LCD_writeReg
    857                  }
   \   00000022   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_ClearSomeThing_2: (+1)
   \   00000024   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000026   0x2CEB             CMP      R4,#+235
   \   00000028   0xDBF0             BLT.N    ??LCD_ClearSomeThing_1
    858                  LCD_SetCursor(Line,7);
   \   0000002A   0x2107             MOVS     R1,#+7
   \   0000002C   0x0028             MOVS     R0,R5
   \   0000002E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000030   0x.... 0x....      BL       LCD_SetCursor
    859                  LCD_writeReg(DRAWPOINT,Color_Left_Main);
   \   00000034   0xF64F 0x71FF      MOVW     R1,#+65535
   \   00000038   0x2022             MOVS     R0,#+34
   \   0000003A   0x.... 0x....      BL       LCD_writeReg
    860                  LCD_SetCursor(Line,120);
   \   0000003E   0x2178             MOVS     R1,#+120
   \   00000040   0x0028             MOVS     R0,R5
   \   00000042   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000044   0x.... 0x....      BL       LCD_SetCursor
    861                  LCD_writeReg(DRAWPOINT,Color_Right_Main);
   \   00000048   0xF44F 0x4178      MOV      R1,#+63488
   \   0000004C   0x2022             MOVS     R0,#+34
   \   0000004E   0x.... 0x....      BL       LCD_writeReg
   \   00000052   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_ClearSomeThing_0: (+1)
   \   00000054   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000056   0xF5B5 0x7F84      CMP      R5,#+264
   \   0000005A   0xDA01             BGE.N    ??LCD_ClearSomeThing_3
   \   0000005C   0x2408             MOVS     R4,#+8
   \   0000005E   0xE7E1             B.N      ??LCD_ClearSomeThing_2
    862              }
    863          }
   \                     ??LCD_ClearSomeThing_3: (+1)
   \   00000060   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    864          

   \                                 In section .text, align 2, keep-with-next
    865          void LCD_ShowInfor(uint8 ShowWhich)
    866          {
   \                     LCD_ShowInfor: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    867              /*
    868              LCD_SetLine(284, 208 ,34,Color_Left_Sec,0);              // ÖÐÐÄÏß
    869              LCD_SetLine(284, 176 ,34,Color_Right_Sec,0);               // ÖÐÐÄÏß±ä»¯ÂÊ
    870          
    871              */
    872              /*
    873              LCD_SetLine(284, 144 ,34,Color_Left_Main,0);        // ¶æ»úPWM
    874              LCD_SetLine(284, 112 ,34,Color_Left_Thr,0);        // ¶æ»úD_PWM
    875              */
    876              // ÖÐÐÄ
    877              // LCD_8x8show(285,200,Color_Left_Sec,0);
    878              // LCD_8x8show(293,200,Color_Left_Sec,1);
    879              // LCD_12x12show(285,200,Color_Left_Sec,1);
    880              // ±ä»¯ÂÊ
    881              
    882              // ÖÐÐÄ
    883              LCD_12x12show(284,200,Color_Left_Sec,0);
   \   00000004   0x2300             MOVS     R3,#+0
   \   00000006   0xF647 0x72FF      MOVW     R2,#+32767
   \   0000000A   0x21C8             MOVS     R1,#+200
   \   0000000C   0xF44F 0x708E      MOV      R0,#+284
   \   00000010   0x.... 0x....      BL       LCD_12x12show
    884              LCD_12x12show(296,200,Color_Left_Sec,1);
   \   00000014   0x2301             MOVS     R3,#+1
   \   00000016   0xF647 0x72FF      MOVW     R2,#+32767
   \   0000001A   0x21C8             MOVS     R1,#+200
   \   0000001C   0xF44F 0x7094      MOV      R0,#+296
   \   00000020   0x.... 0x....      BL       LCD_12x12show
    885              // ÖÐÐÄ±ä»¯ÂÊ
    886              LCD_12x12show(284,168,Color_Right_Sec,0);
   \   00000024   0x2300             MOVS     R3,#+0
   \   00000026   0xF240 0x521F      MOVW     R2,#+1311
   \   0000002A   0x21A8             MOVS     R1,#+168
   \   0000002C   0xF44F 0x708E      MOV      R0,#+284
   \   00000030   0x.... 0x....      BL       LCD_12x12show
    887              LCD_12x12show(296,168,Color_Right_Sec,1);
   \   00000034   0x2301             MOVS     R3,#+1
   \   00000036   0xF240 0x521F      MOVW     R2,#+1311
   \   0000003A   0x21A8             MOVS     R1,#+168
   \   0000003C   0xF44F 0x7094      MOV      R0,#+296
   \   00000040   0x.... 0x....      BL       LCD_12x12show
    888              LCD_12x12show(284,156,Color_Right_Sec,2);
   \   00000044   0x2302             MOVS     R3,#+2
   \   00000046   0xF240 0x521F      MOVW     R2,#+1311
   \   0000004A   0x219C             MOVS     R1,#+156
   \   0000004C   0xF44F 0x708E      MOV      R0,#+284
   \   00000050   0x.... 0x....      BL       LCD_12x12show
    889              LCD_12x12show(296,156,Color_Right_Sec,3);
   \   00000054   0x2303             MOVS     R3,#+3
   \   00000056   0xF240 0x521F      MOVW     R2,#+1311
   \   0000005A   0x219C             MOVS     R1,#+156
   \   0000005C   0xF44F 0x7094      MOV      R0,#+296
   \   00000060   0x.... 0x....      BL       LCD_12x12show
    890              LCD_12x12show(308,156,Color_Right_Sec,4);
   \   00000064   0x2304             MOVS     R3,#+4
   \   00000066   0xF240 0x521F      MOVW     R2,#+1311
   \   0000006A   0x219C             MOVS     R1,#+156
   \   0000006C   0xF44F 0x709A      MOV      R0,#+308
   \   00000070   0x.... 0x....      BL       LCD_12x12show
    891              if( 0 == ShowWhich)
   \   00000074   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000076   0x2C00             CMP      R4,#+0
   \   00000078   0xF040 0x8091      BNE.W    ??LCD_ShowInfor_0
    892              {
    893                  // ¸ø¶¨ËÙ¶È Color_Left_Main
    894                  LCD_12x12show(284,136,Color_Left_Main,8);
   \   0000007C   0x2308             MOVS     R3,#+8
   \   0000007E   0xF64F 0x72FF      MOVW     R2,#+65535
   \   00000082   0x2188             MOVS     R1,#+136
   \   00000084   0xF44F 0x708E      MOV      R0,#+284
   \   00000088   0x.... 0x....      BL       LCD_12x12show
    895                  LCD_12x12show(296,136,Color_Left_Main,9);
   \   0000008C   0x2309             MOVS     R3,#+9
   \   0000008E   0xF64F 0x72FF      MOVW     R2,#+65535
   \   00000092   0x2188             MOVS     R1,#+136
   \   00000094   0xF44F 0x7094      MOV      R0,#+296
   \   00000098   0x.... 0x....      BL       LCD_12x12show
    896                  LCD_12x12show(284,124,Color_Left_Main,10);
   \   0000009C   0x230A             MOVS     R3,#+10
   \   0000009E   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000000A2   0x217C             MOVS     R1,#+124
   \   000000A4   0xF44F 0x708E      MOV      R0,#+284
   \   000000A8   0x.... 0x....      BL       LCD_12x12show
    897                  LCD_12x12show(296,124,Color_Left_Main,11);
   \   000000AC   0x230B             MOVS     R3,#+11
   \   000000AE   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000000B2   0x217C             MOVS     R1,#+124
   \   000000B4   0xF44F 0x7094      MOV      R0,#+296
   \   000000B8   0x.... 0x....      BL       LCD_12x12show
    898                  
    899                  // D_¸ø¶¨ËÙ¶È Color_Left_Thr
    900                  LCD_12x12show(284,72,Color_Left_Refer,17);
   \   000000BC   0x2311             MOVS     R3,#+17
   \   000000BE   0xF64F 0x72E0      MOVW     R2,#+65504
   \   000000C2   0x2148             MOVS     R1,#+72
   \   000000C4   0xF44F 0x708E      MOV      R0,#+284
   \   000000C8   0x.... 0x....      BL       LCD_12x12show
    901                  LCD_12x12show(290,72,Color_Left_Refer,8);
   \   000000CC   0x2308             MOVS     R3,#+8
   \   000000CE   0xF64F 0x72E0      MOVW     R2,#+65504
   \   000000D2   0x2148             MOVS     R1,#+72
   \   000000D4   0xF44F 0x7091      MOV      R0,#+290
   \   000000D8   0x.... 0x....      BL       LCD_12x12show
    902                  LCD_12x12show(302,72,Color_Left_Refer,9);
   \   000000DC   0x2309             MOVS     R3,#+9
   \   000000DE   0xF64F 0x72E0      MOVW     R2,#+65504
   \   000000E2   0x2148             MOVS     R1,#+72
   \   000000E4   0xF44F 0x7097      MOV      R0,#+302
   \   000000E8   0x.... 0x....      BL       LCD_12x12show
    903                  LCD_12x12show(284,60,Color_Left_Refer,10);
   \   000000EC   0x230A             MOVS     R3,#+10
   \   000000EE   0xF64F 0x72E0      MOVW     R2,#+65504
   \   000000F2   0x213C             MOVS     R1,#+60
   \   000000F4   0xF44F 0x708E      MOV      R0,#+284
   \   000000F8   0x.... 0x....      BL       LCD_12x12show
    904                  LCD_12x12show(296,60,Color_Left_Refer,11);
   \   000000FC   0x230B             MOVS     R3,#+11
   \   000000FE   0xF64F 0x72E0      MOVW     R2,#+65504
   \   00000102   0x213C             MOVS     R1,#+60
   \   00000104   0xF44F 0x7094      MOV      R0,#+296
   \   00000108   0x.... 0x....      BL       LCD_12x12show
    905                
    906                  // Êµ¼ÊËÙ¶È Color_Left_Refer
    907                  LCD_12x12show(284,104,Color_Left_Thr,12);
   \   0000010C   0x230C             MOVS     R3,#+12
   \   0000010E   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000112   0x2168             MOVS     R1,#+104
   \   00000114   0xF44F 0x708E      MOV      R0,#+284
   \   00000118   0x.... 0x....      BL       LCD_12x12show
    908                  LCD_12x12show(296,104,Color_Left_Thr,13);
   \   0000011C   0x230D             MOVS     R3,#+13
   \   0000011E   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000122   0x2168             MOVS     R1,#+104
   \   00000124   0xF44F 0x7094      MOV      R0,#+296
   \   00000128   0x.... 0x....      BL       LCD_12x12show
    909                  LCD_12x12show(284,92,Color_Left_Thr,10);
   \   0000012C   0x230A             MOVS     R3,#+10
   \   0000012E   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000132   0x215C             MOVS     R1,#+92
   \   00000134   0xF44F 0x708E      MOV      R0,#+284
   \   00000138   0x.... 0x....      BL       LCD_12x12show
    910                  LCD_12x12show(296,92,Color_Left_Thr,11);
   \   0000013C   0x230B             MOVS     R3,#+11
   \   0000013E   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000142   0x215C             MOVS     R1,#+92
   \   00000144   0xF44F 0x7094      MOV      R0,#+296
   \   00000148   0x.... 0x....      BL       LCD_12x12show
    911               
    912                  // µç»úPWM Color_Right_Main
    913                  LCD_12x12show(284,40,Color_Right_Main,7);
   \   0000014C   0x2307             MOVS     R3,#+7
   \   0000014E   0xF44F 0x4278      MOV      R2,#+63488
   \   00000152   0x2128             MOVS     R1,#+40
   \   00000154   0xF44F 0x708E      MOV      R0,#+284
   \   00000158   0x.... 0x....      BL       LCD_12x12show
    914                  LCD_12x12show(296,40,Color_Right_Main,6);
   \   0000015C   0x2306             MOVS     R3,#+6
   \   0000015E   0xF44F 0x4278      MOV      R2,#+63488
   \   00000162   0x2128             MOVS     R1,#+40
   \   00000164   0xF44F 0x7094      MOV      R0,#+296
   \   00000168   0x.... 0x....      BL       LCD_12x12show
    915                  LCD_12x12show(284,28,Color_Right_Main,14);
   \   0000016C   0x230E             MOVS     R3,#+14
   \   0000016E   0xF44F 0x4278      MOV      R2,#+63488
   \   00000172   0x211C             MOVS     R1,#+28
   \   00000174   0xF44F 0x708E      MOV      R0,#+284
   \   00000178   0x.... 0x....      BL       LCD_12x12show
    916                  LCD_12x12show(290,28,Color_Right_Main,15);
   \   0000017C   0x230F             MOVS     R3,#+15
   \   0000017E   0xF44F 0x4278      MOV      R2,#+63488
   \   00000182   0x211C             MOVS     R1,#+28
   \   00000184   0xF44F 0x7091      MOV      R0,#+290
   \   00000188   0x.... 0x....      BL       LCD_12x12show
    917                  LCD_12x12show(296,28,Color_Right_Main,16);
   \   0000018C   0x2310             MOVS     R3,#+16
   \   0000018E   0xF44F 0x4278      MOV      R2,#+63488
   \   00000192   0x211C             MOVS     R1,#+28
   \   00000194   0xF44F 0x7094      MOV      R0,#+296
   \   00000198   0x.... 0x....      BL       LCD_12x12show
   \   0000019C   0xE057             B.N      ??LCD_ShowInfor_1
    918              }
    919              else
    920              {
    921                  // ¶æ»úPWM Color_Left_Main
    922                  LCD_12x12show(284,136,Color_Left_Main,5);
   \                     ??LCD_ShowInfor_0: (+1)
   \   0000019E   0x2305             MOVS     R3,#+5
   \   000001A0   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000001A4   0x2188             MOVS     R1,#+136
   \   000001A6   0xF44F 0x708E      MOV      R0,#+284
   \   000001AA   0x.... 0x....      BL       LCD_12x12show
    923                  LCD_12x12show(296,136,Color_Left_Main,6);
   \   000001AE   0x2306             MOVS     R3,#+6
   \   000001B0   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000001B4   0x2188             MOVS     R1,#+136
   \   000001B6   0xF44F 0x7094      MOV      R0,#+296
   \   000001BA   0x.... 0x....      BL       LCD_12x12show
    924                  LCD_12x12show(284,124,Color_Left_Main,14);
   \   000001BE   0x230E             MOVS     R3,#+14
   \   000001C0   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000001C4   0x217C             MOVS     R1,#+124
   \   000001C6   0xF44F 0x708E      MOV      R0,#+284
   \   000001CA   0x.... 0x....      BL       LCD_12x12show
    925                  LCD_12x12show(290,124,Color_Left_Main,15);
   \   000001CE   0x230F             MOVS     R3,#+15
   \   000001D0   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000001D4   0x217C             MOVS     R1,#+124
   \   000001D6   0xF44F 0x7091      MOV      R0,#+290
   \   000001DA   0x.... 0x....      BL       LCD_12x12show
    926                  LCD_12x12show(296,124,Color_Left_Main,16);
   \   000001DE   0x2310             MOVS     R3,#+16
   \   000001E0   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000001E4   0x217C             MOVS     R1,#+124
   \   000001E6   0xF44F 0x7094      MOV      R0,#+296
   \   000001EA   0x.... 0x....      BL       LCD_12x12show
    927                  
    928                  // D¶æ»úPWM Color_Left_Thr
    929                  LCD_12x12show(284,104,Color_Left_Thr,17);
   \   000001EE   0x2311             MOVS     R3,#+17
   \   000001F0   0xF44F 0x62FC      MOV      R2,#+2016
   \   000001F4   0x2168             MOVS     R1,#+104
   \   000001F6   0xF44F 0x708E      MOV      R0,#+284
   \   000001FA   0x.... 0x....      BL       LCD_12x12show
    930                  LCD_12x12show(290,104,Color_Left_Thr,5);
   \   000001FE   0x2305             MOVS     R3,#+5
   \   00000200   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000204   0x2168             MOVS     R1,#+104
   \   00000206   0xF44F 0x7091      MOV      R0,#+290
   \   0000020A   0x.... 0x....      BL       LCD_12x12show
    931                  LCD_12x12show(302,104,Color_Left_Thr,6);
   \   0000020E   0x2306             MOVS     R3,#+6
   \   00000210   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000214   0x2168             MOVS     R1,#+104
   \   00000216   0xF44F 0x7097      MOV      R0,#+302
   \   0000021A   0x.... 0x....      BL       LCD_12x12show
    932                  LCD_12x12show(284,92,Color_Left_Thr,14);
   \   0000021E   0x230E             MOVS     R3,#+14
   \   00000220   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000224   0x215C             MOVS     R1,#+92
   \   00000226   0xF44F 0x708E      MOV      R0,#+284
   \   0000022A   0x.... 0x....      BL       LCD_12x12show
    933                  LCD_12x12show(290,92,Color_Left_Thr,15);
   \   0000022E   0x230F             MOVS     R3,#+15
   \   00000230   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000234   0x215C             MOVS     R1,#+92
   \   00000236   0xF44F 0x7091      MOV      R0,#+290
   \   0000023A   0x.... 0x....      BL       LCD_12x12show
    934                  LCD_12x12show(296,92,Color_Left_Thr,16);
   \   0000023E   0x2310             MOVS     R3,#+16
   \   00000240   0xF44F 0x62FC      MOV      R2,#+2016
   \   00000244   0x215C             MOVS     R1,#+92
   \   00000246   0xF44F 0x7094      MOV      R0,#+296
   \   0000024A   0x.... 0x....      BL       LCD_12x12show
    935              }
    936          }
   \                     ??LCD_ShowInfor_1: (+1)
   \   0000024E   0xBD10             POP      {R4,PC}          ;; return
    937          
    938          
    939          
    940          
    941          
    942          //ÒÔÏÂÎªËÄÖáÓÃ
    943          // 8x6·¶Î§ÄÚÊä³ö×ÖÄ££¬ÒÔ×óÏÂ½ÇÎª±ê×¼Î»ÖÃ²Î¿¼
    944          //  Magenta  PWM1
    945          //  Cyan     PWM2
    946          //  Blue2    PWM3
    947          //  Grey     PWM4
    948          //×ø±êÏµÖØ¹¹
    949          #define xpos_aircraft 12
    950          #define ypos_aircraft 40
    951          
    952          
    953          

   \                                 In section .text, align 2, keep-with-next
    954          void LCD_8x6show(uint16 startXPos,uint8 YPos,uint16 color,uint8 Num)  //ÏÔÊ¾µ¥¸ö×Ö·û£¬ Num ÎªASCÂë£¬´óÓÚµÈÓÚ32
    955          {
   \                     LCD_8x6show: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    956              uint16 LineLoop = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    957              uint16 ColLoop = 0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
    958              if(Num>31)
   \   00000014   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000016   0x2F20             CMP      R7,#+32
   \   00000018   0xDB30             BLT.N    ??LCD_8x6show_0
    959              {
    960              for(LineLoop=0;LineLoop<6;LineLoop++)
   \   0000001A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000001E   0xE025             B.N      ??LCD_8x6show_1
    961              {
    962                  for(ColLoop=0;ColLoop<8;ColLoop++)
    963                  {
    964                      if(0x80 == (0x80&(( C6x8[Num-32][LineLoop])<<ColLoop)))
   \                     ??LCD_8x6show_2: (+1)
   \   00000020   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000024   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000026   0x2006             MOVS     R0,#+6
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable12_5
   \   0000002C   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000030   0xEB18 0x0000      ADDS     R0,R8,R0
   \   00000034   0xF810 0x0CC0      LDRB     R0,[R0, #-192]
   \   00000038   0xFA10 0xF009      LSLS     R0,R0,R9
   \   0000003C   0x0600             LSLS     R0,R0,#+24
   \   0000003E   0xD50C             BPL.N    ??LCD_8x6show_3
    965                      {
    966                          LCD_SetCursor(startXPos+LineLoop,YPos+ColLoop);
   \   00000040   0xFA59 0xF185      UXTAB    R1,R9,R5
   \   00000044   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000046   0xEB18 0x0004      ADDS     R0,R8,R4
   \   0000004A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000004C   0x.... 0x....      BL       LCD_SetCursor
    967                          LCD_writeReg(DRAWPOINT,color);
   \   00000050   0x0031             MOVS     R1,R6
   \   00000052   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000054   0x2022             MOVS     R0,#+34
   \   00000056   0x.... 0x....      BL       LCD_writeReg
    968                      }
    969                  }
   \                     ??LCD_8x6show_3: (+1)
   \   0000005A   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_8x6show_4: (+1)
   \   0000005E   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000062   0xF1B9 0x0F08      CMP      R9,#+8
   \   00000066   0xDBDB             BLT.N    ??LCD_8x6show_2
   \   00000068   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_8x6show_1: (+1)
   \   0000006C   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000070   0xF1B8 0x0F06      CMP      R8,#+6
   \   00000074   0xDA02             BGE.N    ??LCD_8x6show_0
   \   00000076   0xF05F 0x0900      MOVS     R9,#+0
   \   0000007A   0xE7F0             B.N      ??LCD_8x6show_4
    970              }
    971              }
    972          }
   \                     ??LCD_8x6show_0: (+1)
   \   0000007C   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    973          

   \                                 In section .text, align 2, keep-with-next
    974          void LCD_8x6show_string(uint16 startXPos,uint8 YPos,uint16 color,unsigned char str[])  //ÏÔÊ¾Ò»´®×Ö·û
    975          {
   \                     LCD_8x6show_string: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    976           
    977            uint16 charloop=0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xE00E             B.N      ??LCD_8x6show_string_0
    978             while(str[charloop]!='\0')
    979             {
    980               LCD_8x6show(startXPos,YPos,color,str[charloop]);
   \                     ??LCD_8x6show_string_1: (+1)
   \   00000012   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000016   0xF818 0x3007      LDRB     R3,[R8, R7]
   \   0000001A   0x0032             MOVS     R2,R6
   \   0000001C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000001E   0x0029             MOVS     R1,R5
   \   00000020   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000022   0x0020             MOVS     R0,R4
   \   00000024   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000026   0x.... 0x....      BL       LCD_8x6show
    981                startXPos += 6;
   \   0000002A   0x1DA4             ADDS     R4,R4,#+6
    982                charloop++;
   \   0000002C   0xF118 0x0801      ADDS     R8,R8,#+1
    983             }
   \                     ??LCD_8x6show_string_0: (+1)
   \   00000030   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   00000034   0xF818 0x0007      LDRB     R0,[R8, R7]
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD1EA             BNE.N    ??LCD_8x6show_string_1
    984          }
   \   0000003C   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    985          
    986          

   \                                 In section .text, align 2, keep-with-next
    987          void LCD_axis_aircraft(void)  //½¨Á¢×ø±êÏµ
    988          {
   \                     LCD_axis_aircraft: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    989            LCD_SetLine(12,39,320,Grey,0);    // 0 Ë®Æ½ÓÒÒÆ£¬1 ÊúÖ±ÉÏÒÆ
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0xF24F 0x73DE      MOVW     R3,#+63454
   \   0000000A   0xF44F 0x72A0      MOV      R2,#+320
   \   0000000E   0x2127             MOVS     R1,#+39
   \   00000010   0x200C             MOVS     R0,#+12
   \   00000012   0x.... 0x....      BL       LCD_SetLine
    990          
    991            LCD_8x6show_string(0,0,Magenta,"PWM1");
   \   00000016   0x.... 0x....      LDR.W    R3,??DataTable12_6
   \   0000001A   0xF64F 0x021F      MOVW     R2,#+63519
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       LCD_8x6show_string
    992            LCD_8x6show_string(0,8,Cyan,"PWM2");
   \   00000026   0x.... 0x....      LDR.W    R3,??DataTable12_7
   \   0000002A   0xF647 0x72FF      MOVW     R2,#+32767
   \   0000002E   0x2108             MOVS     R1,#+8
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       LCD_8x6show_string
    993            LCD_8x6show_string(0,16,Blue2,"PWM3");
   \   00000036   0x.... 0x....      LDR.W    R3,??DataTable12_8
   \   0000003A   0xF240 0x521F      MOVW     R2,#+1311
   \   0000003E   0x2110             MOVS     R1,#+16
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      BL       LCD_8x6show_string
    994            LCD_8x6show_string(0,24,Grey,"PWM4");
   \   00000046   0x.... 0x....      LDR.W    R3,??DataTable12_9
   \   0000004A   0xF24F 0x72DE      MOVW     R2,#+63454
   \   0000004E   0x2118             MOVS     R1,#+24
   \   00000050   0x2000             MOVS     R0,#+0
   \   00000052   0x.... 0x....      BL       LCD_8x6show_string
    995            
    996            LCD_8x6show_string(40,24,Grey,"axis x:");
   \   00000056   0x.... 0x....      LDR.W    R3,??DataTable12_10
   \   0000005A   0xF24F 0x72DE      MOVW     R2,#+63454
   \   0000005E   0x2118             MOVS     R1,#+24
   \   00000060   0x2028             MOVS     R0,#+40
   \   00000062   0x.... 0x....      BL       LCD_8x6show_string
    997            LCD_8x6show_string(40,16,Grey,"axis y:");
   \   00000066   0x.... 0x....      LDR.W    R3,??DataTable12_11
   \   0000006A   0xF24F 0x72DE      MOVW     R2,#+63454
   \   0000006E   0x2110             MOVS     R1,#+16
   \   00000070   0x2028             MOVS     R0,#+40
   \   00000072   0x.... 0x....      BL       LCD_8x6show_string
    998            LCD_8x6show_string(40,8,Grey,"axis z:");
   \   00000076   0x....             LDR.N    R3,??DataTable12_12
   \   00000078   0xF24F 0x72DE      MOVW     R2,#+63454
   \   0000007C   0x2108             MOVS     R1,#+8
   \   0000007E   0x2028             MOVS     R0,#+40
   \   00000080   0x.... 0x....      BL       LCD_8x6show_string
    999              
   1000              LCD_8x6show_string(120,24,Grey,"cm/s x:");
   \   00000084   0x....             LDR.N    R3,??DataTable12_13
   \   00000086   0xF24F 0x72DE      MOVW     R2,#+63454
   \   0000008A   0x2118             MOVS     R1,#+24
   \   0000008C   0x2078             MOVS     R0,#+120
   \   0000008E   0x.... 0x....      BL       LCD_8x6show_string
   1001                LCD_8x6show_string(120,16,Grey,"cm/s y:");
   \   00000092   0x....             LDR.N    R3,??DataTable12_14
   \   00000094   0xF24F 0x72DE      MOVW     R2,#+63454
   \   00000098   0x2110             MOVS     R1,#+16
   \   0000009A   0x2078             MOVS     R0,#+120
   \   0000009C   0x.... 0x....      BL       LCD_8x6show_string
   1002                 LCD_8x6show_string(120,8,Grey,"cm/s z:");
   \   000000A0   0x....             LDR.N    R3,??DataTable12_15
   \   000000A2   0xF24F 0x72DE      MOVW     R2,#+63454
   \   000000A6   0x2108             MOVS     R1,#+8
   \   000000A8   0x2078             MOVS     R0,#+120
   \   000000AA   0x.... 0x....      BL       LCD_8x6show_string
   1003           
   1004            LCD_8x6show_string(0,40,White,"0");
   \   000000AE   0x....             ADR.N    R3,??DataTable11  ;; "0"
   \   000000B0   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000000B4   0x2128             MOVS     R1,#+40
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x.... 0x....      BL       LCD_8x6show_string
   1005            LCD_8x6show_string(0,80,White,"20");
   \   000000BC   0x....             ADR.N    R3,??DataTable11_1  ;; 0x32, 0x30, 0x00, 0x00
   \   000000BE   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000000C2   0x2150             MOVS     R1,#+80
   \   000000C4   0x2000             MOVS     R0,#+0
   \   000000C6   0x.... 0x....      BL       LCD_8x6show_string
   1006            LCD_8x6show_string(0,120,White,"40");
   \   000000CA   0x....             ADR.N    R3,??DataTable12  ;; 0x34, 0x30, 0x00, 0x00
   \   000000CC   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000000D0   0x2178             MOVS     R1,#+120
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0x.... 0x....      BL       LCD_8x6show_string
   1007            LCD_8x6show_string(0,160,White,"60");
   \   000000D8   0x....             ADR.N    R3,??DataTable12_1  ;; 0x36, 0x30, 0x00, 0x00
   \   000000DA   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000000DE   0x21A0             MOVS     R1,#+160
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x.... 0x....      BL       LCD_8x6show_string
   1008            LCD_8x6show_string(0,200,White,"80");
   \   000000E6   0x....             ADR.N    R3,??DataTable12_2  ;; 0x38, 0x30, 0x00, 0x00
   \   000000E8   0xF64F 0x72FF      MOVW     R2,#+65535
   \   000000EC   0x21C8             MOVS     R1,#+200
   \   000000EE   0x2000             MOVS     R0,#+0
   \   000000F0   0x.... 0x....      BL       LCD_8x6show_string
   1009          }
   \   000000F4   0xBD01             POP      {R0,PC}          ;; return
   1010          
   1011          
   1012          // ÏÔÊ¾ËÄÎ»Ê®½øÖÆÊý£¬ÓÃÓÚ×ø±êÖá½¨Á¢

   \                                 In section .text, align 2, keep-with-next
   1013          void LCD_showDecFour(uint16 startXPos,uint8 YPos,uint16 color,uint16 Num)
   1014          {
   \                     LCD_showDecFour: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   1015              uint16 tempNum = Num;
   \   0000000A   0x0019             MOVS     R1,R3
   1016              uint8  haveMuch = 0;
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0xE004             B.N      ??LCD_showDecFour_0
   1017              while(tempNum >= 1)
   1018              {
   1019                  tempNum/=10;
   \                     ??LCD_showDecFour_1: (+1)
   \   00000010   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000012   0x220A             MOVS     R2,#+10
   \   00000014   0xFB91 0xF1F2      SDIV     R1,R1,R2
   1020                  haveMuch++;
   \   00000018   0x1C40             ADDS     R0,R0,#+1
   1021              }
   \                     ??LCD_showDecFour_0: (+1)
   \   0000001A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001C   0x2900             CMP      R1,#+0
   \   0000001E   0xD1F7             BNE.N    ??LCD_showDecFour_1
   1022              uint8 qian = (Num/1000);
   \   00000020   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   00000022   0xF44F 0x717A      MOV      R1,#+1000
   \   00000026   0xFB93 0xF1F1      SDIV     R1,R3,R1
   1023              uint8 bai  = (Num/100) - qian*10;
   \   0000002A   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000002C   0x2264             MOVS     R2,#+100
   \   0000002E   0xFB93 0xF2F2      SDIV     R2,R3,R2
   \   00000032   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000034   0x270A             MOVS     R7,#+10
   \   00000036   0xFB07 0x2711      MLS      R7,R7,R1,R2
   1024              uint8 shi  = (Num/10) - qian*100 - bai*10;
   \   0000003A   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000003C   0x220A             MOVS     R2,#+10
   \   0000003E   0xFB93 0xF2F2      SDIV     R2,R3,R2
   \   00000042   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000044   0xF05F 0x0C64      MOVS     R12,#+100
   \   00000048   0xFB0C 0x2211      MLS      R2,R12,R1,R2
   \   0000004C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000004E   0xF05F 0x0C0A      MOVS     R12,#+10
   \   00000052   0xFB0C 0x2817      MLS      R8,R12,R7,R2
   1025              uint8 ge   = (Num%10);
   \   00000056   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   00000058   0x220A             MOVS     R2,#+10
   \   0000005A   0xFB93 0xFCF2      SDIV     R12,R3,R2
   \   0000005E   0xFB02 0x391C      MLS      R9,R2,R12,R3
   1026              switch(haveMuch)
   \   00000062   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000064   0x2800             CMP      R0,#+0
   \   00000066   0xD037             BEQ.N    ??LCD_showDecFour_2
   \   00000068   0x2802             CMP      R0,#+2
   \   0000006A   0xD01C             BEQ.N    ??LCD_showDecFour_3
   \   0000006C   0xD327             BCC.N    ??LCD_showDecFour_4
   \   0000006E   0x2804             CMP      R0,#+4
   \   00000070   0xD001             BEQ.N    ??LCD_showDecFour_5
   \   00000072   0xD30C             BCC.N    ??LCD_showDecFour_6
   \   00000074   0xE039             B.N      ??LCD_showDecFour_7
   1027              {
   1028                  case 4:
   1029                      LCD_8x6show(startXPos,YPos,color,qian+48);
   \                     ??LCD_showDecFour_5: (+1)
   \   00000076   0xF111 0x0330      ADDS     R3,R1,#+48
   \   0000007A   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   0000007C   0x0032             MOVS     R2,R6
   \   0000007E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000080   0x0029             MOVS     R1,R5
   \   00000082   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000084   0x0020             MOVS     R0,R4
   \   00000086   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000088   0x.... 0x....      BL       LCD_8x6show
   1030                      startXPos+=4;
   \   0000008C   0x1D24             ADDS     R4,R4,#+4
   1031                  case 3:
   1032                      LCD_8x6show(startXPos,YPos,color,bai+48);
   \                     ??LCD_showDecFour_6: (+1)
   \   0000008E   0xF117 0x0330      ADDS     R3,R7,#+48
   \   00000092   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   00000094   0x0032             MOVS     R2,R6
   \   00000096   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000098   0x0029             MOVS     R1,R5
   \   0000009A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009C   0x0020             MOVS     R0,R4
   \   0000009E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A0   0x.... 0x....      BL       LCD_8x6show
   1033                      startXPos+=4;
   \   000000A4   0x1D24             ADDS     R4,R4,#+4
   1034                  case 2:
   1035                      LCD_8x6show(startXPos,YPos,color,shi+48);
   \                     ??LCD_showDecFour_3: (+1)
   \   000000A6   0xF118 0x0330      ADDS     R3,R8,#+48
   \   000000AA   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000AC   0x0032             MOVS     R2,R6
   \   000000AE   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000B0   0x0029             MOVS     R1,R5
   \   000000B2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000B4   0x0020             MOVS     R0,R4
   \   000000B6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000B8   0x.... 0x....      BL       LCD_8x6show
   1036                      startXPos+=4;
   \   000000BC   0x1D24             ADDS     R4,R4,#+4
   1037                  case 1:
   1038                      LCD_8x6show(startXPos,YPos,color,ge+48);
   \                     ??LCD_showDecFour_4: (+1)
   \   000000BE   0xF119 0x0330      ADDS     R3,R9,#+48
   \   000000C2   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \   000000C4   0x0032             MOVS     R2,R6
   \   000000C6   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000C8   0x0029             MOVS     R1,R5
   \   000000CA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000CC   0x0020             MOVS     R0,R4
   \   000000CE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000D0   0x.... 0x....      BL       LCD_8x6show
   1039                      startXPos+=4;
   \   000000D4   0x1D24             ADDS     R4,R4,#+4
   1040                  break;
   \   000000D6   0xE008             B.N      ??LCD_showDecFour_7
   1041                  case 0:
   1042                      LCD_8x6show(startXPos,YPos,color,0);
   \                     ??LCD_showDecFour_2: (+1)
   \   000000D8   0x2300             MOVS     R3,#+0
   \   000000DA   0x0032             MOVS     R2,R6
   \   000000DC   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   000000DE   0x0029             MOVS     R1,R5
   \   000000E0   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000E2   0x0020             MOVS     R0,R4
   \   000000E4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000E6   0x.... 0x....      BL       LCD_8x6show
   1043                  break;
   1044              }
   1045          }
   \                     ??LCD_showDecFour_7: (+1)
   \   000000EA   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1046          

   \                                 In section .text, align 2, keep-with-next
   1047          void LCD_clearwindow_aircraft(void) //ÇåÆÁ
   1048          {
   \                     LCD_clearwindow_aircraft: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1049           uint8 line_PWM;
   1050           uint16 clearloop;
   1051          
   1052            // data_PWM[0][68]=40;
   1053            for(line_PWM=0;line_PWM<4;line_PWM++)                       
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE041             B.N      ??LCD_clearwindow_aircraft_0
   1054            {
   1055              for(clearloop=0;clearloop<308;clearloop++)
   1056                  {
   1057                    LCD_SetCursor(clearloop+xpos_aircraft,ypos_aircraft+data_PWM1[clearloop]);  //Êý¾Ýdata_PWM[line_PWM][clearloop]
   \                     ??LCD_clearwindow_aircraft_1: (+1)
   \   00000006   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000008   0x....             LDR.N    R0,??DataTable12_16
   \   0000000A   0x5C28             LDRB     R0,[R5, R0]
   \   0000000C   0xF110 0x0128      ADDS     R1,R0,#+40
   \   00000010   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000012   0xF115 0x000C      ADDS     R0,R5,#+12
   \   00000016   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000018   0x.... 0x....      BL       LCD_SetCursor
   1058                    LCD_writeReg(DRAWPOINT,Black);
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x2022             MOVS     R0,#+34
   \   00000020   0x.... 0x....      BL       LCD_writeReg
   1059                     LCD_SetCursor(clearloop+xpos_aircraft,ypos_aircraft+data_PWM2[clearloop]);  //Êý¾Ýdata_PWM[line_PWM][clearloop]
   \   00000024   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000026   0x....             LDR.N    R0,??DataTable12_17
   \   00000028   0x5C28             LDRB     R0,[R5, R0]
   \   0000002A   0xF110 0x0128      ADDS     R1,R0,#+40
   \   0000002E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000030   0xF115 0x000C      ADDS     R0,R5,#+12
   \   00000034   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000036   0x.... 0x....      BL       LCD_SetCursor
   1060                    LCD_writeReg(DRAWPOINT,Black);
   \   0000003A   0x2100             MOVS     R1,#+0
   \   0000003C   0x2022             MOVS     R0,#+34
   \   0000003E   0x.... 0x....      BL       LCD_writeReg
   1061                     LCD_SetCursor(clearloop+xpos_aircraft,ypos_aircraft+data_PWM3[clearloop]);  //Êý¾Ýdata_PWM[line_PWM][clearloop]
   \   00000042   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000044   0x....             LDR.N    R0,??DataTable12_18
   \   00000046   0x5C28             LDRB     R0,[R5, R0]
   \   00000048   0xF110 0x0128      ADDS     R1,R0,#+40
   \   0000004C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000004E   0xF115 0x000C      ADDS     R0,R5,#+12
   \   00000052   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000054   0x.... 0x....      BL       LCD_SetCursor
   1062                    LCD_writeReg(DRAWPOINT,Black);
   \   00000058   0x2100             MOVS     R1,#+0
   \   0000005A   0x2022             MOVS     R0,#+34
   \   0000005C   0x.... 0x....      BL       LCD_writeReg
   1063                     LCD_SetCursor(clearloop+xpos_aircraft,ypos_aircraft+data_PWM4[clearloop]);  //Êý¾Ýdata_PWM[line_PWM][clearloop]
   \   00000060   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000062   0x....             LDR.N    R0,??DataTable12_19
   \   00000064   0x5C28             LDRB     R0,[R5, R0]
   \   00000066   0xF110 0x0128      ADDS     R1,R0,#+40
   \   0000006A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000006C   0xF115 0x000C      ADDS     R0,R5,#+12
   \   00000070   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000072   0x.... 0x....      BL       LCD_SetCursor
   1064                    LCD_writeReg(DRAWPOINT,Black);
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0x2022             MOVS     R0,#+34
   \   0000007A   0x.... 0x....      BL       LCD_writeReg
   1065                  }
   \   0000007E   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_clearwindow_aircraft_2: (+1)
   \   00000080   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   00000082   0xF5B5 0x7F9A      CMP      R5,#+308
   \   00000086   0xDBBE             BLT.N    ??LCD_clearwindow_aircraft_1
   \   00000088   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_clearwindow_aircraft_0: (+1)
   \   0000008A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000008C   0x2C04             CMP      R4,#+4
   \   0000008E   0xDA01             BGE.N    ??LCD_clearwindow_aircraft_3
   \   00000090   0x2500             MOVS     R5,#+0
   \   00000092   0xE7F5             B.N      ??LCD_clearwindow_aircraft_2
   1066            }
   1067          }
   \                     ??LCD_clearwindow_aircraft_3: (+1)
   \   00000094   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   1068          

   \                                 In section .text, align 2, keep-with-next
   1069          void LCD_clearwindow_juxing(uint16 x1_leftup,uint8 y1_leftup,uint16 x2_rightdown,uint8 y2_rightdown)
   1070          {
   \                     LCD_clearwindow_juxing: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
   1071             uint8 ylineloop;
   1072           uint16 xlineloop;
   1073           for(xlineloop=0;xlineloop<(x2_rightdown-x1_leftup);xlineloop++)                       
   \   0000000C   0xF05F 0x0900      MOVS     R9,#+0
   \   00000010   0xE018             B.N      ??LCD_clearwindow_juxing_0
   1074            {
   1075              for(ylineloop=0;ylineloop<(y1_leftup-y2_rightdown);ylineloop++)
   1076                  {
   1077                    LCD_SetCursor(x1_leftup+xlineloop,y2_rightdown+ylineloop);  //Êý¾Ýdata_PWM[line_PWM][clearloop]
   \                     ??LCD_clearwindow_juxing_1: (+1)
   \   00000012   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000016   0xFA58 0xF187      UXTAB    R1,R8,R7
   \   0000001A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   0000001C   0xEB19 0x0004      ADDS     R0,R9,R4
   \   00000020   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000022   0x.... 0x....      BL       LCD_SetCursor
   1078                    LCD_writeReg(DRAWPOINT,Black);
   \   00000026   0x2100             MOVS     R1,#+0
   \   00000028   0x2022             MOVS     R0,#+34
   \   0000002A   0x.... 0x....      BL       LCD_writeReg
   1079                  }
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_clearwindow_juxing_2: (+1)
   \   00000032   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000036   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000038   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000003A   0x1BE8             SUBS     R0,R5,R7
   \   0000003C   0x4580             CMP      R8,R0
   \   0000003E   0xDBE8             BLT.N    ??LCD_clearwindow_juxing_1
   \   00000040   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_clearwindow_juxing_0: (+1)
   \   00000044   0xFA1F 0xF989      UXTH     R9,R9            ;; ZeroExt  R9,R9,#+16,#+16
   \   00000048   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000004A   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000004C   0x1B30             SUBS     R0,R6,R4
   \   0000004E   0x4581             CMP      R9,R0
   \   00000050   0xDA02             BGE.N    ??LCD_clearwindow_juxing_3
   \   00000052   0xF05F 0x0800      MOVS     R8,#+0
   \   00000056   0xE7EC             B.N      ??LCD_clearwindow_juxing_2
   1080            }
   1081          }
   \                     ??LCD_clearwindow_juxing_3: (+1)
   \   00000058   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1082          
   1083          

   \                                 In section .text, align 2, keep-with-next
   1084          void LCD_setpoint(uint16 data_xpos,uint8 data_ypos,uint16 color)
   1085          {
   \                     LCD_setpoint: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0014             MOVS     R4,R2
   1086                LCD_SetCursor(data_xpos,data_ypos);  
   \   00000004   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000006   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000008   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000000A   0x.... 0x....      BL       LCD_SetCursor
   1087                    LCD_writeReg(DRAWPOINT,color);
   \   0000000E   0x0021             MOVS     R1,R4
   \   00000010   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000012   0x2022             MOVS     R0,#+34
   \   00000014   0x.... 0x....      BL       LCD_writeReg
   1088          }
   \   00000018   0xBD10             POP      {R4,PC}          ;; return
   1089          

   \                                 In section .text, align 2, keep-with-next
   1090          void data_axis_receive16(uint16 *num )
   1091          {
   \                     data_axis_receive16: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
   1092            char data_temp;
   1093            *num = 0;
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x8020             STRH     R0,[R4, #+0]
   1094             __v_uart_getchar(&data_temp);
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x.... 0x....      BL       __v_uart_getchar
   1095             *num += ((data_temp-48)*10);
   \   00000010   0x8820             LDRH     R0,[R4, #+0]
   \   00000012   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000016   0x3930             SUBS     R1,R1,#+48
   \   00000018   0x220A             MOVS     R2,#+10
   \   0000001A   0x4351             MULS     R1,R2,R1
   \   0000001C   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000020   0x8020             STRH     R0,[R4, #+0]
   1096             __v_uart_getchar(&data_temp);
   \   00000022   0xA800             ADD      R0,SP,#+0
   \   00000024   0x.... 0x....      BL       __v_uart_getchar
   1097             *num += (data_temp-48);
   \   00000028   0x8820             LDRH     R0,[R4, #+0]
   \   0000002A   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   0000002E   0x3930             SUBS     R1,R1,#+48
   \   00000030   0x1808             ADDS     R0,R1,R0
   \   00000032   0x8020             STRH     R0,[R4, #+0]
   1098          }
   \   00000034   0xBD13             POP      {R0,R1,R4,PC}    ;; return
   1099          
   1100          

   \                                 In section .text, align 2, keep-with-next
   1101          void LCD_showware(void)
   1102          {
   \                     LCD_showware: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   1103            uint16 lineloop;
   1104            uint16 line_xpos;
   1105          //  uint16 line_data;
   1106            for(lineloop=0;lineloop<308;lineloop++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE04E             B.N      ??LCD_showware_0
   1107            {
   1108              char data_temp;
   1109            //  uint16 data_axis_temp;
   1110              line_xpos=xpos_aircraft+lineloop;
   \                     ??LCD_showware_1: (+1)
   \   00000006   0xF114 0x050C      ADDS     R5,R4,#+12
   1111              
   1112            /*    data_axis_receive16( &data_axis_temp );
   1113              LCD_showDecFour(82,24,White,data_axis_temp);
   1114                data_axis_receive16( &data_axis_temp );
   1115              LCD_showDecFour(82,16,White,data_axis_temp);
   1116                data_axis_receive16( &data_axis_temp );
   1117              LCD_showDecFour(82,8,White,data_axis_temp);
   1118                data_axis_receive16( &data_axis_temp );
   1119              LCD_showDecFour(162,24,White,data_axis_temp);
   1120                data_axis_receive16( &data_axis_temp );
   1121              LCD_showDecFour(162,16,White,data_axis_temp);
   1122                data_axis_receive16( &data_axis_temp );
   1123              LCD_showDecFour(162,8,White,data_axis_temp);
   1124            */
   1125              uart_getchar(&data_temp);
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x.... 0x....      BL       uart_getchar
   1126              data_PWM1[lineloop]=data_temp;
   \   00000010   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000012   0x....             LDR.N    R0,??DataTable12_16
   \   00000014   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000018   0x5421             STRB     R1,[R4, R0]
   1127              LCD_setpoint(line_xpos,ypos_aircraft+data_temp,Magenta);
   \   0000001A   0xF64F 0x021F      MOVW     R2,#+63519
   \   0000001E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000022   0xF110 0x0128      ADDS     R1,R0,#+40
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x0028             MOVS     R0,R5
   \   0000002A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000002C   0x.... 0x....      BL       LCD_setpoint
   1128              uart_getchar(&data_temp);
   \   00000030   0xA800             ADD      R0,SP,#+0
   \   00000032   0x.... 0x....      BL       uart_getchar
   1129              data_PWM2[lineloop]=data_temp;
   \   00000036   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000038   0x....             LDR.N    R0,??DataTable12_17
   \   0000003A   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   0000003E   0x5421             STRB     R1,[R4, R0]
   1130              LCD_setpoint(line_xpos,ypos_aircraft+data_temp,Cyan);
   \   00000040   0xF647 0x72FF      MOVW     R2,#+32767
   \   00000044   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000048   0xF110 0x0128      ADDS     R1,R0,#+40
   \   0000004C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004E   0x0028             MOVS     R0,R5
   \   00000050   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000052   0x.... 0x....      BL       LCD_setpoint
   1131              uart_getchar(&data_temp);
   \   00000056   0xA800             ADD      R0,SP,#+0
   \   00000058   0x.... 0x....      BL       uart_getchar
   1132              data_PWM3[lineloop]=data_temp;
   \   0000005C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000005E   0x....             LDR.N    R0,??DataTable12_18
   \   00000060   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000064   0x5421             STRB     R1,[R4, R0]
   1133              LCD_setpoint(line_xpos,ypos_aircraft+data_temp,Blue2);
   \   00000066   0xF240 0x521F      MOVW     R2,#+1311
   \   0000006A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000006E   0xF110 0x0128      ADDS     R1,R0,#+40
   \   00000072   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000074   0x0028             MOVS     R0,R5
   \   00000076   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000078   0x.... 0x....      BL       LCD_setpoint
   1134              uart_getchar(&data_temp);
   \   0000007C   0xA800             ADD      R0,SP,#+0
   \   0000007E   0x.... 0x....      BL       uart_getchar
   1135              data_PWM4[lineloop]=data_temp;
   \   00000082   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000084   0x....             LDR.N    R0,??DataTable12_19
   \   00000086   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   0000008A   0x5421             STRB     R1,[R4, R0]
   1136              LCD_setpoint(line_xpos,ypos_aircraft+data_temp,Grey);
   \   0000008C   0xF24F 0x72DE      MOVW     R2,#+63454
   \   00000090   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000094   0xF110 0x0128      ADDS     R1,R0,#+40
   \   00000098   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009A   0x0028             MOVS     R0,R5
   \   0000009C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000009E   0x.... 0x....      BL       LCD_setpoint
   1137          /*
   1138              LCD_clearwindow_juxing(82,30,112,0);
   1139              LCD_clearwindow_juxing(162,30,192,0);
   1140              */
   1141            }
   \   000000A2   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_showware_0: (+1)
   \   000000A4   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000A6   0xF5B4 0x7F9A      CMP      R4,#+308
   \   000000AA   0xDBAC             BLT.N    ??LCD_showware_1
   1142           
   1143          }
   \   000000AC   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     Chinese

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     C12x12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     PORTx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x400FF0D4         DC32     0x400ff0d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x400FF114         DC32     0x400ff114

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x400FF100         DC32     0x400ff100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable10:
   \   00000000   0x400FF0D0         DC32     0x400ff0d0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x30 0x00          DC8      "0",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x32 0x30          DC8      0x32, 0x30, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x34 0x30          DC8      0x34, 0x30, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x36 0x30          DC8      0x36, 0x30, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x38 0x30          DC8      0x38, 0x30, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x406C0000         DC32     0x406c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x405C8000         DC32     0x405c8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x........         DC32     C6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x........         DC32     `?<Constant "PWM1">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x........         DC32     `?<Constant "PWM2">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x........         DC32     `?<Constant "PWM3">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x........         DC32     `?<Constant "PWM4">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x........         DC32     `?<Constant "axis x:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x........         DC32     `?<Constant "axis y:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x........         DC32     `?<Constant "axis z:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x........         DC32     `?<Constant "cm/s x:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x........         DC32     `?<Constant "cm/s y:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x........         DC32     `?<Constant "cm/s z:">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x........         DC32     data_PWM1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_17:
   \   00000000   0x........         DC32     data_PWM2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_18:
   \   00000000   0x........         DC32     data_PWM3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_19:
   \   00000000   0x........         DC32     data_PWM4

   \                                 In section .rodata, align 4
   \                     `?<Constant "PWM1">`:
   \   00000000   0x50 0x57          DC8 "PWM1"
   \              0x4D 0x31    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "PWM2">`:
   \   00000000   0x50 0x57          DC8 "PWM2"
   \              0x4D 0x32    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "PWM3">`:
   \   00000000   0x50 0x57          DC8 "PWM3"
   \              0x4D 0x33    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "PWM4">`:
   \   00000000   0x50 0x57          DC8 "PWM4"
   \              0x4D 0x34    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "axis x:">`:
   \   00000000   0x61 0x78          DC8 "axis x:"
   \              0x69 0x73    
   \              0x20 0x78    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "axis y:">`:
   \   00000000   0x61 0x78          DC8 "axis y:"
   \              0x69 0x73    
   \              0x20 0x79    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "axis z:">`:
   \   00000000   0x61 0x78          DC8 "axis z:"
   \              0x69 0x73    
   \              0x20 0x7A    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "cm/s x:">`:
   \   00000000   0x63 0x6D          DC8 "cm/s x:"
   \              0x2F 0x73    
   \              0x20 0x78    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "cm/s y:">`:
   \   00000000   0x63 0x6D          DC8 "cm/s y:"
   \              0x2F 0x73    
   \              0x20 0x79    
   \              0x3A 0x00    

   \                                 In section .rodata, align 4
   \                     `?<Constant "cm/s z:">`:
   \   00000000   0x63 0x6D          DC8 "cm/s z:"
   \              0x2F 0x73    
   \              0x20 0x7A    
   \              0x3A 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x30 0x00          DC8 "0"

   \                                 In section .rodata, align 4
   \   00000000   0x32 0x30          DC8 "20"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x34 0x30          DC8 "40"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x36 0x30          DC8 "60"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x38 0x30          DC8 "80"
   \              0x00         
   \   00000003   0x00               DC8 0
   1144          
   1145          
   1146          
   1147          
   1148          
   1149          
   1150          
   1151          
   1152          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   LCD_12x12show
        32   -> LCD_SetCursor
        32   -> LCD_writeReg
      32   LCD_8x6show
        32   -> LCD_SetCursor
        32   -> LCD_writeReg
      24   LCD_8x6show_string
        24   -> LCD_8x6show
      32   LCD_8x8show
        32   -> LCD_SetCursor
        32   -> LCD_writeReg
      16   LCD_Clear
        16   -> LCD_SetCursor
        16   -> LCD_writeIndex
      24   LCD_ClearShowWindow
        24   -> LCD_SetCursor
        24   -> LCD_writeReg
      16   LCD_ClearSomeThing
        16   -> LCD_SetCursor
        16   -> LCD_writeReg
       8   LCD_Init
         8   -> LCD_PinInit
         8   -> LCD_readReg
         8   -> LCD_writeReg
         8   -> vDelayMs
       0   LCD_PinInit
       8   LCD_SetCursor
         8   -> LCD_writeReg
      24   LCD_SetLine
        24   -> LCD_SetCursor
        24   -> LCD_writeReg
       8   LCD_SetPoint
         8   -> LCD_SetCursor
         8   -> LCD_writeReg
       8   LCD_ShowInfor
         8   -> LCD_12x12show
      16   LCD_XYaxes
        16   -> LCD_SetCursor
        16   -> LCD_SetLine
        16   -> LCD_writeReg
      48   LCD_XYaxesNum
        48   -> LCD_8x6show
        48   -> LCD_showDecFour
        48   -> __aeabi_d2f
        48   -> __aeabi_ddiv
        48   -> __aeabi_memcpy4
        48   -> __aeabi_ui2d
       8   LCD_axis_aircraft
         8   -> LCD_8x6show_string
         8   -> LCD_SetLine
      16   LCD_clearwindow_aircraft
        16   -> LCD_SetCursor
        16   -> LCD_writeReg
      32   LCD_clearwindow_juxing
        32   -> LCD_SetCursor
        32   -> LCD_writeReg
       8   LCD_readReg
         8   -> LCD_writeIndex
       8   LCD_setpoint
         8   -> LCD_SetCursor
         8   -> LCD_writeReg
      32   LCD_showDecFour
        32   -> LCD_8x6show
      16   LCD_showware
        16   -> LCD_setpoint
        16   -> uart_getchar
       0   LCD_writeIndex
       8   LCD_writeReg
         8   -> LCD_writeIndex
      16   data_axis_receive16
        16   -> __v_uart_getchar


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  ?<Constant "0">
       4  ?<Constant "20">
       4  ?<Constant "40">
       4  ?<Constant "60">
       4  ?<Constant "80">
       8  ?<Constant "PWM1">
       8  ?<Constant "PWM2">
       8  ?<Constant "PWM3">
       8  ?<Constant "PWM4">
       8  ?<Constant "axis x:">
       8  ?<Constant "axis y:">
       8  ?<Constant "axis z:">
       8  ?<Constant "cm/s x:">
       8  ?<Constant "cm/s y:">
       8  ?<Constant "cm/s z:">
       4  ??DataTable10
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_17
       4  ??DataTable12_18
       4  ??DataTable12_19
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
     936  C12x12
     552  C6x8
      16  Chinese
     186  LCD_12x12show
     128  LCD_8x6show
      64  LCD_8x6show_string
     120  LCD_8x8show
     122  LCD_Clear
     168  LCD_ClearShowWindow
      98  LCD_ClearSomeThing
     346  LCD_Init
     856  LCD_PinInit
      26  LCD_SetCursor
      62  LCD_SetLine
      24  LCD_SetPoint
     592  LCD_ShowInfor
     694  LCD_XYaxes
     478  LCD_XYaxesNum
     246  LCD_axis_aircraft
     150  LCD_clearwindow_aircraft
      92  LCD_clearwindow_juxing
    1072  LCD_readReg
      26  LCD_setpoint
     238  LCD_showDecFour
     174  LCD_showware
      88  LCD_writeIndex
     130  LCD_writeReg
      80  Num4X8
     308  data_PWM1
     308  data_PWM2
     308  data_PWM3
     308  data_PWM4
      54  data_axis_receive16

 
 1 232 bytes in section .bss
 1 682 bytes in section .rodata
 6 354 bytes in section .text
 
 6 354 bytes of CODE  memory
 1 682 bytes of CONST memory
 1 232 bytes of DATA  memory

Errors: none
Warnings: 1
