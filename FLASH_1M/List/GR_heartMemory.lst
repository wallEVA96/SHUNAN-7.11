###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      16/Aug/2014  22:11:13 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -          #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\ShunAn2\GR_heartMemory.c             #
#    Command line =  "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\ShunAn2\GR_heartMemory.c" -D IAR -D  #
#                    ShunAn2 -lCN "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐ #
#                    ÐÆ÷ - TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\List\" -lB            #
#                    "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\List\" -o                   #
#                    "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\Obj\" --no_cse --no_unroll  #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ #
#                     - TM4123G\´úÂë\Ò£¿ØÆ÷\ShunAn2\" -I                      #
#                    "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\Library\" -I                         #
#                    "C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -         #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\Library\BlessedAlien\" -Ol           #
#                    --use_c++_inline                                         #
#    List file    =  C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -          #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\List\GR_heartMemory.lst     #
#    Object file  =  C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ -          #
#                    TM4123G\´úÂë\Ò£¿ØÆ÷\FLASH_1M\Obj\GR_heartMemory.o        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\pc\Desktop\¼ÌÐø×öµÄÊÂÇé\ËÄÐýÒí·ÉÐÐÆ÷ - TM4123G\´úÂë\Ò£¿ØÆ÷\ShunAn2\GR_heartMemory.c
      1          #include "GR_heartMemory.h"
      2          #include "GodRecognitionx11_12.h"
      3          #include "GR_Bluetoothx11_12.h"
      4          #include "MK60F15.h"
      5          /* ÈçÓÐÒÉÎÊ£¬Çë·¢ÓÊ¼þÖÁ591194323@qq.com */
      6          
      7          /*
      8          uint8  ¶æ»ú geiding D                   \\¿ØÖÆÖÜÆÚµ¥Î»\
      9          uint16 µç»ú geiding shiji D PWM                   \\
     10          uint32 µ±Ç°Ê±¼ä\µ±Ç°Â·³Ì             \\
     11          uint8  ÌØÊâ×´Ì¬                     \\
     12          uint16 Æ«²î\Æ«²î±ä»¯ÂÊ\ÖÐÖµ          \\
     13          25 Bytes
     14          10ms - 20s
     15          */
     16          // ×î´óÉÏÏÞ 50k bytes

   \                                 In section .bss, align 4
     17          RAM_operation Save2Data = {0};
   \                     Save2Data:
   \   00000000                      DS8 25012

   \                                 In section .text, align 4, keep-with-next
     18          void wr_Data_cut( timeChoose t_1or10 )
     19          {
     20              // Ê±Ðò¼ÆËã
     21              Save2Data.time_counter ++;
   \                     wr_Data_cut: (+1)
   \   00000000   0x4973             LDR.N    R1,??wr_Data_cut_0
   \   00000002   0x7809             LDRB     R1,[R1, #+0]
   \   00000004   0x1C49             ADDS     R1,R1,#+1
   \   00000006   0x4A72             LDR.N    R2,??wr_Data_cut_0
   \   00000008   0x7011             STRB     R1,[R2, #+0]
     22              if( t_1or10 == Save2Data.time_counter )
   \   0000000A   0x4971             LDR.N    R1,??wr_Data_cut_0
   \   0000000C   0x7809             LDRB     R1,[R1, #+0]
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x4288             CMP      R0,R1
   \   00000012   0xD164             BNE.N    ??wr_Data_cut_1
     23              {
     24                  Save2Data.time_counter = 0;
   \   00000014   0x486E             LDR.N    R0,??wr_Data_cut_0
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x7001             STRB     R1,[R0, #+0]
     25              }
     26              else
     27              {
     28                  return;
     29              }
     30              // Êý¾Ý´¦Àí
     31              if( Save2Data.save_status & 0x80 ){return;} // ¼ì²âÂú±êÖ¾Î»
   \   0000001A   0x486D             LDR.N    R0,??wr_Data_cut_0
   \   0000001C   0x7840             LDRB     R0,[R0, #+1]
   \   0000001E   0x0600             LSLS     R0,R0,#+24
   \   00000020   0xD45E             BMI.N    ??wr_Data_cut_2
     32              if( Save2Data.save_status & 0x01 )  // ¼ì²âÆô¶¯±êÖ¾
   \   00000022   0x486B             LDR.N    R0,??wr_Data_cut_0
   \   00000024   0x7840             LDRB     R0,[R0, #+1]
   \   00000026   0x07C0             LSLS     R0,R0,#+31
   \   00000028   0xF140 0x80D1      BPL.W    ??wr_Data_cut_3
     33              {
     34                  Save2Data.CCD1_cen[Save2Data.currentWrite]        = Trk.cen1[Trk.currentCen1];
   \   0000002C   0x4869             LDR.N    R0,??wr_Data_cut_0+0x4
   \   0000002E   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000032   0x4968             LDR.N    R1,??wr_Data_cut_0+0x4
   \   00000034   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000038   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   0000003C   0xF244 0x2174      MOVW     R1,#+17012
   \   00000040   0x4A63             LDR.N    R2,??wr_Data_cut_0
   \   00000042   0x6892             LDR      R2,[R2, #+8]
   \   00000044   0x4B62             LDR.N    R3,??wr_Data_cut_0
   \   00000046   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000004A   0x5288             STRH     R0,[R1, R2]
     35                  Save2Data.CCD1_CenRate[Save2Data.currentWrite]    = Give.CenRate1;
   \   0000004C   0xF245 0x2014      MOVW     R0,#+21012
   \   00000050   0x495F             LDR.N    R1,??wr_Data_cut_0
   \   00000052   0x6889             LDR      R1,[R1, #+8]
   \   00000054   0x4A5E             LDR.N    R2,??wr_Data_cut_0
   \   00000056   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   0000005A   0x4A5F             LDR.N    R2,??wr_Data_cut_0+0x8
   \   0000005C   0x89D2             LDRH     R2,[R2, #+14]
   \   0000005E   0x5242             STRH     R2,[R0, R1]
     36                  Save2Data.CCD2_cen[Save2Data.currentWrite]        = Trk.cen2[Trk.currentCen2];
   \   00000060   0x485C             LDR.N    R0,??wr_Data_cut_0+0x4
   \   00000062   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000066   0x495B             LDR.N    R1,??wr_Data_cut_0+0x4
   \   00000068   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000006C   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000070   0xF644 0x2144      MOVW     R1,#+19012
   \   00000074   0x4A56             LDR.N    R2,??wr_Data_cut_0
   \   00000076   0x6892             LDR      R2,[R2, #+8]
   \   00000078   0x4B55             LDR.N    R3,??wr_Data_cut_0
   \   0000007A   0xEB13 0x0242      ADDS     R2,R3,R2, LSL #+1
   \   0000007E   0x5288             STRH     R0,[R1, R2]
     37                  Save2Data.CCD2_CenRate[Save2Data.currentWrite]    = Give.CenRate2;
   \   00000080   0xF645 0x10E4      MOVW     R0,#+23012
   \   00000084   0x4952             LDR.N    R1,??wr_Data_cut_0
   \   00000086   0x6889             LDR      R1,[R1, #+8]
   \   00000088   0x4A51             LDR.N    R2,??wr_Data_cut_0
   \   0000008A   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   0000008E   0x4A52             LDR.N    R2,??wr_Data_cut_0+0x8
   \   00000090   0x8A12             LDRH     R2,[R2, #+16]
   \   00000092   0x5242             STRH     R2,[R0, R1]
     38                  
     39                  switch( Give.motorDir )
   \   00000094   0x4850             LDR.N    R0,??wr_Data_cut_0+0x8
   \   00000096   0xF890 0x002E      LDRB     R0,[R0, #+46]
   \   0000009A   0x2800             CMP      R0,#+0
   \   0000009C   0xD003             BEQ.N    ??wr_Data_cut_4
   \   0000009E   0x2802             CMP      R0,#+2
   \   000000A0   0xD03D             BEQ.N    ??wr_Data_cut_5
   \   000000A2   0xD31E             BCC.N    ??wr_Data_cut_6
   \   000000A4   0xE05E             B.N      ??wr_Data_cut_7
     40                  {
     41                      case 0:
     42                          Save2Data.Motor_Give[Save2Data.currentWrite]            = 0;
   \                     ??wr_Data_cut_4: (+1)
   \   000000A6   0x484A             LDR.N    R0,??wr_Data_cut_0
   \   000000A8   0x6880             LDR      R0,[R0, #+8]
   \   000000AA   0x4949             LDR.N    R1,??wr_Data_cut_0
   \   000000AC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0xF8A0 0x1FAC      STRH     R1,[R0, #+4012]
     43                          Save2Data.Motor_Fuzzy_Give[Save2Data.currentWrite]      = 0;
   \   000000B6   0xF241 0x707C      MOVW     R0,#+6012
   \   000000BA   0x4945             LDR.N    R1,??wr_Data_cut_0
   \   000000BC   0x6889             LDR      R1,[R1, #+8]
   \   000000BE   0x4A44             LDR.N    R2,??wr_Data_cut_0
   \   000000C0   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000000C4   0x2200             MOVS     R2,#+0
   \   000000C6   0x5242             STRH     R2,[R0, R1]
     44                          Save2Data.Motor_PWM[Save2Data.currentWrite]             = Give.motorPWM;
   \   000000C8   0xF242 0x701C      MOVW     R0,#+10012
   \   000000CC   0x4940             LDR.N    R1,??wr_Data_cut_0
   \   000000CE   0x6889             LDR      R1,[R1, #+8]
   \   000000D0   0x4A3F             LDR.N    R2,??wr_Data_cut_0
   \   000000D2   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000000D6   0x4A40             LDR.N    R2,??wr_Data_cut_0+0x8
   \   000000D8   0x8D92             LDRH     R2,[R2, #+44]
   \   000000DA   0x5242             STRH     R2,[R0, R1]
     45                      break;
   \   000000DC   0xE042             B.N      ??wr_Data_cut_7
   \                     ??wr_Data_cut_1: (+1)
   \   000000DE   0xE076             B.N      ??wr_Data_cut_8
   \                     ??wr_Data_cut_2: (+1)
   \   000000E0   0xE075             B.N      ??wr_Data_cut_8
     46                      case 1:// Õý×ª
     47                          Save2Data.Motor_Give[Save2Data.currentWrite]            = Give.motorOrgSpeed;
   \                     ??wr_Data_cut_6: (+1)
   \   000000E2   0x483B             LDR.N    R0,??wr_Data_cut_0
   \   000000E4   0x6880             LDR      R0,[R0, #+8]
   \   000000E6   0x493A             LDR.N    R1,??wr_Data_cut_0
   \   000000E8   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000000EC   0x493A             LDR.N    R1,??wr_Data_cut_0+0x8
   \   000000EE   0x8C49             LDRH     R1,[R1, #+34]
   \   000000F0   0xF8A0 0x1FAC      STRH     R1,[R0, #+4012]
     48                          Save2Data.Motor_Fuzzy_Give[Save2Data.currentWrite]      = Give.motorDSpeed;
   \   000000F4   0xF241 0x707C      MOVW     R0,#+6012
   \   000000F8   0x4935             LDR.N    R1,??wr_Data_cut_0
   \   000000FA   0x6889             LDR      R1,[R1, #+8]
   \   000000FC   0x4A34             LDR.N    R2,??wr_Data_cut_0
   \   000000FE   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000102   0x4A35             LDR.N    R2,??wr_Data_cut_0+0x8
   \   00000104   0x8C92             LDRH     R2,[R2, #+36]
   \   00000106   0x5242             STRH     R2,[R0, R1]
     49                          Save2Data.Motor_PWM[Save2Data.currentWrite]             = Give.motorPWM;
   \   00000108   0xF242 0x701C      MOVW     R0,#+10012
   \   0000010C   0x4930             LDR.N    R1,??wr_Data_cut_0
   \   0000010E   0x6889             LDR      R1,[R1, #+8]
   \   00000110   0x4A2F             LDR.N    R2,??wr_Data_cut_0
   \   00000112   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000116   0x4A30             LDR.N    R2,??wr_Data_cut_0+0x8
   \   00000118   0x8D92             LDRH     R2,[R2, #+44]
   \   0000011A   0x5242             STRH     R2,[R0, R1]
     50                      break;
   \   0000011C   0xE022             B.N      ??wr_Data_cut_7
     51                      case 2:// ·´×ª
     52                          Save2Data.Motor_Give[Save2Data.currentWrite]            = Give.motorOrgSpeed | 0x8000;
   \                     ??wr_Data_cut_5: (+1)
   \   0000011E   0x482C             LDR.N    R0,??wr_Data_cut_0
   \   00000120   0x6880             LDR      R0,[R0, #+8]
   \   00000122   0x492B             LDR.N    R1,??wr_Data_cut_0
   \   00000124   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000128   0x492B             LDR.N    R1,??wr_Data_cut_0+0x8
   \   0000012A   0x8C49             LDRH     R1,[R1, #+34]
   \   0000012C   0xF451 0x4100      ORRS     R1,R1,#0x8000
   \   00000130   0xF8A0 0x1FAC      STRH     R1,[R0, #+4012]
     53                          Save2Data.Motor_Fuzzy_Give[Save2Data.currentWrite]      = Give.motorDSpeed | 0x8000;
   \   00000134   0xF241 0x707C      MOVW     R0,#+6012
   \   00000138   0x4925             LDR.N    R1,??wr_Data_cut_0
   \   0000013A   0x6889             LDR      R1,[R1, #+8]
   \   0000013C   0x4A24             LDR.N    R2,??wr_Data_cut_0
   \   0000013E   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000142   0x4A25             LDR.N    R2,??wr_Data_cut_0+0x8
   \   00000144   0x8C92             LDRH     R2,[R2, #+36]
   \   00000146   0xF452 0x4200      ORRS     R2,R2,#0x8000
   \   0000014A   0x5242             STRH     R2,[R0, R1]
     54                          Save2Data.Motor_PWM[Save2Data.currentWrite]             = Give.motorPWM | 0x8000;
   \   0000014C   0xF242 0x701C      MOVW     R0,#+10012
   \   00000150   0x491F             LDR.N    R1,??wr_Data_cut_0
   \   00000152   0x6889             LDR      R1,[R1, #+8]
   \   00000154   0x4A1E             LDR.N    R2,??wr_Data_cut_0
   \   00000156   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   0000015A   0x4A1F             LDR.N    R2,??wr_Data_cut_0+0x8
   \   0000015C   0x8D92             LDRH     R2,[R2, #+44]
   \   0000015E   0xF452 0x4200      ORRS     R2,R2,#0x8000
   \   00000162   0x5242             STRH     R2,[R0, R1]
     55                      break;
     56                  }
     57                  
     58                        
     59                //Save2Data.Motor_Speed[Save2Data.currentWrite]     = ;// ±àÂëÆ÷
     60              
     61                  Save2Data.Server_Dir[Save2Data.currentWrite]            = Give.serverOrgPWM;////Ô­Ê¼
   \                     ??wr_Data_cut_7: (+1)
   \   00000164   0x481A             LDR.N    R0,??wr_Data_cut_0
   \   00000166   0x6880             LDR      R0,[R0, #+8]
   \   00000168   0x4919             LDR.N    R1,??wr_Data_cut_0
   \   0000016A   0x1840             ADDS     R0,R0,R1
   \   0000016C   0x491A             LDR.N    R1,??wr_Data_cut_0+0x8
   \   0000016E   0x7E89             LDRB     R1,[R1, #+26]
   \   00000170   0xF880 0x17DC      STRB     R1,[R0, #+2012]
     62                  Save2Data.Server_Diff_Dir[Save2Data.currentWrite]       = Give.serverDPWM;////×îÖÕµÄ¶æ»ú¼ÓÈëÎ¢·ÖÖ®ºóµÄ¸ø¶¨PWM
   \   00000174   0x4816             LDR.N    R0,??wr_Data_cut_0
   \   00000176   0x6880             LDR      R0,[R0, #+8]
   \   00000178   0x4915             LDR.N    R1,??wr_Data_cut_0
   \   0000017A   0x1840             ADDS     R0,R0,R1
   \   0000017C   0x4916             LDR.N    R1,??wr_Data_cut_0+0x8
   \   0000017E   0x7EC9             LDRB     R1,[R1, #+27]
   \   00000180   0xF880 0x1BC4      STRB     R1,[R0, #+3012]
     63                  
     64                  Save2Data.Special_Status[Save2Data.currentWrite]  = Trk.SpecialStatus;
   \   00000184   0xF642 0x60EC      MOVW     R0,#+12012
   \   00000188   0x4911             LDR.N    R1,??wr_Data_cut_0
   \   0000018A   0x6889             LDR      R1,[R1, #+8]
   \   0000018C   0x4A10             LDR.N    R2,??wr_Data_cut_0
   \   0000018E   0x1889             ADDS     R1,R1,R2
   \   00000190   0x4A10             LDR.N    R2,??wr_Data_cut_0+0x4
   \   00000192   0xF892 0x269C      LDRB     R2,[R2, #+1692]
   \   00000196   0x5442             STRB     R2,[R0, R1]
     65              
     66                  Save2Data.TotalRoad[Save2Data.currentWrite]       = Con.TotalRoad;
   \   00000198   0xF243 0x20D4      MOVW     R0,#+13012
   \   0000019C   0x490C             LDR.N    R1,??wr_Data_cut_0
   \   0000019E   0x6889             LDR      R1,[R1, #+8]
   \   000001A0   0x4A0B             LDR.N    R2,??wr_Data_cut_0
   \   000001A2   0xEB12 0x0181      ADDS     R1,R2,R1, LSL #+2
   \   000001A6   0x4A0D             LDR.N    R2,??wr_Data_cut_0+0xC
   \   000001A8   0x6852             LDR      R2,[R2, #+4]
   \   000001AA   0x5042             STR      R2,[R0, R1]
     67                  //Save2Data.TotalTime[Save2Data.currentWrite]       = Con.TotalTime;
     68              
     69                  if(Save2Data.maxWriteCount == Save2Data.currentWrite)
   \   000001AC   0x4808             LDR.N    R0,??wr_Data_cut_0
   \   000001AE   0x6840             LDR      R0,[R0, #+4]
   \   000001B0   0x4907             LDR.N    R1,??wr_Data_cut_0
   \   000001B2   0x6889             LDR      R1,[R1, #+8]
   \   000001B4   0x4288             CMP      R0,R1
   \   000001B6   0xD105             BNE.N    ??wr_Data_cut_9
     70                  {
     71                      Save2Data.save_status |= 0x80;      // Âú±êÖ¾Î»
   \   000001B8   0x4805             LDR.N    R0,??wr_Data_cut_0
   \   000001BA   0x7840             LDRB     R0,[R0, #+1]
   \   000001BC   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   000001C0   0x4903             LDR.N    R1,??wr_Data_cut_0
   \   000001C2   0x7048             STRB     R0,[R1, #+1]
     72                  }
     73                  Save2Data.currentWrite ++;
   \                     ??wr_Data_cut_9: (+1)
   \   000001C4   0x4802             LDR.N    R0,??wr_Data_cut_0
   \   000001C6   0x6880             LDR      R0,[R0, #+8]
   \   000001C8   0x1C40             ADDS     R0,R0,#+1
   \   000001CA   0x4901             LDR.N    R1,??wr_Data_cut_0
   \   000001CC   0x6088             STR      R0,[R1, #+8]
     74              }
     75          }
   \                     ??wr_Data_cut_3: (+1)
   \                     ??wr_Data_cut_8: (+1)
   \   000001CE   0x4770             BX       LR               ;; return
   \                     ??wr_Data_cut_0:
   \   000001D0   0x........         DC32     Save2Data
   \   000001D4   0x........         DC32     Trk
   \   000001D8   0x........         DC32     Give
   \   000001DC   0x........         DC32     Con
     76          
     77          // Êý¾Ý±àÂë
     78          /*
     79          void convData2Com( void )
     80          {
     81          */
     82              /** ±êÖ¾´«Êä½áÊø£¬´«ÊäÏàÓ¦Êý¾Ý **/
     83          /*
     84          Ë«Óã×ùÍ£³µ½ÓÊÕÐ­Òé
     85          µÚÒ»ÐÐ£º¼ä¸ôÊ±¼ä£¨uint8£©
     86          µÚ¶þÐÐ£ºÊý×é´æ´¢ÊýÁ¿£¨uint16£©
     87          µÚÈý×é£º¸ø¶¨ËÙ¶È£¨uint16 Motor_Give£©
     88          µÚËÄ×é£ºÄ£ºý¸ø¶¨ËÙ¶È£¨uint16 Motor_Fuzzy_Give£©
     89          µÚÎå×é£ºÊµ¼ÊËÙ¶È£¨uint16 Motor_Speed£©
     90          µÚÁù×é£ºµç»úPWM£¨uint16 Motor_Speed£©£¨uint16 + ×î¸ßÎ»±êÖ¾Î»£©
     91          µÚÆß×é£ºCCD_1ÖÐÖµ£¨uint16 CCD1_cen£©
     92          µÚ°Ë×é£ºCCD_2ÖÐÖµ£¨uint16 CCD2_cen£©
     93          µÚ¾Å×é£ºCCD1ÖÐÐÄ×ø±ê±ä»¯ÂÊ£¨uint16 CCD1_CenRate£©
     94          µÚÊ®×é£ºCCD2ÖÐÐÄ×ø±ê±ä»¯ÂÊ£¨uint16 CCD2_CenRate£©
     95          µÚÊ®Ò»×é£º×ÜÂ·³Ì£¨uint32 TotalRoad£©
     96          µÚÊ®¶þ×é£º¶æÁ¿£¨uint8 Server_Dir£©
     97          µÚÊ®Èý×é£ºÎ¢·Ö¶æÁ¿£¨uint8 Server_Diff_Dir£©
     98          µÚÊ®ËÄ×é£º×´Ì¬£¨uint8 Special_Status£©
     99          µÚÊ®Îå×é£ºÍÓÂÝxÖá£¨uint8 Gyroscope_x£©
    100          µÚÊ®Áù×é£ºÍÓÂÝyÖá£¨uint8 Gyroscope_y£©
    101          *//*
    102              uint16 loopForWhile = 0;
    103              __v_Uart_TxInt16_(Save2Data.time_counter);
    104              __v_Uart_TxInt16_(2000);
    105              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    106              {
    107                  __v_Uart_TxInt16_(Motor_Give[loopForWhile]);//¸ø¶¨ËÙ¶È
    108              }
    109              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    110              {
    111                  __v_Uart_TxInt16_(Motor_Fuzzy_Give[loopForWhile]);//Ä£ºý¸ø¶¨ËÙ¶È
    112              }
    113              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    114              {
    115                  __v_Uart_TxInt16_(Motor_Speed[loopForWhile]);//Êµ¼ÊËÙ¶È
    116              }
    117              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    118              {
    119                  __v_Uart_TxInt16_(Motor_PWM[loopForWhile]);//µç»úPWM
    120              }
    121              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    122              {
    123                  __v_Uart_TxInt16_(CCD1_cen[loopForWhile]);//CCD_1ÖÐÖµ
    124              }
    125              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    126              {
    127                  __v_Uart_TxInt16_(CCD2_cen[loopForWhile]);//CCD_2ÖÐÖµ
    128              }
    129              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    130              {
    131                  __v_Uart_TxInt16_(CCD1_CenRate[loopForWhile]);//CCD_1ÖÐÖµ×ø±ê±ä»¯ÂÊ
    132              }
    133              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    134              {
    135                  __v_Uart_TxInt16_(CCD2_CenRate[loopForWhile]);//CCD_2ÖÐÖµ×ø±ê±ä»¯ÂÊ
    136              }
    137              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    138              {
    139                  __v_Uart_TxInt32_(TotalRoad[loopForWhile]);//CCD_2ÖÐÖµ×ø±ê±ä»¯ÂÊ
    140              }
    141              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    142              {
    143                  __v_Uart_TxOne_(Server_Dir[loopForWhile]);//¶æÁ¿
    144              }
    145              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    146              {
    147                  __v_Uart_TxOne_(Server_Diff_Dir[loopForWhile]);//Î¢·Ö¶æÁ¿
    148              }
    149              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    150              {
    151                  __v_Uart_TxOne_(Special_Status[loopForWhile]);//×´Ì¬
    152              }
    153              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    154              {
    155                  __v_Uart_TxOne_(Gyroscope_x[loopForWhile]);//ÍÓÂÝxÖá
    156              }
    157              for(loopForWhile = 0;loopForWhile<2000;loopForWhile++)
    158              {
    159                  __v_Uart_TxOne_(Gyroscope_y[loopForWhile]);//ÍÓÂÝyÖá
    160              }
    161          }*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   wr_Data_cut


   Section sizes:

   Bytes  Function/Label
   -----  --------------
   25012  Save2Data
     480  wr_Data_cut

 
 25 012 bytes in section .bss
    480 bytes in section .text
 
    480 bytes of CODE memory
 25 012 bytes of DATA memory

Errors: none
Warnings: none
