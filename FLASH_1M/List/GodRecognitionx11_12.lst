###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      16/Aug/2014  22:11:09 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -          #
#                    TM4123G\代码\遥控器\ShunAn2\GodRecognitionx11_12.c       #
#    Command line =  "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\ShunAn2\GodRecognitionx11_12.c" -D   #
#                    IAR -D ShunAn2 -lCN "C:\Users\pc\Desktop\继续做的事情\四 #
#                    旋翼飞行器 - TM4123G\代码\遥控器\FLASH_1M\List\" -lB     #
#                    "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\FLASH_1M\List\" -o                   #
#                    "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\FLASH_1M\Obj\" --no_cse --no_unroll  #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 #
#                     - TM4123G\代码\遥控器\ShunAn2\" -I                      #
#                    "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\Library\" -I                         #
#                    "C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -         #
#                    TM4123G\代码\遥控器\Library\BlessedAlien\" -Ol           #
#                    --use_c++_inline                                         #
#    List file    =  C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -          #
#                    TM4123G\代码\遥控器\FLASH_1M\List\GodRecognitionx11_12.l #
#                    st                                                       #
#    Object file  =  C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 -          #
#                    TM4123G\代码\遥控器\FLASH_1M\Obj\GodRecognitionx11_12.o  #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\pc\Desktop\继续做的事情\四旋翼飞行器 - TM4123G\代码\遥控器\ShunAn2\GodRecognitionx11_12.c
      1          /*!
      2           *  @brief      上帝的双CCD模式识别算法C文件
      3           *  @author     弓箭
      4           *  @date       2014-3-17
      5           */
      6          #include "GodRecognitionx11_12.h"
      7          

   \                                 In section .bss, align 4
      8          EncoderInformation Encoder = {0};//编码器相关变量
   \                     Encoder:
   \   00000000                      DS8 404

   \                                 In section .bss, align 4
      9          InfraredInformation Infrared = {0};//红外对管相关变量
   \                     Infrared:
   \   00000000                      DS8 404

   \                                 In section .bss, align 4
     10          GyroscopeInformation Gyroscope = {0};//陀螺仪相关变量
   \                     Gyroscope:
   \   00000000                      DS8 404

   \                                 In section .bss, align 4
     11          CCDInformation CCD1 = {0};//CCD1原始图像相关数据
   \                     CCD1:
   \   00000000                      DS8 136

   \                                 In section .bss, align 4
     12          CCDInformation CCD2 = {0};//CCD2原始图像相关数据
   \                     CCD2:
   \   00000000                      DS8 136

   \                                 In section .bss, align 4
     13          TrackInformation_v2 Trk = {0};//赛道信息
   \                     Trk:
   \   00000000                      DS8 1784

   \                                 In section .bss, align 4
     14          DirSpeedGiveInformation Give = {0};//方向和速度给定
   \                     Give:
   \   00000000                      DS8 64

   \                                 In section .bss, align 4
     15          ContralInformation Con = {0};//控制与设置
   \                     Con:
   \   00000000                      DS8 68
     16          

   \                                 In section .rodata, align 4
     17          const unsigned char GR_ServerPWM1[201] =
   \                     GR_ServerPWM1:
   \   00000000   0x00 0x02          DC8 0, 2, 4, 6, 8, 10, 12, 13, 14, 15, 16, 17, 20, 25, 30, 35, 40, 45
   \              0x04 0x06    
   \              0x08 0x0A    
   \              0x0C 0x0D    
   \              0x0E 0x0F    
   \              0x10 0x11    
   \              0x14 0x19    
   \              0x1E 0x23    
   \              0x28 0x2D    
   \   00000012   0x32 0x39          DC8 50, 57, 58, 59, 60, 61, 62, 63, 65, 68, 70, 72, 75, 76, 77, 77, 78
   \              0x3A 0x3B    
   \              0x3C 0x3D    
   \              0x3E 0x3F    
   \              0x41 0x44    
   \              0x46 0x48    
   \              0x4B 0x4C    
   \              0x4D 0x4D    
   \              0x4E         
   \   00000023   0x4F 0x50          DC8 79, 80, 81, 82, 83, 84, 85, 86, 87, 87, 88, 89, 90, 91, 92, 93, 94
   \              0x51 0x52    
   \              0x53 0x54    
   \              0x55 0x56    
   \              0x57 0x57    
   \              0x58 0x59    
   \              0x5A 0x5B    
   \              0x5C 0x5D    
   \              0x5E         
   \   00000034   0x5F 0x60          DC8 95, 96, 97, 98, 99, 99, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x61 0x62    
   \              0x63 0x63    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   00000043   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   00000050   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   0000005D   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   0000006A   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   00000077   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   00000084   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   00000091   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   0000009E   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   000000AB   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   000000B8   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   000000C5   0x64 0x64          DC8 100, 100, 100, 100, 0, 0, 0
   \              0x64 0x64    
   \              0x00 0x00    
   \              0x00         
     18          //CCD1舵机打角表,横坐标是偏差（中心坐标与100之差的绝对值），任意值不能超过100
     19          {
     20              //0    1   2   3   4   5   6   7   8   9 //10  11  12  13  14  15  16  17  18  19 
     21                0,   2,  4,  6,  8, 10, 12, 13, 14, 15,  16, 17, 20, 25, 30, 35, 40, 45, 50, 57,
     22                  
     23              //20  21  22  23  24  25  26  27  28  29 //30  31  32  33  34  35  36  37  38  39
     24                58, 59, 60, 61, 62, 63, 65, 68, 70, 72,  75, 76, 77, 77, 78, 79, 80, 81, 82, 83,
     25                
     26              //40  41  42  43  44  45  46  47  48  49 //50  51  52  53  54  55  56  57  58  59
     27                84, 85, 86, 87, 87, 88, 89, 90, 91, 92,  93, 94, 95, 96, 97, 98, 99, 99, 100,100,    
     28              
     29              //60  61  62  63  64  65  66  67  68  69 //70  71  72  73  74  75  76  77  78  79 
     30                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100,   
     31                
     32              //80  81  82  83  84  85  86  87  88  89 //90  91  92  93  94  95  96  97  98  99  
     33                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     34                 
     35              //100 101 102 103 104 105 106 107 108 109//110 111 112 113 114 115 116 117 118 119
     36                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     37               
     38              //120 121 122 123 124 125 126 127 128 129//130 131 132 133 134 135 136 137 138 139
     39                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     40               
     41              //140 141 142 143 144 145 146 147 148 149//150 151 152 153 154 155 156 157 158 159
     42                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     43               
     44              //160 161 162 163 164 165 166 167 168 169//170 171 172 173 174 175 176 177 178 179
     45                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     46               
     47              //180 181 182 183 184 185 186 187 188 189//190 191 192 193 194 195 196 197 198 199 200
     48                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100,100
     49                   
     50          };
     51          

   \                                 In section .rodata, align 4
     52          const unsigned char GR_ServerPWM2[201] =
   \                     GR_ServerPWM2:
   \   00000000   0x00 0x01          DC8 0, 1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 10, 10, 10, 10, 12, 14, 18
   \              0x02 0x03    
   \              0x04 0x05    
   \              0x06 0x07    
   \              0x08 0x08    
   \              0x09 0x09    
   \              0x0A 0x0A    
   \              0x0A 0x0A    
   \              0x0A 0x0C    
   \              0x0E 0x12    
   \   00000014   0x12 0x13          DC8 18, 19, 20, 21, 22, 23, 24, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41
   \              0x14 0x15    
   \              0x16 0x17    
   \              0x18 0x1E    
   \              0x20 0x22    
   \              0x23 0x24    
   \              0x25 0x26    
   \              0x27 0x28    
   \              0x29         
   \   00000025   0x2A 0x2B          DC8 42, 43, 44, 45, 46, 46, 46, 46, 46, 46, 47, 47, 48, 49, 49, 50, 52
   \              0x2C 0x2D    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2E 0x2E    
   \              0x2F 0x2F    
   \              0x30 0x31    
   \              0x31 0x32    
   \              0x34         
   \   00000036   0x35 0x37          DC8 53, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 56, 56, 56, 56, 57, 57
   \              0x37 0x37    
   \              0x37 0x37    
   \              0x37 0x37    
   \              0x37 0x37    
   \              0x37 0x38    
   \              0x38 0x38    
   \              0x38 0x39    
   \              0x39         
   \   00000047   0x39 0x3A          DC8 57, 58, 58, 58, 58, 59, 59, 59, 59, 60, 60, 60, 61, 61, 61, 62, 62
   \              0x3A 0x3A    
   \              0x3A 0x3B    
   \              0x3B 0x3B    
   \              0x3B 0x3C    
   \              0x3C 0x3C    
   \              0x3D 0x3D    
   \              0x3D 0x3E    
   \              0x3E         
   \   00000058   0x3E 0x3F          DC8 62, 63, 63, 70, 80, 90, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x3F 0x46    
   \              0x50 0x5A    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   00000067   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   00000074   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   00000081   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   0000008E   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   0000009B   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   000000A8   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   000000B5   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64         
   \   000000C2   0x64 0x64          DC8 100, 100, 100, 100, 100, 100, 100, 0, 0, 0
   \              0x64 0x64    
   \              0x64 0x64    
   \              0x64 0x00    
   \              0x00 0x00    
     53          //CCD2舵机打角表,横坐标是偏差（中心坐标与100之差的绝对值），任意值不能超过100！
     54          {
     55              //0    1   2   3   4   5   6   7   8   9 //10  11  12  13  14  15  16  17  18  19 
     56                0,   1,  2,  3,  4,  5,  6,  7,  8,  8,   9,  9, 10, 10, 10, 10, 10, 12, 14, 18,
     57                  
     58              //20  21  22  23  24  25  26  27  28  29 //30  31  32  33  34  35  36  37  38  39
     59                18, 19, 20, 21, 22, 23, 24, 30, 32, 34,  35, 36, 37, 38, 39, 40, 41, 42, 43, 44,
     60                
     61              //40  41  42  43  44  45  46  47  48  49 //50  51  52  53  54  55  56  57  58  59
     62                45, 46, 46, 46, 46, 46, 46, 47, 47, 48,  49, 49, 50, 52, 53, 55, 55, 55, 55, 55,    
     63              
     64              //60  61  62  63  64  65  66  67  68  69 //70  71  72  73  74  75  76  77  78  79 
     65                55, 55, 55, 55, 55, 56, 56, 56, 56, 57,  57, 57, 58, 58, 58, 58, 59, 59, 59, 59,   
     66                
     67              //80  81  82  83  84  85  86  87  88  89 //90  91  92  93  94  95  96  97  98  99  
     68                60, 60, 60, 61, 61, 61, 62, 62, 62, 63,  63, 70, 80, 90,100,100,100,100,100,100,
     69                 
     70              //100 101 102 103 104 105 106 107 108 109//110 111 112 113 114 115 116 117 118 119
     71                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     72               
     73              //120 121 122 123 124 125 126 127 128 129//130 131 132 133 134 135 136 137 138 139
     74                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     75               
     76              //140 141 142 143 144 145 146 147 148 149//150 151 152 153 154 155 156 157 158 159
     77                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     78               
     79              //160 161 162 163 164 165 166 167 168 169//170 171 172 173 174 175 176 177 178 179
     80                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100, 
     81               
     82              //180 181 182 183 184 185 186 187 188 189//190 191 192 193 194 195 196 197 198 199 200
     83                100,100,100,100,100,100,100,100,100,100, 100,100,100,100,100,100,100,100,100,100,100
     84                   
     85          };
     86          

   \                                 In section .rodata, align 4
     87          const unsigned int GR_SpeedGive1[201] =
   \                     GR_SpeedGive1:
   \   00000000   0x000000D2         DC32 210, 210, 210, 210, 210, 210, 210, 210, 210, 210, 205, 200, 195
   \              0x000000D2   
   \              0x000000D2   
   \              0x000000D2   
   \              0x000000D2   
   \              0x000000D2   
   \              0x000000D2   
   \              0x000000D2   
   \              0x000000D2   
   \              0x000000D2   
   \              0x000000CD   
   \              0x000000C8   
   \              0x000000C3   
   \   00000034   0x000000BE         DC32 190, 185, 181, 178, 175, 173, 172, 170, 168, 166, 164, 162, 160
   \              0x000000B9   
   \              0x000000B5   
   \              0x000000B2   
   \              0x000000AF   
   \              0x000000AD   
   \              0x000000AC   
   \              0x000000AA   
   \              0x000000A8   
   \              0x000000A6   
   \              0x000000A4   
   \              0x000000A2   
   \              0x000000A0   
   \   00000068   0x0000009F         DC32 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 148
   \              0x0000009E   
   \              0x0000009D   
   \              0x0000009C   
   \              0x0000009B   
   \              0x0000009A   
   \              0x00000099   
   \              0x00000098   
   \              0x00000097   
   \              0x00000096   
   \              0x00000095   
   \              0x00000094   
   \              0x00000094   
   \   0000009C   0x00000094         DC32 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 136, 135
   \              0x00000093   
   \              0x00000092   
   \              0x00000091   
   \              0x00000090   
   \              0x0000008F   
   \              0x0000008E   
   \              0x0000008D   
   \              0x0000008C   
   \              0x0000008B   
   \              0x0000008A   
   \              0x00000088   
   \              0x00000087   
   \   000000D0   0x00000085         DC32 133, 131, 129, 128, 126, 125, 124, 123, 122, 122, 122, 122, 122
   \              0x00000083   
   \              0x00000081   
   \              0x00000080   
   \              0x0000007E   
   \              0x0000007D   
   \              0x0000007C   
   \              0x0000007B   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   00000104   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   00000138   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   0000016C   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   000001A0   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   000001D4   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   00000208   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   0000023C   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   00000270   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   000002A4   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   000002D8   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   0000030C   0x0000007A         DC32 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
     88          //CCD1电机给定转速表，横坐标为偏差
     89          {
     90              //0   1   2   3   4   5   6   7   8   9 //10  11  12  13  14  15  16  17  18  19 //20  21  22  23  24  25  26  27  28  29 //30  31  32  33  34  35  36  37  38  39//40  41  42  43  44  45  46  47  48  49 //50  51  52  53  54  55  56  57  58  59//60  61  62  63  64  65  66  67  68  69 //70  71  72  73  74  75  76  77  78  79 //80  81  82  83  84  85  86  87  88  89 //90  91  92  93  94  95  96  97  98  99  100 
     91                210,210,210,210,210,210,210,210,210,210,205,200,195,190,185,181,178,175,173,172, 170,168,166,164,162,160,159,158,157,156, 155,154,153,152,151,150,149,148,148,148,147,146,145,144,143,142,141,140,139,138, 136,135,133,131,129,128,126,125,124,123,122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,  
     92              //101 102 103 104 105 106 107 108 109/110 111 112 113 114 115 116 117 118 119/120 121 122 123 124 125 126 127 128 129/130  131 132 133 134 135 136 137 138 139/140 141 142 143 144 145 146 147 148 149/150  151 152 153 154 155 156 157 158 159/160  161 162 163 164 165 166 167 168 169/170  171 172 173 174 175 176 177 178 179/180 181 182 183 184 185 186 187 188 189/190   191 192 193 194 195 196 197 198 199 200 
     93               122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,  122,122,122,122,122,122,122,122,122,122
     94          };
     95          

   \                                 In section .rodata, align 4
     96          const unsigned int GR_SpeedGive2[201] =
   \                     GR_SpeedGive2:
   \   00000000   0x0000010E         DC32 270, 270, 270, 270, 270, 270, 270, 270, 270, 270, 268, 267, 265
   \              0x0000010E   
   \              0x0000010E   
   \              0x0000010E   
   \              0x0000010E   
   \              0x0000010E   
   \              0x0000010E   
   \              0x0000010E   
   \              0x0000010E   
   \              0x0000010E   
   \              0x0000010C   
   \              0x0000010B   
   \              0x00000109   
   \   00000034   0x00000108         DC32 264, 262, 261, 259, 258, 256, 255, 253, 252, 250, 249, 247, 246
   \              0x00000106   
   \              0x00000105   
   \              0x00000103   
   \              0x00000102   
   \              0x00000100   
   \              0x000000FF   
   \              0x000000FD   
   \              0x000000FC   
   \              0x000000FA   
   \              0x000000F9   
   \              0x000000F7   
   \              0x000000F6   
   \   00000068   0x000000F4         DC32 244, 243, 241, 240, 238, 237, 235, 235, 235, 234, 232, 230, 229
   \              0x000000F3   
   \              0x000000F1   
   \              0x000000F0   
   \              0x000000EE   
   \              0x000000ED   
   \              0x000000EB   
   \              0x000000EB   
   \              0x000000EB   
   \              0x000000EA   
   \              0x000000E8   
   \              0x000000E6   
   \              0x000000E5   
   \   0000009C   0x000000E4         DC32 228, 226, 225, 223, 221, 219, 218, 216, 214, 212, 209, 198, 188
   \              0x000000E2   
   \              0x000000E1   
   \              0x000000DF   
   \              0x000000DD   
   \              0x000000DB   
   \              0x000000DA   
   \              0x000000D8   
   \              0x000000D6   
   \              0x000000D4   
   \              0x000000D1   
   \              0x000000C6   
   \              0x000000BC   
   \   000000D0   0x000000B1         DC32 177, 167, 157, 146, 135, 135, 135, 134, 134, 133, 133, 133, 132
   \              0x000000A7   
   \              0x0000009D   
   \              0x00000092   
   \              0x00000087   
   \              0x00000087   
   \              0x00000087   
   \              0x00000086   
   \              0x00000086   
   \              0x00000085   
   \              0x00000085   
   \              0x00000085   
   \              0x00000084   
   \   00000104   0x00000084         DC32 132, 132, 131, 131, 131, 130, 130, 130, 129, 129, 128, 128, 128
   \              0x00000084   
   \              0x00000083   
   \              0x00000083   
   \              0x00000083   
   \              0x00000082   
   \              0x00000082   
   \              0x00000082   
   \              0x00000081   
   \              0x00000081   
   \              0x00000080   
   \              0x00000080   
   \              0x00000080   
   \   00000138   0x0000007F         DC32 127, 127, 127, 126, 126, 125, 125, 125, 124, 123, 122, 122, 122
   \              0x0000007F   
   \              0x0000007F   
   \              0x0000007E   
   \              0x0000007E   
   \              0x0000007D   
   \              0x0000007D   
   \              0x0000007D   
   \              0x0000007C   
   \              0x0000007B   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   0000016C   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   000001A0   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   000001D4   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   00000208   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   0000023C   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   00000270   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   000002A4   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   000002D8   0x0000007A         DC32 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \   0000030C   0x0000007A         DC32 122, 122, 122, 122, 122, 122
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
   \              0x0000007A   
     97          //CCD2电机给定转速表，横坐标为偏差
     98          {
     99              //0   1   2   3   4   5   6   7   8   9 //10  11  12  13  14  15  16  17  18  19 //20  21  22  23  24  25  26  27  28  29 //30  31  32  33  34  35  36  37  38  39//40  41  42  43  44  45  46  47  48  49 //50  51  52  53  54  55  56  57  58  59//60  61  62  63  64  65  66  67  68  69 //70  71  72  73  74  75  76  77  78  79 //80  81  82  83  84  85  86  87  88  89 //90  91  92  93  94  95  96  97  98  99  100 
    100                270,270,270,270,270,270,270,270,270,270,268,267,265,264,262,261,259,258,256,255, 253,252,250,249,247,246,244,243,241,240, 238,237,235,235,235,234,232,230,229,228,226,225,223,221,219,218,216,214,212,209, 198,188,177,167,157,146,135,135,135,134,134,133,133,133,132,132,132,131,131,131, 130,130,130,129,129,128,128,128,127,127,127,126,126,125,125,125,124,123,122,122, 122,122,122,122,122,122,122,122,122,122,122,        
    101              //101 102 103 104 105 106 107 108 109/110 111 112 113 114 115 116 117 118 119/120  121 122 123 124 125 126 127 128 129/130  131 132 133 134 135 136 137 138 139/140 141 142 143 144 145 146 147 148 149/150  151 152 153 154 155 156 157 158 159/160  161 162 163 164 165 166 167 168 169/170  171 172 173 174 175 176 177 178 179/180  181 182 183 184 185 186 187 188 189/190  191 192 193 194 195 196 197 198 199 200 
    102               122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122, 122,122,122,122,122,122,122,122,122,122
    103          };
    104          

   \                                 In section .text, align 2, keep-with-next
    105          void GodRecognitionInit(void)//算法变量初始化
    106          {
    107            for(uint8 i=0;i<maxRAMSaveNum;i++)
   \                     GodRecognitionInit: (+1)
   \   00000000   0x2000             MOVS     R0,#+0
   \   00000002   0xE015             B.N      ??GodRecognitionInit_0
    108            {
    109              Encoder.encoder[i] = 0;   
   \                     ??GodRecognitionInit_1: (+1)
   \   00000004   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000006   0x....             LDR.N    R1,??DataTable2
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0xF821 0x2010      STRH     R2,[R1, R0, LSL #+1]
    110              Trk.cen1[i] = 1000;  
   \   0000000E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000010   0x....             LDR.N    R1,??DataTable2_1
   \   00000012   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000016   0xF44F 0x727A      MOV      R2,#+1000
   \   0000001A   0xF8A1 0x219A      STRH     R2,[R1, #+410]
    111              Trk.cen2[i] = 1000;
   \   0000001E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000020   0x....             LDR.N    R1,??DataTable2_1
   \   00000022   0xEB11 0x0140      ADDS     R1,R1,R0, LSL #+1
   \   00000026   0xF44F 0x727A      MOV      R2,#+1000
   \   0000002A   0xF8A1 0x24DA      STRH     R2,[R1, #+1242]
    112            }
   \   0000002E   0x1C40             ADDS     R0,R0,#+1
   \                     ??GodRecognitionInit_0: (+1)
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x28C8             CMP      R0,#+200
   \   00000034   0xDBE6             BLT.N    ??GodRecognitionInit_1
    113            Trk.Width1 = CCD1TrkWidth;//初试CCD1赛道宽度等于默认值
   \   00000036   0x....             LDR.N    R0,??DataTable2_1
   \   00000038   0x213E             MOVS     R1,#+62
   \   0000003A   0xF880 0x132E      STRB     R1,[R0, #+814]
    114            Trk.Width2 = CCD2TrkWidth;//初试CCD2赛道宽度等于默认值
   \   0000003E   0x....             LDR.N    R0,??DataTable2_1
   \   00000040   0x2144             MOVS     R1,#+68
   \   00000042   0xF880 0x166E      STRB     R1,[R0, #+1646]
    115            Con.SpeedContralPeriod = 1;//初试速度控制周期为1(ms)
   \   00000046   0x....             LDR.N    R0,??DataTable2_2
   \   00000048   0x2101             MOVS     R1,#+1
   \   0000004A   0x7041             STRB     R1,[R0, #+1]
    116            Con.MainContralPeriod = 5;//初始控制周期等于5(ms)
   \   0000004C   0x....             LDR.N    R0,??DataTable2_2
   \   0000004E   0x2105             MOVS     R1,#+5
   \   00000050   0x70C1             STRB     R1,[R0, #+3]
    117            Con.EnableDirectionServer = 1;//使能打角舵机
   \   00000052   0x....             LDR.N    R0,??DataTable2_2
   \   00000054   0x2101             MOVS     R1,#+1
   \   00000056   0xF880 0x1031      STRB     R1,[R0, #+49]
    118            Con.EnableMotor = 1;//使能电机
   \   0000005A   0x....             LDR.N    R0,??DataTable2_2
   \   0000005C   0x2101             MOVS     R1,#+1
   \   0000005E   0xF880 0x1032      STRB     R1,[R0, #+50]
    119            Con.EnableCrash = 1;//使能冲出赛道检测
   \   00000062   0x....             LDR.N    R0,??DataTable2_2
   \   00000064   0x2101             MOVS     R1,#+1
   \   00000066   0xF880 0x1037      STRB     R1,[R0, #+55]
    120            Con.EnableStartline = 1;//使能起跑线检测
   \   0000006A   0x....             LDR.N    R0,??DataTable2_2
   \   0000006C   0x2101             MOVS     R1,#+1
   \   0000006E   0xF880 0x1036      STRB     R1,[R0, #+54]
    121            Con.EnableHerribone = 1;//使能人字检测
   \   00000072   0x....             LDR.N    R0,??DataTable2_2
   \   00000074   0x2101             MOVS     R1,#+1
   \   00000076   0xF880 0x1033      STRB     R1,[R0, #+51]
    122            Con.EnableRoadblock = 1;//使能路障检测
   \   0000007A   0x....             LDR.N    R0,??DataTable2_2
   \   0000007C   0x2101             MOVS     R1,#+1
   \   0000007E   0xF880 0x1034      STRB     R1,[R0, #+52]
    123            Con.EnableRamp = 1;//使能坡道检测
   \   00000082   0x....             LDR.N    R0,??DataTable2_2
   \   00000084   0x2101             MOVS     R1,#+1
   \   00000086   0xF880 0x1035      STRB     R1,[R0, #+53]
    124            Con.Battery = 8.0;//初试设置电池电压为8.0V
   \   0000008A   0x....             LDR.N    R0,??DataTable2_2
   \   0000008C   0xF05F 0x4182      MOVS     R1,#+1090519040
   \   00000090   0x63C1             STR      R1,[R0, #+60]
    125            Con.Ce_ = 1.57;//初试设置电动势常数
   \   00000092   0x....             LDR.N    R0,??DataTable2_2
   \   00000094   0x....             LDR.N    R1,??DataTable2_3  ;; 0x3fc8f5c3
   \   00000096   0x6401             STR      R1,[R0, #+64]
    126            Give.DPeriod = 50;//初始微分周期为100（ms）
   \   00000098   0x....             LDR.N    R0,??DataTable2_4
   \   0000009A   0x2132             MOVS     R1,#+50
   \   0000009C   0x8181             STRH     R1,[R0, #+12]
    127            Give.D_motor = 0.5;//设定电机微分系数
   \   0000009E   0x....             LDR.N    R0,??DataTable2_4
   \   000000A0   0xF05F 0x517C      MOVS     R1,#+1056964608
   \   000000A4   0x61C1             STR      R1,[R0, #+28]
    128            Give.D_server = 0.3;//设定舵机微分系数
   \   000000A6   0x....             LDR.N    R0,??DataTable2_4
   \   000000A8   0x....             LDR.N    R1,??DataTable2_5  ;; 0x3e99999a
   \   000000AA   0x6141             STR      R1,[R0, #+20]
    129            Give.SpeedCoef = 1.0;//设定初始速度系数
   \   000000AC   0x....             LDR.N    R0,??DataTable2_4
   \   000000AE   0xF05F 0x517E      MOVS     R1,#+1065353216
   \   000000B2   0x6281             STR      R1,[R0, #+40]
    130            Give.ServerTestPWM = 100;//设定初始舵机调试PWM
   \   000000B4   0x....             LDR.N    R0,??DataTable2_4
   \   000000B6   0x2164             MOVS     R1,#+100
   \   000000B8   0x7141             STRB     R1,[R0, #+5]
    131            Trk.Straight1 = 1;//初始置位直道标志
   \   000000BA   0x....             LDR.N    R0,??DataTable2_1
   \   000000BC   0x2101             MOVS     R1,#+1
   \   000000BE   0xF880 0x133A      STRB     R1,[R0, #+826]
    132            Trk.StraightRoad1 = 50000;//初始设置直道累加路程
   \   000000C2   0x....             LDR.N    R0,??DataTable2_1
   \   000000C4   0xF24C 0x3150      MOVW     R1,#+50000
   \   000000C8   0xF8C0 0x133C      STR      R1,[R0, #+828]
    133          }
   \   000000CC   0x4770             BX       LR               ;; return
    134          

   \                                 In section .text, align 2, keep-with-next
    135          void CCD1ImageAbstract(void)//CCD1图像基本特征提取
    136          {
   \                     CCD1ImageAbstract: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    137            CCD1.max = 0;CCD1.min = 255;
   \   00000002   0x....             LDR.N    R0,??DataTable2_6
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0xF880 0x1080      STRB     R1,[R0, #+128]
   \   0000000A   0x....             LDR.N    R0,??DataTable2_6
   \   0000000C   0x21FF             MOVS     R1,#+255
   \   0000000E   0xF880 0x1081      STRB     R1,[R0, #+129]
    138            for(uint8 i=0;i<128;i++)//提取出最大值和最小值
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xE02B             B.N      ??CCD1ImageAbstract_0
    139              {
    140                if(i>=CCD1illegalArea && i<=127 - CCD1illegalArea)//去除边界无效区域
   \                     ??CCD1ImageAbstract_1: (+1)
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0xF1B0 0x010A      SUBS     R1,R0,#+10
   \   0000001C   0x296C             CMP      R1,#+108
   \   0000001E   0xD225             BCS.N    ??CCD1ImageAbstract_2
    141                {
    142                  if(CCD1.img[i]>CCD1.max) CCD1.max = CCD1.img[i];
   \   00000020   0x....             LDR.N    R1,??DataTable2_6
   \   00000022   0xF891 0x1080      LDRB     R1,[R1, #+128]
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x....             LDR.N    R2,??DataTable2_6
   \   0000002A   0x5C82             LDRB     R2,[R0, R2]
   \   0000002C   0x4291             CMP      R1,R2
   \   0000002E   0xD205             BCS.N    ??CCD1ImageAbstract_3
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x....             LDR.N    R1,??DataTable2_6
   \   00000034   0x5C41             LDRB     R1,[R0, R1]
   \   00000036   0x....             LDR.N    R2,??DataTable2_6
   \   00000038   0xF882 0x1080      STRB     R1,[R2, #+128]
    143                  if(CCD1.img[i]<CCD1.min) CCD1.min = CCD1.img[i];
   \                     ??CCD1ImageAbstract_3: (+1)
   \   0000003C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003E   0x....             LDR.N    R1,??DataTable2_6
   \   00000040   0x5C41             LDRB     R1,[R0, R1]
   \   00000042   0x....             LDR.N    R2,??DataTable2_6
   \   00000044   0xF892 0x2081      LDRB     R2,[R2, #+129]
   \   00000048   0x4291             CMP      R1,R2
   \   0000004A   0xD205             BCS.N    ??CCD1ImageAbstract_4
   \   0000004C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004E   0x....             LDR.N    R1,??DataTable2_6
   \   00000050   0x5C41             LDRB     R1,[R0, R1]
   \   00000052   0x....             LDR.N    R2,??DataTable2_6
   \   00000054   0xF882 0x1081      STRB     R1,[R2, #+129]
    144                  CCD1.aver = CCD1.aver + CCD1.img[i];    // CCD1.aver += CCD1.img[i];
   \                     ??CCD1ImageAbstract_4: (+1)
   \   00000058   0x....             LDR.N    R1,??DataTable2_6
   \   0000005A   0xF8B1 0x1082      LDRH     R1,[R1, #+130]
   \   0000005E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000060   0x....             LDR.N    R2,??DataTable2_6
   \   00000062   0x5C82             LDRB     R2,[R0, R2]
   \   00000064   0x1889             ADDS     R1,R1,R2
   \   00000066   0x....             LDR.N    R2,??DataTable2_6
   \   00000068   0xF8A2 0x1082      STRH     R1,[R2, #+130]
    145                }
    146              }      
   \                     ??CCD1ImageAbstract_2: (+1)
   \   0000006C   0x1C40             ADDS     R0,R0,#+1
   \                     ??CCD1ImageAbstract_0: (+1)
   \   0000006E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000070   0x2880             CMP      R0,#+128
   \   00000072   0xDBD0             BLT.N    ??CCD1ImageAbstract_1
    147              CCD1.aver = CCD1.aver/(128 - 2*CCD1illegalArea);//提取出平均值
   \   00000074   0x....             LDR.N    R0,??DataTable2_6
   \   00000076   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   0000007A   0x216C             MOVS     R1,#+108
   \   0000007C   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000080   0x....             LDR.N    R1,??DataTable2_6
   \   00000082   0xF8A1 0x0082      STRH     R0,[R1, #+130]
    148              CCD1.threshold = (uint8)(((float)(CCD1.max - CCD1.min))*0.3);//提取出跳变阈值
   \   00000086   0x....             LDR.N    R0,??DataTable2_6
   \   00000088   0xF890 0x0080      LDRB     R0,[R0, #+128]
   \   0000008C   0x....             LDR.N    R1,??DataTable2_6
   \   0000008E   0xF891 0x1081      LDRB     R1,[R1, #+129]
   \   00000092   0x1A40             SUBS     R0,R0,R1
   \   00000094   0x.... 0x....      BL       __aeabi_i2f
   \   00000098   0x.... 0x....      BL       __aeabi_f2d
   \   0000009C   0xF05F 0x3233      MOVS     R2,#+858993459
   \   000000A0   0x....             LDR.N    R3,??DataTable2_7  ;; 0x3fd33333
   \   000000A2   0x.... 0x....      BL       __aeabi_dmul
   \   000000A6   0x.... 0x....      BL       __aeabi_d2iz
   \   000000AA   0x....             LDR.N    R1,??DataTable2_6
   \   000000AC   0xF881 0x0084      STRB     R0,[R1, #+132]
    149          }
   \   000000B0   0xBD01             POP      {R0,PC}          ;; return
    150          

   \                                 In section .text, align 2, keep-with-next
    151          void CCD2ImageAbstract(void)//CCD2图像基本特征提取
    152          {
   \                     CCD2ImageAbstract: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    153            CCD2.max = 0;CCD2.min = 255;
   \   00000002   0x....             LDR.N    R0,??DataTable2_8
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0xF880 0x1080      STRB     R1,[R0, #+128]
   \   0000000A   0x....             LDR.N    R0,??DataTable2_8
   \   0000000C   0x21FF             MOVS     R1,#+255
   \   0000000E   0xF880 0x1081      STRB     R1,[R0, #+129]
    154            for(uint8 i=0;i<128;i++)//提取出最大值和最小值
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xE02A             B.N      ??CCD2ImageAbstract_0
    155              {
    156                if(i>=CCD2illegalArea && i<=127 - CCD2illegalArea)//去除边界无效区域
   \                     ??CCD2ImageAbstract_1: (+1)
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x1F41             SUBS     R1,R0,#+5
   \   0000001A   0x2976             CMP      R1,#+118
   \   0000001C   0xD225             BCS.N    ??CCD2ImageAbstract_2
    157                {
    158                  if(CCD2.img[i]>CCD2.max) CCD2.max = CCD2.img[i];
   \   0000001E   0x....             LDR.N    R1,??DataTable2_8
   \   00000020   0xF891 0x1080      LDRB     R1,[R1, #+128]
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x....             LDR.N    R2,??DataTable2_8
   \   00000028   0x5C82             LDRB     R2,[R0, R2]
   \   0000002A   0x4291             CMP      R1,R2
   \   0000002C   0xD205             BCS.N    ??CCD2ImageAbstract_3
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x....             LDR.N    R1,??DataTable2_8
   \   00000032   0x5C41             LDRB     R1,[R0, R1]
   \   00000034   0x....             LDR.N    R2,??DataTable2_8
   \   00000036   0xF882 0x1080      STRB     R1,[R2, #+128]
    159                  if(CCD2.img[i]<CCD2.min) CCD2.min = CCD2.img[i];
   \                     ??CCD2ImageAbstract_3: (+1)
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x....             LDR.N    R1,??DataTable2_8
   \   0000003E   0x5C41             LDRB     R1,[R0, R1]
   \   00000040   0x....             LDR.N    R2,??DataTable2_8
   \   00000042   0xF892 0x2081      LDRB     R2,[R2, #+129]
   \   00000046   0x4291             CMP      R1,R2
   \   00000048   0xD205             BCS.N    ??CCD2ImageAbstract_4
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0x....             LDR.N    R1,??DataTable2_8
   \   0000004E   0x5C41             LDRB     R1,[R0, R1]
   \   00000050   0x....             LDR.N    R2,??DataTable2_8
   \   00000052   0xF882 0x1081      STRB     R1,[R2, #+129]
    160                  CCD2.aver = CCD2.aver + CCD2.img[i];    // CCD2.aver += CCD2.img[i];
   \                     ??CCD2ImageAbstract_4: (+1)
   \   00000056   0x....             LDR.N    R1,??DataTable2_8
   \   00000058   0xF8B1 0x1082      LDRH     R1,[R1, #+130]
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x....             LDR.N    R2,??DataTable2_8
   \   00000060   0x5C82             LDRB     R2,[R0, R2]
   \   00000062   0x1889             ADDS     R1,R1,R2
   \   00000064   0x....             LDR.N    R2,??DataTable2_8
   \   00000066   0xF8A2 0x1082      STRH     R1,[R2, #+130]
    161                }
    162              }      
   \                     ??CCD2ImageAbstract_2: (+1)
   \   0000006A   0x1C40             ADDS     R0,R0,#+1
   \                     ??CCD2ImageAbstract_0: (+1)
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0x2880             CMP      R0,#+128
   \   00000070   0xDBD1             BLT.N    ??CCD2ImageAbstract_1
    163              CCD2.aver = CCD2.aver/(128 - 2*CCD2illegalArea);//提取出平均值
   \   00000072   0x....             LDR.N    R0,??DataTable2_8
   \   00000074   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   00000078   0x2176             MOVS     R1,#+118
   \   0000007A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000007E   0x....             LDR.N    R1,??DataTable2_8
   \   00000080   0xF8A1 0x0082      STRH     R0,[R1, #+130]
    164              CCD2.threshold = (uint8)(((float)(CCD2.max - CCD2.min))*0.3);//提取出跳变阈值
   \   00000084   0x....             LDR.N    R0,??DataTable2_8
   \   00000086   0xF890 0x0080      LDRB     R0,[R0, #+128]
   \   0000008A   0x....             LDR.N    R1,??DataTable2_8
   \   0000008C   0xF891 0x1081      LDRB     R1,[R1, #+129]
   \   00000090   0x1A40             SUBS     R0,R0,R1
   \   00000092   0x.... 0x....      BL       __aeabi_i2f
   \   00000096   0x.... 0x....      BL       __aeabi_f2d
   \   0000009A   0xF05F 0x3233      MOVS     R2,#+858993459
   \   0000009E   0x....             LDR.N    R3,??DataTable2_7  ;; 0x3fd33333
   \   000000A0   0x.... 0x....      BL       __aeabi_dmul
   \   000000A4   0x.... 0x....      BL       __aeabi_d2iz
   \   000000A8   0x....             LDR.N    R1,??DataTable2_8
   \   000000AA   0xF881 0x0084      STRB     R0,[R1, #+132]
    165          }
   \   000000AE   0xBD01             POP      {R0,PC}          ;; return
    166          

   \                                 In section .text, align 2, keep-with-next
    167          void FindCentralLine(void)// 找中线
    168          {
   \                     FindCentralLine: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
    169              //*****************************************************************************************
    170              //-----------------------------------------------------------------------------------------
    171              //-------------------------------------提取CCD1左右黑边------------------------------------
    172              //-----------------------------------------------------------------------------------------
    173              //*****************************************************************************************
    174              
    175              Trk.lastCen1 = Trk.currentCen1;//暂存上一次的下标
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000000C   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   00000010   0xF8A0 0x132C      STRH     R1,[R0, #+812]
    176              
    177              Trk.lastLeft1 = Trk.currentLeft1;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000001C   0xF8B1 0x10CA      LDRH     R1,[R1, #+202]
   \   00000020   0xF8A0 0x10CC      STRH     R1,[R0, #+204]
    178              if(Trk.currentLeft1 == maxRAMSaveNum - 1)
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000028   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   0000002C   0x28C7             CMP      R0,#+199
   \   0000002E   0xD105             BNE.N    ??FindCentralLine_0
    179              {
    180                  Trk.currentLeft1 = 0;
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0xF8A0 0x10CA      STRH     R1,[R0, #+202]
   \   0000003A   0xE008             B.N      ??FindCentralLine_1
    181              }
    182              else
    183              {
    184                  Trk.currentLeft1 ++;
   \                     ??FindCentralLine_0: (+1)
   \   0000003C   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000040   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000044   0x1C40             ADDS     R0,R0,#+1
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000004A   0xF8A1 0x00CA      STRH     R0,[R1, #+202]
    185              } 
    186              Trk.left1[Trk.currentLeft1] = 255;
   \                     ??FindCentralLine_1: (+1)
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000052   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000005A   0x1840             ADDS     R0,R0,R1
   \   0000005C   0x21FF             MOVS     R1,#+255
   \   0000005E   0x7041             STRB     R1,[R0, #+1]
    187              //扫描前先初始化当前边沿不存在  
    188              //若上次的中线不处于CCD1的左视野之外，则可以向左扫描上升沿
    189              if(Trk.cen1[Trk.lastCen1] >= 937 + CCD1illegalArea + CCD1ScanWidth)
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000064   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000006C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000070   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000074   0xF240 0x31BB      MOVW     R1,#+955
   \   00000078   0x4288             CMP      R0,R1
   \   0000007A   0xF2C0 0x808A      BLT.W    ??FindCentralLine_2
    190              {
    191                  uint16 ScanTime,Temp;
    192                  //uint8  IndexBeManyest = 0;
    193                  if(Trk.cen1[Trk.lastCen1] <= 937 + 127 - CCD1illegalArea)//超出图像边界限幅
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000082   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000008A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000008E   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000092   0xF240 0x411F      MOVW     R1,#+1055
   \   00000096   0x4288             CMP      R0,R1
   \   00000098   0xDA1A             BGE.N    ??FindCentralLine_3
    194                  {
    195                      ScanTime = Trk.cen1[Trk.lastCen1] - 937 - CCD1illegalArea - CCD1ScanWidth + 1;//计算向左扫描次数
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000009E   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000000A6   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000000AA   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000000AE   0xF240 0x31BA      MOVW     R1,#+954
   \   000000B2   0x1A46             SUBS     R6,R0,R1
    196                      Temp = Trk.cen1[Trk.lastCen1] - 937;
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000000B8   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000000C0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000000C4   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000000C8   0xF240 0x31A9      MOVW     R1,#+937
   \   000000CC   0x1A47             SUBS     R7,R0,R1
   \   000000CE   0xE001             B.N      ??FindCentralLine_4
    197                  }
    198                  else
    199                  {
    200                      ScanTime = 127 - 2*CCD1illegalArea - CCD1ScanWidth + 1;//计算向左扫描次数
   \                     ??FindCentralLine_3: (+1)
   \   000000D0   0x2664             MOVS     R6,#+100
    201                      Temp = 127 - CCD1illegalArea;
   \   000000D2   0x2775             MOVS     R7,#+117
    202                  }
    203                  //依次从中线向左扫描，直到扫描出上升沿或者达到扫描次数
    204                  /*
    205                      上升沿检测
    206                  */
    207                  for(uint8 i = 0;i<ScanTime&&Trk.left1[Trk.currentLeft1]==255;i++)
   \                     ??FindCentralLine_4: (+1)
   \   000000D4   0xF05F 0x0800      MOVS     R8,#+0
   \   000000D8   0xE04B             B.N      ??FindCentralLine_5
    208                  { //跳变检测的条件是：相隔CCD1ScanWidth的两个点之差大于阈值，也大于CCD整场图像平均值的0.2倍（?）
    209                      if(CCD1.img[Temp]>CCD1.img[Temp-CCD1ScanWidth] 
    210                         && CCD1.img[Temp]-CCD1.img[Temp-CCD1ScanWidth]>=CCD1.threshold 
    211                         && CCD1.img[Temp]-CCD1.img[Temp-CCD1ScanWidth]>=CCD1.aver*0.2)
   \                     ??FindCentralLine_6: (+1)
   \   000000DA   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   000000E0   0x1838             ADDS     R0,R7,R0
   \   000000E2   0xF810 0x0C08      LDRB     R0,[R0, #-8]
   \   000000E6   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   000000EC   0x5C79             LDRB     R1,[R7, R1]
   \   000000EE   0x4288             CMP      R0,R1
   \   000000F0   0xD23C             BCS.N    ??FindCentralLine_7
   \   000000F2   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000F4   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   000000F8   0x5C38             LDRB     R0,[R7, R0]
   \   000000FA   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   000000FC   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000100   0x1879             ADDS     R1,R7,R1
   \   00000102   0xF811 0x1C08      LDRB     R1,[R1, #-8]
   \   00000106   0x1A40             SUBS     R0,R0,R1
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   0000010C   0xF891 0x1084      LDRB     R1,[R1, #+132]
   \   00000110   0x4288             CMP      R0,R1
   \   00000112   0xDB2B             BLT.N    ??FindCentralLine_7
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   00000118   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   0000011C   0x.... 0x....      BL       __aeabi_ui2d
   \   00000120   0x.... 0x....      LDR.W    R2,??DataTable3_2  ;; 0x9999999a
   \   00000124   0x.... 0x....      LDR.W    R3,??DataTable3_3  ;; 0x3fc99999
   \   00000128   0x.... 0x....      BL       __aeabi_dmul
   \   0000012C   0x0002             MOVS     R2,R0
   \   0000012E   0x000B             MOVS     R3,R1
   \   00000130   0x0014             MOVS     R4,R2
   \   00000132   0x001D             MOVS     R5,R3
   \   00000134   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   0000013A   0x5C38             LDRB     R0,[R7, R0]
   \   0000013C   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000013E   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000142   0x1879             ADDS     R1,R7,R1
   \   00000144   0xF811 0x1C08      LDRB     R1,[R1, #-8]
   \   00000148   0x1A40             SUBS     R0,R0,R1
   \   0000014A   0x.... 0x....      BL       __aeabi_i2d
   \   0000014E   0x0022             MOVS     R2,R4
   \   00000150   0x002B             MOVS     R3,R5
   \   00000152   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000156   0xD809             BHI.N    ??FindCentralLine_7
    212                      {
    213                          Trk.left1[Trk.currentLeft1] = Temp-CCD1ScanWidth; 
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000015C   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000164   0x1840             ADDS     R0,R0,R1
   \   00000166   0x0039             MOVS     R1,R7
   \   00000168   0x3908             SUBS     R1,R1,#+8
   \   0000016A   0x7041             STRB     R1,[R0, #+1]
    214                          
    215                          //Trk.LeftJumpVarStack[IndexBeManyest] = CCD1.img[Temp]-CCD1.img[Temp-CCD1ScanWidth];
    216                          //IndexBeManyest ++;
    217                      
    218                      }
    219                      Temp--;
   \                     ??FindCentralLine_7: (+1)
   \   0000016C   0x1E7F             SUBS     R7,R7,#+1
    220                  }
   \   0000016E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??FindCentralLine_5: (+1)
   \   00000172   0x4640             MOV      R0,R8
   \   00000174   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000176   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000178   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000017A   0x42B0             CMP      R0,R6
   \   0000017C   0xD209             BCS.N    ??FindCentralLine_2
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000182   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000186   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000018A   0x1840             ADDS     R0,R0,R1
   \   0000018C   0x7840             LDRB     R0,[R0, #+1]
   \   0000018E   0x28FF             CMP      R0,#+255
   \   00000190   0xD0A3             BEQ.N    ??FindCentralLine_6
    221                  //Trk.LeftMaxIndex = IndexBeManyest;
    222              }
    223              
    224              
    225              Trk.lastRight1 = Trk.currentRight1;
   \                     ??FindCentralLine_2: (+1)
   \   00000192   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000196   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000019A   0xF8B1 0x1196      LDRH     R1,[R1, #+406]
   \   0000019E   0xF8A0 0x1198      STRH     R1,[R0, #+408]
    226              if(Trk.currentRight1 == maxRAMSaveNum - 1)
   \   000001A2   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000001A6   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   000001AA   0x28C7             CMP      R0,#+199
   \   000001AC   0xD105             BNE.N    ??FindCentralLine_8
    227              {
    228                  Trk.currentRight1 = 0;
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000001B2   0x2100             MOVS     R1,#+0
   \   000001B4   0xF8A0 0x1196      STRH     R1,[R0, #+406]
   \   000001B8   0xE008             B.N      ??FindCentralLine_9
    229              }
    230              else
    231              {
    232                  Trk.currentRight1 ++;
   \                     ??FindCentralLine_8: (+1)
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000001BE   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   000001C2   0x1C40             ADDS     R0,R0,#+1
   \   000001C4   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000001C8   0xF8A1 0x0196      STRH     R0,[R1, #+406]
    233              }
    234              Trk.right1[Trk.currentRight1] = 255;//扫描前先初始化当前边沿不存在
   \                     ??FindCentralLine_9: (+1)
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000001D0   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   000001D4   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000001D8   0x1840             ADDS     R0,R0,R1
   \   000001DA   0x21FF             MOVS     R1,#+255
   \   000001DC   0xF880 0x10CE      STRB     R1,[R0, #+206]
    235              //若上次的中线不处于CCD1的右视野之外，则可以向右扫描下降沿
    236              if(Trk.cen1[Trk.lastCen1] <= 937 + 127 - CCD1illegalArea - CCD1ScanWidth)
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000001E4   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   000001E8   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000001EC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000001F0   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000001F4   0xF240 0x4117      MOVW     R1,#+1047
   \   000001F8   0x4288             CMP      R0,R1
   \   000001FA   0xF280 0x8086      BGE.W    ??FindCentralLine_10
    237              {
    238                  uint8 ScanTime,Temp;
    239                  //uint8 IndexBeManyest = 0;
    240                  if(Trk.cen1[Trk.lastCen1] >= 937 + CCD1illegalArea)//超出图像边界限幅
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000202   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   00000206   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000020A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000020E   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000212   0xF240 0x31B3      MOVW     R1,#+947
   \   00000216   0x4288             CMP      R0,R1
   \   00000218   0xDB18             BLT.N    ??FindCentralLine_11
    241                  {
    242                      ScanTime = 937 + 127 -Trk.cen1[Trk.lastCen1] - CCD1illegalArea - CCD1ScanWidth + 1;//计算向右扫描次数
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000021E   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   00000222   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000226   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000022A   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   0000022E   0xF1D0 0x0617      RSBS     R6,R0,#+23
    243                      Temp = Trk.cen1[Trk.lastCen1] - 937;
   \   00000232   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000236   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   0000023A   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000023E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000242   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000246   0xF110 0x0757      ADDS     R7,R0,#+87
   \   0000024A   0xE001             B.N      ??FindCentralLine_12
    244                  }
    245                  else
    246                  {
    247                      ScanTime = 127 - 2*CCD1illegalArea - CCD1ScanWidth + 1;//计算向右扫描次数
   \                     ??FindCentralLine_11: (+1)
   \   0000024C   0x2664             MOVS     R6,#+100
    248                      Temp = CCD1illegalArea;
   \   0000024E   0x270A             MOVS     R7,#+10
    249                  }
    250                  //依次从中线向右扫描，直到扫描出下降沿或者达到扫描次数
    251                  for(uint8 i = 0;i<ScanTime&&Trk.right1[Trk.currentRight1]==255;i++)
   \                     ??FindCentralLine_12: (+1)
   \   00000250   0xF05F 0x0800      MOVS     R8,#+0
   \   00000254   0xE049             B.N      ??FindCentralLine_13
    252                  {
    253                      //跳变检测的条件是：相隔CCD1ScanWidth的两个点之差大于阈值，也大于CCD整场图像平均值的0.2倍
    254                      if(CCD1.img[Temp]>CCD1.img[Temp+CCD1ScanWidth] 
    255                         && CCD1.img[Temp]-CCD1.img[Temp+CCD1ScanWidth]>=CCD1.threshold 
    256                         && CCD1.img[Temp]-CCD1.img[Temp+CCD1ScanWidth]>=CCD1.aver*0.2)
   \                     ??FindCentralLine_14: (+1)
   \   00000256   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000258   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   0000025C   0x1838             ADDS     R0,R7,R0
   \   0000025E   0x7A00             LDRB     R0,[R0, #+8]
   \   00000260   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000262   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000266   0x5C79             LDRB     R1,[R7, R1]
   \   00000268   0x4288             CMP      R0,R1
   \   0000026A   0xD23B             BCS.N    ??FindCentralLine_15
   \   0000026C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000026E   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   00000272   0x5C38             LDRB     R0,[R7, R0]
   \   00000274   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000276   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   0000027A   0x1879             ADDS     R1,R7,R1
   \   0000027C   0x7A09             LDRB     R1,[R1, #+8]
   \   0000027E   0x1A40             SUBS     R0,R0,R1
   \   00000280   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000284   0xF891 0x1084      LDRB     R1,[R1, #+132]
   \   00000288   0x4288             CMP      R0,R1
   \   0000028A   0xDB2B             BLT.N    ??FindCentralLine_15
   \   0000028C   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   00000290   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   00000294   0x.... 0x....      BL       __aeabi_ui2d
   \   00000298   0x.... 0x....      LDR.W    R2,??DataTable3_2  ;; 0x9999999a
   \   0000029C   0x.... 0x....      LDR.W    R3,??DataTable3_3  ;; 0x3fc99999
   \   000002A0   0x.... 0x....      BL       __aeabi_dmul
   \   000002A4   0x0002             MOVS     R2,R0
   \   000002A6   0x000B             MOVS     R3,R1
   \   000002A8   0x0014             MOVS     R4,R2
   \   000002AA   0x001D             MOVS     R5,R3
   \   000002AC   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002AE   0x.... 0x....      LDR.W    R0,??DataTable3_1
   \   000002B2   0x5C38             LDRB     R0,[R7, R0]
   \   000002B4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000002B6   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   000002BA   0x1879             ADDS     R1,R7,R1
   \   000002BC   0x7A09             LDRB     R1,[R1, #+8]
   \   000002BE   0x1A40             SUBS     R0,R0,R1
   \   000002C0   0x.... 0x....      BL       __aeabi_i2d
   \   000002C4   0x0022             MOVS     R2,R4
   \   000002C6   0x002B             MOVS     R3,R5
   \   000002C8   0x.... 0x....      BL       __aeabi_cdrcmple
   \   000002CC   0xD80A             BHI.N    ??FindCentralLine_15
    257                      {
    258                          Trk.right1[Trk.currentRight1] = Temp+CCD1ScanWidth;
   \   000002CE   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000002D2   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   000002D6   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000002DA   0x1840             ADDS     R0,R0,R1
   \   000002DC   0xF117 0x0108      ADDS     R1,R7,#+8
   \   000002E0   0xF880 0x10CE      STRB     R1,[R0, #+206]
    259                          
    260                          //Trk.RightJumpVarStack[IndexBeManyest] = CCD1.img[Temp]-CCD1.img[Temp+CCD1ScanWidth];
    261                          //IndexBeManyest ++;
    262                          
    263                      }      
    264                      Temp++;
   \                     ??FindCentralLine_15: (+1)
   \   000002E4   0x1C7F             ADDS     R7,R7,#+1
    265                  }
   \   000002E6   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??FindCentralLine_13: (+1)
   \   000002EA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002EE   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000002F0   0x45B0             CMP      R8,R6
   \   000002F2   0xD20A             BCS.N    ??FindCentralLine_10
   \   000002F4   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000002F8   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   000002FC   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000300   0x1840             ADDS     R0,R0,R1
   \   00000302   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   00000306   0x28FF             CMP      R0,#+255
   \   00000308   0xD0A5             BEQ.N    ??FindCentralLine_14
    266                  //Trk.RightMaxIndex = IndexBeManyest;
    267              }
    268              
    269              // 跳变阈值出现统计（）
    270              /*
    271              uint8 LoopForSaveJump = 0;
    272              Trk.LeftMinJump = 255;
    273              Trk.LeftMaxJump = 0;
    274              // 统计左侧
    275              for ( LoopForSaveJump = 0;LoopForSaveJump < Trk.LeftMaxIndex; LoopForSaveJump++ )
    276              {
    277                  if ( Trk.LeftJumpVarStack[LoopForSaveJump] > Trk.LeftMaxJump ){Trk.LeftMaxJump = Trk.LeftJumpVarStack[LoopForSaveJump];};
    278                  if ( Trk.LeftJumpVarStack[LoopForSaveJump] < Trk.LeftMinJump ){Trk.LeftMinJump = Trk.LeftJumpVarStack[LoopForSaveJump];};
    279              }
    280              // 统计右侧
    281              Trk.RightMinJump = 255;
    282              Trk.RightMaxJump = 0;
    283              for ( LoopForSaveJump = 0;LoopForSaveJump < Trk.RightMaxIndex; LoopForSaveJump++ )
    284              {
    285                  if ( Trk.RightJumpVarStack[LoopForSaveJump] > Trk.RightMaxJump ){Trk.RightMaxJump = Trk.RightJumpVarStack[LoopForSaveJump];};
    286                  if ( Trk.RightJumpVarStack[LoopForSaveJump] < Trk.RightMinJump ){Trk.RightMinJump = Trk.RightJumpVarStack[LoopForSaveJump];};
    287              }
    288              */
    289              //*****************************************************************************************
    290              //-----------------------------------------------------------------------------------------
    291              //----------------------所有CCD1图像边沿提取完毕，开始计算CCD1中线位置---------------------
    292              //-----------------------------------------------------------------------------------------
    293              //*****************************************************************************************
    294              if(Trk.currentCen1 == maxRAMSaveNum - 1)
   \                     ??FindCentralLine_10: (+1)
   \   0000030A   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000030E   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000312   0x28C7             CMP      R0,#+199
   \   00000314   0xD105             BNE.N    ??FindCentralLine_16
    295              {
    296                  Trk.currentCen1 = 0;
   \   00000316   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000031A   0x2100             MOVS     R1,#+0
   \   0000031C   0xF8A0 0x132A      STRH     R1,[R0, #+810]
   \   00000320   0xE008             B.N      ??FindCentralLine_17
    297              }
    298              else
    299              {
    300                  Trk.currentCen1 ++;
   \                     ??FindCentralLine_16: (+1)
   \   00000322   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000326   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000032A   0x1C40             ADDS     R0,R0,#+1
   \   0000032C   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000330   0xF8A1 0x032A      STRH     R0,[R1, #+810]
    301              }  
    302              if(Trk.left1[Trk.currentLeft1]!=255 && Trk.right1[Trk.currentRight1]!=255) //CCD1双边都存在
   \                     ??FindCentralLine_17: (+1)
   \   00000334   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000338   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   0000033C   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000340   0x1840             ADDS     R0,R0,R1
   \   00000342   0x7840             LDRB     R0,[R0, #+1]
   \   00000344   0x28FF             CMP      R0,#+255
   \   00000346   0xD055             BEQ.N    ??FindCentralLine_18
   \   00000348   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000034C   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   00000350   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000354   0x1840             ADDS     R0,R0,R1
   \   00000356   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   0000035A   0x28FF             CMP      R0,#+255
   \   0000035C   0xD04A             BEQ.N    ??FindCentralLine_18
    303              {
    304                  Trk.cen1[Trk.currentCen1] = (Trk.left1[Trk.currentLeft1] + Trk.right1[Trk.currentRight1])/2 + 937;//计算CCD1中线位置
   \   0000035E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000362   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000366   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000036A   0x1840             ADDS     R0,R0,R1
   \   0000036C   0x7840             LDRB     R0,[R0, #+1]
   \   0000036E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000372   0xF8B1 0x1196      LDRH     R1,[R1, #+406]
   \   00000376   0x.... 0x....      LDR.W    R2,??DataTable3
   \   0000037A   0x1889             ADDS     R1,R1,R2
   \   0000037C   0xF891 0x10CE      LDRB     R1,[R1, #+206]
   \   00000380   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   00000384   0x2102             MOVS     R1,#+2
   \   00000386   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000038A   0xF200 0x30A9      ADDW     R0,R0,#+937
   \   0000038E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000392   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   00000396   0x.... 0x....      LDR.W    R2,??DataTable3
   \   0000039A   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   0000039E   0xF8A1 0x019A      STRH     R0,[R1, #+410]
    305                  Trk.RoadBlockLastWidth1 = Trk.Width1;//记录上一次赛道宽度
   \   000003A2   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000003A6   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000003AA   0xF891 0x132E      LDRB     R1,[R1, #+814]
   \   000003AE   0xF880 0x16C5      STRB     R1,[R0, #+1733]
    306                  Trk.Width1 = Trk.right1[Trk.currentRight1] - Trk.left1[Trk.currentLeft1];//计算赛道宽度
   \   000003B2   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000003B6   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   000003BA   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000003BE   0x1840             ADDS     R0,R0,R1
   \   000003C0   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   000003C4   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000003C8   0xF8B1 0x10CA      LDRH     R1,[R1, #+202]
   \   000003CC   0x.... 0x....      LDR.W    R2,??DataTable3
   \   000003D0   0x1889             ADDS     R1,R1,R2
   \   000003D2   0x7849             LDRB     R1,[R1, #+1]
   \   000003D4   0x1A40             SUBS     R0,R0,R1
   \   000003D6   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000003DA   0xF881 0x032E      STRB     R0,[R1, #+814]
    307                  Trk.AllDark1 = 0;//清0全黑标志
   \   000003DE   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000003E2   0x2100             MOVS     R1,#+0
   \   000003E4   0xF880 0x132F      STRB     R1,[R0, #+815]
    308                  Trk.BackCen1 = 0;//清0回正标志
   \   000003E8   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000003EC   0x2100             MOVS     R1,#+0
   \   000003EE   0xF880 0x1330      STRB     R1,[R0, #+816]
   \   000003F2   0xE1A8             B.N      ??FindCentralLine_19
    309              }
    310              else if(Trk.left1[Trk.currentLeft1]!=255 && Trk.right1[Trk.currentRight1]==255) //CCD1只存在左边
   \                     ??FindCentralLine_18: (+1)
   \   000003F4   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000003F8   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   000003FC   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000400   0x1840             ADDS     R0,R0,R1
   \   00000402   0x7840             LDRB     R0,[R0, #+1]
   \   00000404   0x28FF             CMP      R0,#+255
   \   00000406   0xD074             BEQ.N    ??FindCentralLine_20
   \   00000408   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000040C   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   00000410   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000414   0x1840             ADDS     R0,R0,R1
   \   00000416   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   0000041A   0x28FF             CMP      R0,#+255
   \   0000041C   0xD169             BNE.N    ??FindCentralLine_20
    311              { 
    312                  //中线位置=左边+坐标系转换偏移量+赛道宽度/2
    313                  //Trk.cen1[Trk.currentCen1] = Trk.left1[Trk.currentLeft1] + 937 + Trk.Width1/2;
    314                  Trk.cen1[Trk.currentCen1] = Trk.left1[Trk.currentLeft1] + 937 + CCD1CurveTrkWidth/2;
   \   0000041E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000422   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000426   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000042A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000042E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000432   0xF8B1 0x10CA      LDRH     R1,[R1, #+202]
   \   00000436   0x.... 0x....      LDR.W    R2,??DataTable3
   \   0000043A   0x1889             ADDS     R1,R1,R2
   \   0000043C   0x7849             LDRB     R1,[R1, #+1]
   \   0000043E   0xF201 0x31CF      ADDW     R1,R1,#+975
   \   00000442   0xF8A0 0x119A      STRH     R1,[R0, #+410]
    315                  if(Trk.cen1[Trk.currentCen1] > 1200)
   \   00000446   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000044A   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000044E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000452   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000456   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   0000045A   0xF5B0 0x6F96      CMP      R0,#+1200
   \   0000045E   0xDD0B             BLE.N    ??FindCentralLine_21
    316                  {
    317                      Trk.cen1[Trk.currentCen1] = 1200;
   \   00000460   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000464   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000468   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000046C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000470   0xF44F 0x6196      MOV      R1,#+1200
   \   00000474   0xF8A0 0x119A      STRH     R1,[R0, #+410]
    318                  }//防止越界
    319                  if(Trk.cen1[Trk.currentCen1] < 1000 + CCD1AllDarkThreshold)
   \                     ??FindCentralLine_21: (+1)
   \   00000478   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000047C   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000480   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000484   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000488   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   0000048C   0xF240 0x4106      MOVW     R1,#+1030
   \   00000490   0x4288             CMP      R0,R1
   \   00000492   0xDA05             BGE.N    ??FindCentralLine_22
    320                  {
    321                      Trk.AllDark1 = 0;
   \   00000494   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000498   0x2100             MOVS     R1,#+0
   \   0000049A   0xF880 0x132F      STRB     R1,[R0, #+815]
   \   0000049E   0xE004             B.N      ??FindCentralLine_23
    322                  }//中线位置超过阈值判断为全白
    323                  else
    324                  {
    325                      Trk.AllDark1 = 1;
   \                     ??FindCentralLine_22: (+1)
   \   000004A0   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000004A4   0x2101             MOVS     R1,#+1
   \   000004A6   0xF880 0x132F      STRB     R1,[R0, #+815]
    326                  }
    327                  //本来右边应该存在，但是实际上不存在，说明很可能是十字误判
    328                  //if(Trk.left1[Trk.currentLeft1] < 127 - Trk.Width1 - CCD1illegalArea)
    329                  if(Trk.left1[Trk.currentLeft1] < 127 - CCD1CurveTrkWidth - CCD1illegalArea)
   \                     ??FindCentralLine_23: (+1)
   \   000004AA   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000004AE   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   000004B2   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000004B6   0x1840             ADDS     R0,R0,R1
   \   000004B8   0x7840             LDRB     R0,[R0, #+1]
   \   000004BA   0x2829             CMP      R0,#+41
   \   000004BC   0xDA13             BGE.N    ??FindCentralLine_24
    330                  {
    331                      Trk.cen1[Trk.currentCen1] = Trk.cen1[Trk.lastCen1];//保持上次打角
   \   000004BE   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000004C2   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000004C6   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000004CA   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000004CE   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000004D2   0xF8B1 0x132C      LDRH     R1,[R1, #+812]
   \   000004D6   0x.... 0x....      LDR.W    R2,??DataTable3
   \   000004DA   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000004DE   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   000004E2   0xF8A0 0x119A      STRH     R1,[R0, #+410]
    332                  }
    333                  Trk.BackCen1 = 0;//清0回正标志
   \                     ??FindCentralLine_24: (+1)
   \   000004E6   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000004EA   0x2100             MOVS     R1,#+0
   \   000004EC   0xF880 0x1330      STRB     R1,[R0, #+816]
   \   000004F0   0xE129             B.N      ??FindCentralLine_19
    334              }
    335              else if(Trk.left1[Trk.currentLeft1]==255 && Trk.right1[Trk.currentRight1]!=255) //CCD1只存在右边
   \                     ??FindCentralLine_20: (+1)
   \   000004F2   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000004F6   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   000004FA   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000004FE   0x1840             ADDS     R0,R0,R1
   \   00000500   0x7840             LDRB     R0,[R0, #+1]
   \   00000502   0x28FF             CMP      R0,#+255
   \   00000504   0xD175             BNE.N    ??FindCentralLine_25
   \   00000506   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000050A   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   0000050E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000512   0x1840             ADDS     R0,R0,R1
   \   00000514   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   00000518   0x28FF             CMP      R0,#+255
   \   0000051A   0xD06A             BEQ.N    ??FindCentralLine_25
    336              {
    337                  //中线位置=右边+坐标系转换偏移量-赛道宽度/2
    338                  //Trk.cen1[Trk.currentCen1] = Trk.right1[Trk.currentRight1] + 937 - Trk.Width1/2;
    339                  Trk.cen1[Trk.currentCen1] = Trk.right1[Trk.currentRight1] + 937 - CCD1CurveTrkWidth/2;
   \   0000051C   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000520   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000524   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000528   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000052C   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000530   0xF8B1 0x1196      LDRH     R1,[R1, #+406]
   \   00000534   0x.... 0x....      LDR.W    R2,??DataTable3
   \   00000538   0x1889             ADDS     R1,R1,R2
   \   0000053A   0xF891 0x10CE      LDRB     R1,[R1, #+206]
   \   0000053E   0xF201 0x3183      ADDW     R1,R1,#+899
   \   00000542   0xF8A0 0x119A      STRH     R1,[R0, #+410]
    340                  if(Trk.cen1[Trk.currentCen1] > 1200)
   \   00000546   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000054A   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000054E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000552   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000556   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   0000055A   0xF5B0 0x6F96      CMP      R0,#+1200
   \   0000055E   0xDD0A             BLE.N    ??FindCentralLine_26
    341                  {
    342                      Trk.cen1[Trk.currentCen1] = 0;
   \   00000560   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000564   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000568   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000056C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000570   0x2100             MOVS     R1,#+0
   \   00000572   0xF8A0 0x119A      STRH     R1,[R0, #+410]
    343                  }//防止越界
    344                  
    345          
    346                  if(Trk.cen1[Trk.currentCen1] > 1000 - CCD1AllDarkThreshold)
   \                     ??FindCentralLine_26: (+1)
   \   00000576   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000057A   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000057E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000582   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000586   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   0000058A   0xF240 0x31CB      MOVW     R1,#+971
   \   0000058E   0x4288             CMP      R0,R1
   \   00000590   0xDB05             BLT.N    ??FindCentralLine_27
    347                  {
    348                      Trk.AllDark1 = 0;
   \   00000592   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000596   0x2100             MOVS     R1,#+0
   \   00000598   0xF880 0x132F      STRB     R1,[R0, #+815]
   \   0000059C   0xE004             B.N      ??FindCentralLine_28
    349                  }//中线位置超过阈值判断为全白
    350                  else
    351                  {
    352                      Trk.AllDark1 = 1;
   \                     ??FindCentralLine_27: (+1)
   \   0000059E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000005A2   0x2101             MOVS     R1,#+1
   \   000005A4   0xF880 0x132F      STRB     R1,[R0, #+815]
    353                  }
    354                  //
    355                  
    356                  
    357                  
    358                  //本来左边应该存在，但是实际上不存在，说明很可能是十字误判
    359                  //if(Trk.right1[Trk.currentRight1] > Trk.Width1 + CCD1illegalArea)
    360                  if(Trk.right1[Trk.currentRight1] > CCD1CurveTrkWidth + CCD1illegalArea)
   \                     ??FindCentralLine_28: (+1)
   \   000005A8   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000005AC   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   000005B0   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000005B4   0x1840             ADDS     R0,R0,R1
   \   000005B6   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   000005BA   0x2857             CMP      R0,#+87
   \   000005BC   0xDB13             BLT.N    ??FindCentralLine_29
    361                  {
    362                      Trk.cen1[Trk.currentCen1] = Trk.cen1[Trk.lastCen1];//保持上次打角
   \   000005BE   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000005C2   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000005C6   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000005CA   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000005CE   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000005D2   0xF8B1 0x132C      LDRH     R1,[R1, #+812]
   \   000005D6   0x.... 0x....      LDR.W    R2,??DataTable3
   \   000005DA   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000005DE   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   000005E2   0xF8A0 0x119A      STRH     R1,[R0, #+410]
    363                  }
    364                  Trk.BackCen1 = 0;//清0回正标志
   \                     ??FindCentralLine_29: (+1)
   \   000005E6   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000005EA   0x2100             MOVS     R1,#+0
   \   000005EC   0xF880 0x1330      STRB     R1,[R0, #+816]
   \   000005F0   0xE0A9             B.N      ??FindCentralLine_19
    365              }
    366              else//CCD1双边都不存在
    367              {
    368                  if(Trk.AllDark1 == 1)
   \                     ??FindCentralLine_25: (+1)
   \   000005F2   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000005F6   0xF890 0x032F      LDRB     R0,[R0, #+815]
   \   000005FA   0x2801             CMP      R0,#+1
   \   000005FC   0xD114             BNE.N    ??FindCentralLine_30
    369                  {
    370                      Trk.cen1[Trk.currentCen1] = Trk.cen1[Trk.lastCen1];
   \   000005FE   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000602   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000606   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000060A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000060E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000612   0xF8B1 0x132C      LDRH     R1,[R1, #+812]
   \   00000616   0x.... 0x....      LDR.W    R2,??DataTable3
   \   0000061A   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   0000061E   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   00000622   0xF8A0 0x119A      STRH     R1,[R0, #+410]
   \   00000626   0xE08E             B.N      ??FindCentralLine_19
    371                  }//若全黑标志为1，保持上次打角
    372                  else if(Trk.BackCen1 == 0)//若回正标志为0
   \                     ??FindCentralLine_30: (+1)
   \   00000628   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000062C   0xF890 0x0330      LDRB     R0,[R0, #+816]
   \   00000630   0x2800             CMP      R0,#+0
   \   00000632   0xD12E             BNE.N    ??FindCentralLine_31
    373                  {
    374                      Trk.BackCen1 = 1;Trk.BackCenRoad1 = Con.TotalRoad;Trk.BcakCenCen1 = Trk.cen1[Trk.lastCen1];//置1回正标志，记录回正开始的变量
   \   00000634   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000638   0x2101             MOVS     R1,#+1
   \   0000063A   0xF880 0x1330      STRB     R1,[R0, #+816]
   \   0000063E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000642   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000646   0x6849             LDR      R1,[R1, #+4]
   \   00000648   0xF8C0 0x1334      STR      R1,[R0, #+820]
   \   0000064C   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000650   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   00000654   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000658   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000065C   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000660   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000664   0xF8A1 0x0338      STRH     R0,[R1, #+824]
    375                      Trk.cen1[Trk.currentCen1] = Trk.cen1[Trk.lastCen1];//保持上次打角    
   \   00000668   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000066C   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000670   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000674   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000678   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000067C   0xF8B1 0x132C      LDRH     R1,[R1, #+812]
   \   00000680   0x.... 0x....      LDR.W    R2,??DataTable3
   \   00000684   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000688   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   0000068C   0xF8A0 0x119A      STRH     R1,[R0, #+410]
   \   00000690   0xE059             B.N      ??FindCentralLine_19
    376                  }
    377                  else//处于回正状态
    378                  {
    379                      Trk.BackCen1 = 1;//置1回正标志
   \                     ??FindCentralLine_31: (+1)
   \   00000692   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000696   0x2101             MOVS     R1,#+1
   \   00000698   0xF880 0x1330      STRB     R1,[R0, #+816]
    380                      //下面计算回正过程中的中心坐标
    381                      float _float_temp1,_float_temp2;
    382                      _float_temp1 = Con.TotalRoad - Trk.BackCenRoad1;
   \   0000069C   0x.... 0x....      LDR.W    R0,??DataTable3_4
   \   000006A0   0x6840             LDR      R0,[R0, #+4]
   \   000006A2   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000006A6   0xF8D1 0x1334      LDR      R1,[R1, #+820]
   \   000006AA   0x1A40             SUBS     R0,R0,R1
   \   000006AC   0x.... 0x....      BL       __aeabi_ui2f
   \   000006B0   0x0004             MOVS     R4,R0
    383                      
    384                      
    385                      if(_float_temp1> CCD1BackCenRoad)
   \   000006B2   0x0020             MOVS     R0,R4
   \   000006B4   0x.... 0x....      LDR.W    R1,??DataTable3_5  ;; 0x457a0001
   \   000006B8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000006BC   0xD801             BHI.N    ??FindCentralLine_32
    386                      {
    387                          _float_temp1 = CCD1BackCenRoad;
   \   000006BE   0x.... 0x....      LDR.W    R4,??DataTable3_6  ;; 0x457a0000
    388                      }
    389                      _float_temp1 = _float_temp1/CCD1BackCenRoad;
   \                     ??FindCentralLine_32: (+1)
   \   000006C2   0x0020             MOVS     R0,R4
   \   000006C4   0x.... 0x....      LDR.W    R1,??DataTable3_6  ;; 0x457a0000
   \   000006C8   0x.... 0x....      BL       __aeabi_fdiv
   \   000006CC   0x0004             MOVS     R4,R0
    390                      _float_temp1 = 1- _float_temp1;
   \   000006CE   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000006D2   0x0021             MOVS     R1,R4
   \   000006D4   0x.... 0x....      BL       __aeabi_fsub
   \   000006D8   0x0004             MOVS     R4,R0
    391                      
    392                      
    393                      if(Trk.BcakCenCen1 >= 1000)
   \   000006DA   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000006DE   0xF8B0 0x0338      LDRH     R0,[R0, #+824]
   \   000006E2   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000006E6   0xDB10             BLT.N    ??FindCentralLine_33
    394                      {
    395                          _float_temp2 = Trk.BcakCenCen1 - 1000;
   \   000006E8   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000006EC   0xF8B0 0x0338      LDRH     R0,[R0, #+824]
   \   000006F0   0xF5B0 0x707A      SUBS     R0,R0,#+1000
   \   000006F4   0x.... 0x....      BL       __aeabi_i2f
    396                          _float_temp1 = 1000 + _float_temp1 * _float_temp2;
   \   000006F8   0x0021             MOVS     R1,R4
   \   000006FA   0x.... 0x....      BL       __aeabi_fmul
   \   000006FE   0x.... 0x....      LDR.W    R1,??DataTable3_7  ;; 0x447a0000
   \   00000702   0x.... 0x....      BL       __aeabi_fadd
   \   00000706   0x0004             MOVS     R4,R0
   \   00000708   0xE010             B.N      ??FindCentralLine_34
    397                      }
    398                      else
    399                      {
    400                          _float_temp2 = 1000 - Trk.BcakCenCen1;
   \                     ??FindCentralLine_33: (+1)
   \   0000070A   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000070E   0xF8B0 0x0338      LDRH     R0,[R0, #+824]
   \   00000712   0xF5D0 0x707A      RSBS     R0,R0,#+1000
   \   00000716   0x.... 0x....      BL       __aeabi_i2f
    401                          _float_temp1 = 1000 - _float_temp1 * _float_temp2;
   \   0000071A   0x0021             MOVS     R1,R4
   \   0000071C   0x.... 0x....      BL       __aeabi_fmul
   \   00000720   0x0001             MOVS     R1,R0
   \   00000722   0x.... 0x....      LDR.W    R0,??DataTable3_7  ;; 0x447a0000
   \   00000726   0x.... 0x....      BL       __aeabi_fsub
   \   0000072A   0x0004             MOVS     R4,R0
    402                      }
    403                      
    404                      
    405                      Trk.cen1[Trk.currentCen1] = (uint16)_float_temp1;    
   \                     ??FindCentralLine_34: (+1)
   \   0000072C   0x0020             MOVS     R0,R4
   \   0000072E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000732   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000736   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   0000073A   0x.... 0x....      LDR.W    R2,??DataTable3
   \   0000073E   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000742   0xF8A1 0x019A      STRH     R0,[R1, #+410]
    406                  }
    407              }
    408            //*****************************************************************************************
    409            //-----------------------------------------------------------------------------------------
    410            //-------------------------------------提取CCD2左右黑边------------------------------------
    411            //-----------------------------------------------------------------------------------------
    412            //*****************************************************************************************
    413            Trk.lastCen2 = Trk.currentCen2;//暂存上一次的下标
   \                     ??FindCentralLine_19: (+1)
   \   00000746   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000074A   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000074E   0xF8B1 0x166A      LDRH     R1,[R1, #+1642]
   \   00000752   0xF8A0 0x166C      STRH     R1,[R0, #+1644]
    414            Trk.lastLeft2 = Trk.currentLeft2;
   \   00000756   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000075A   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000075E   0xF8B1 0x140A      LDRH     R1,[R1, #+1034]
   \   00000762   0xF8A0 0x140C      STRH     R1,[R0, #+1036]
    415            if(Trk.currentLeft2 == maxRAMSaveNum - 1){Trk.currentLeft2 = 0;}else{Trk.currentLeft2 ++;} 
   \   00000766   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000076A   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   0000076E   0x28C7             CMP      R0,#+199
   \   00000770   0xD105             BNE.N    ??FindCentralLine_35
   \   00000772   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000776   0x2100             MOVS     R1,#+0
   \   00000778   0xF8A0 0x140A      STRH     R1,[R0, #+1034]
   \   0000077C   0xE008             B.N      ??FindCentralLine_36
   \                     ??FindCentralLine_35: (+1)
   \   0000077E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000782   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000786   0x1C40             ADDS     R0,R0,#+1
   \   00000788   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000078C   0xF8A1 0x040A      STRH     R0,[R1, #+1034]
    416            Trk.left2[Trk.currentLeft2] = 255;//扫描前先初始化当前边沿不存在  
   \                     ??FindCentralLine_36: (+1)
   \   00000790   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000794   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000798   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000079C   0x1840             ADDS     R0,R0,R1
   \   0000079E   0x21FF             MOVS     R1,#+255
   \   000007A0   0xF880 0x1342      STRB     R1,[R0, #+834]
    417            //若上次的中线不处于CCD2的左视野之外，则可以向左扫描上升沿
    418            if(Trk.cen2[Trk.lastCen2] >= 937 + CCD2illegalArea + CCD2ScanWidth)
   \   000007A4   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000007A8   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   000007AC   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000007B0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000007B4   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000007B8   0xF240 0x31B6      MOVW     R1,#+950
   \   000007BC   0x4288             CMP      R0,R1
   \   000007BE   0xF2C0 0x808C      BLT.W    ??FindCentralLine_37
    419            { uint16 ScanTime,Temp;
    420              if(Trk.cen2[Trk.lastCen2] <= 937 + 127 - CCD2illegalArea)//超出图像边界限幅
   \   000007C2   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000007C6   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   000007CA   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000007CE   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000007D2   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000007D6   0xF240 0x4124      MOVW     R1,#+1060
   \   000007DA   0x4288             CMP      R0,R1
   \   000007DC   0xDA1A             BGE.N    ??FindCentralLine_38
    421              { ScanTime = Trk.cen2[Trk.lastCen2] - 937 - CCD2illegalArea - CCD2ScanWidth + 1;//计算向左扫描次数
   \   000007DE   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000007E2   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   000007E6   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000007EA   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000007EE   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000007F2   0xF240 0x31B5      MOVW     R1,#+949
   \   000007F6   0x1A46             SUBS     R6,R0,R1
    422                Temp = Trk.cen2[Trk.lastCen2] - 937;
   \   000007F8   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000007FC   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   00000800   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000804   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000808   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000080C   0xF240 0x31A9      MOVW     R1,#+937
   \   00000810   0x1A47             SUBS     R7,R0,R1
   \   00000812   0xE001             B.N      ??FindCentralLine_39
    423              }
    424              else
    425              { ScanTime = 127 - 2*CCD2illegalArea - CCD2ScanWidth + 1;//计算向左扫描次数
   \                     ??FindCentralLine_38: (+1)
   \   00000814   0x266E             MOVS     R6,#+110
    426                Temp = 127 - CCD2illegalArea;
   \   00000816   0x277A             MOVS     R7,#+122
    427              }
    428              //依次从中线向左扫描，直到扫描出上升沿或者达到扫描次数
    429              for(uint8 i = 0;i<ScanTime&&Trk.left2[Trk.currentLeft2]==255;i++)
   \                     ??FindCentralLine_39: (+1)
   \   00000818   0xF05F 0x0800      MOVS     R8,#+0
   \   0000081C   0xE04C             B.N      ??FindCentralLine_40
    430              { //跳变检测的条件是：相隔CCD2ScanWidth的两个点之差大于阈值，也大于CCD整场图像平均值的0.2倍
    431                if(CCD2.img[Temp]>CCD2.img[Temp-CCD2ScanWidth] && CCD2.img[Temp]-CCD2.img[Temp-CCD2ScanWidth]>=CCD2.threshold && CCD2.img[Temp]-CCD2.img[Temp-CCD2ScanWidth]>=CCD2.aver*0.2)
   \                     ??FindCentralLine_41: (+1)
   \   0000081E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000820   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   00000824   0x1838             ADDS     R0,R7,R0
   \   00000826   0xF810 0x0C08      LDRB     R0,[R0, #-8]
   \   0000082A   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000082C   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   00000830   0x5C79             LDRB     R1,[R7, R1]
   \   00000832   0x4288             CMP      R0,R1
   \   00000834   0xD23D             BCS.N    ??FindCentralLine_42
   \   00000836   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000838   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   0000083C   0x5C38             LDRB     R0,[R7, R0]
   \   0000083E   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000840   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   00000844   0x1879             ADDS     R1,R7,R1
   \   00000846   0xF811 0x1C08      LDRB     R1,[R1, #-8]
   \   0000084A   0x1A40             SUBS     R0,R0,R1
   \   0000084C   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   00000850   0xF891 0x1084      LDRB     R1,[R1, #+132]
   \   00000854   0x4288             CMP      R0,R1
   \   00000856   0xDB2C             BLT.N    ??FindCentralLine_42
   \   00000858   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   0000085C   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   00000860   0x.... 0x....      BL       __aeabi_ui2d
   \   00000864   0x.... 0x....      LDR.W    R2,??DataTable3_2  ;; 0x9999999a
   \   00000868   0x.... 0x....      LDR.W    R3,??DataTable3_3  ;; 0x3fc99999
   \   0000086C   0x.... 0x....      BL       __aeabi_dmul
   \   00000870   0x0002             MOVS     R2,R0
   \   00000872   0x000B             MOVS     R3,R1
   \   00000874   0x0014             MOVS     R4,R2
   \   00000876   0x001D             MOVS     R5,R3
   \   00000878   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   0000087A   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   0000087E   0x5C38             LDRB     R0,[R7, R0]
   \   00000880   0xB2BF             UXTH     R7,R7            ;; ZeroExt  R7,R7,#+16,#+16
   \   00000882   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   00000886   0x1879             ADDS     R1,R7,R1
   \   00000888   0xF811 0x1C08      LDRB     R1,[R1, #-8]
   \   0000088C   0x1A40             SUBS     R0,R0,R1
   \   0000088E   0x.... 0x....      BL       __aeabi_i2d
   \   00000892   0x0022             MOVS     R2,R4
   \   00000894   0x002B             MOVS     R3,R5
   \   00000896   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000089A   0xD80A             BHI.N    ??FindCentralLine_42
    432                {  Trk.left2[Trk.currentLeft2] = Temp-CCD2ScanWidth;}
   \   0000089C   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000008A0   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   000008A4   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000008A8   0x1840             ADDS     R0,R0,R1
   \   000008AA   0x0039             MOVS     R1,R7
   \   000008AC   0x3908             SUBS     R1,R1,#+8
   \   000008AE   0xF880 0x1342      STRB     R1,[R0, #+834]
    433                Temp--;
   \                     ??FindCentralLine_42: (+1)
   \   000008B2   0x1E7F             SUBS     R7,R7,#+1
    434              }
   \   000008B4   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??FindCentralLine_40: (+1)
   \   000008B8   0x4640             MOV      R0,R8
   \   000008BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000008BC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000008BE   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000008C0   0x42B0             CMP      R0,R6
   \   000008C2   0xD20A             BCS.N    ??FindCentralLine_37
   \   000008C4   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000008C8   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   000008CC   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000008D0   0x1840             ADDS     R0,R0,R1
   \   000008D2   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   000008D6   0x28FF             CMP      R0,#+255
   \   000008D8   0xD0A1             BEQ.N    ??FindCentralLine_41
    435            }
    436            Trk.lastRight2 = Trk.currentRight2;
   \                     ??FindCentralLine_37: (+1)
   \   000008DA   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000008DE   0x.... 0x....      LDR.W    R1,??DataTable3
   \   000008E2   0xF8B1 0x14D6      LDRH     R1,[R1, #+1238]
   \   000008E6   0xF8A0 0x14D8      STRH     R1,[R0, #+1240]
    437            if(Trk.currentRight2 == maxRAMSaveNum - 1){Trk.currentRight2 = 0;}else{Trk.currentRight2 ++;}
   \   000008EA   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000008EE   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   000008F2   0x28C7             CMP      R0,#+199
   \   000008F4   0xD105             BNE.N    ??FindCentralLine_43
   \   000008F6   0x.... 0x....      LDR.W    R0,??DataTable3
   \   000008FA   0x2100             MOVS     R1,#+0
   \   000008FC   0xF8A0 0x14D6      STRH     R1,[R0, #+1238]
   \   00000900   0xE008             B.N      ??FindCentralLine_44
   \                     ??FindCentralLine_43: (+1)
   \   00000902   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000906   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   0000090A   0x1C40             ADDS     R0,R0,#+1
   \   0000090C   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000910   0xF8A1 0x04D6      STRH     R0,[R1, #+1238]
    438            Trk.right2[Trk.currentRight2] = 255;//扫描前先初始化当前边沿不存在
   \                     ??FindCentralLine_44: (+1)
   \   00000914   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000918   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   0000091C   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000920   0x1840             ADDS     R0,R0,R1
   \   00000922   0x21FF             MOVS     R1,#+255
   \   00000924   0xF880 0x140E      STRB     R1,[R0, #+1038]
    439            //若上次的中线不处于CCD2的右视野之外，则可以向右扫描下降沿
    440            if(Trk.cen2[Trk.lastCen2] <= 937 + 127 - CCD2illegalArea - CCD2ScanWidth)
   \   00000928   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000092C   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   00000930   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000934   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000938   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000093C   0xF240 0x411C      MOVW     R1,#+1052
   \   00000940   0x4288             CMP      R0,R1
   \   00000942   0xF280 0x8086      BGE.W    ??FindCentralLine_45
    441            { uint8 ScanTime,Temp;
    442              if(Trk.cen2[Trk.lastCen2] >= 937 + CCD2illegalArea)//超出图像边界限幅
   \   00000946   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000094A   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   0000094E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000952   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000956   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000095A   0xF240 0x31AE      MOVW     R1,#+942
   \   0000095E   0x4288             CMP      R0,R1
   \   00000960   0xDB18             BLT.N    ??FindCentralLine_46
    443              { ScanTime = 937 + 127 -Trk.cen2[Trk.lastCen2] - CCD2illegalArea - CCD2ScanWidth + 1;//计算向右扫描次数
   \   00000962   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000966   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   0000096A   0x.... 0x....      LDR.W    R1,??DataTable3
   \   0000096E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000972   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000976   0xF1D0 0x061C      RSBS     R6,R0,#+28
    444                Temp = Trk.cen2[Trk.lastCen2] - 937;
   \   0000097A   0x.... 0x....      LDR.W    R0,??DataTable3
   \   0000097E   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   00000982   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000986   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000098A   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000098E   0xF110 0x0757      ADDS     R7,R0,#+87
   \   00000992   0xE001             B.N      ??FindCentralLine_47
    445              }
    446              else
    447              { ScanTime = 127 - 2*CCD2illegalArea - CCD2ScanWidth + 1;//计算向右扫描次数
   \                     ??FindCentralLine_46: (+1)
   \   00000994   0x266E             MOVS     R6,#+110
    448                Temp = CCD2illegalArea;
   \   00000996   0x2705             MOVS     R7,#+5
    449              }
    450              //依次从中线向右扫描，直到扫描出下降沿或者达到扫描次数
    451              for(uint8 i = 0;i<ScanTime&&Trk.right2[Trk.currentRight2]==255;i++)
   \                     ??FindCentralLine_47: (+1)
   \   00000998   0xF05F 0x0800      MOVS     R8,#+0
   \   0000099C   0xE049             B.N      ??FindCentralLine_48
    452              { //跳变检测的条件是：相隔CCD2ScanWidth的两个点之差大于阈值，也大于CCD整场图像平均值的0.2倍
    453                if(CCD2.img[Temp]>CCD2.img[Temp+CCD2ScanWidth] && CCD2.img[Temp]-CCD2.img[Temp+CCD2ScanWidth]>=CCD2.threshold && CCD2.img[Temp]-CCD2.img[Temp+CCD2ScanWidth]>=CCD2.aver*0.2)
   \                     ??FindCentralLine_49: (+1)
   \   0000099E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000009A0   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   000009A4   0x1838             ADDS     R0,R7,R0
   \   000009A6   0x7A00             LDRB     R0,[R0, #+8]
   \   000009A8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000009AA   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   000009AE   0x5C79             LDRB     R1,[R7, R1]
   \   000009B0   0x4288             CMP      R0,R1
   \   000009B2   0xD23B             BCS.N    ??FindCentralLine_50
   \   000009B4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000009B6   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   000009BA   0x5C38             LDRB     R0,[R7, R0]
   \   000009BC   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000009BE   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   000009C2   0x1879             ADDS     R1,R7,R1
   \   000009C4   0x7A09             LDRB     R1,[R1, #+8]
   \   000009C6   0x1A40             SUBS     R0,R0,R1
   \   000009C8   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   000009CC   0xF891 0x1084      LDRB     R1,[R1, #+132]
   \   000009D0   0x4288             CMP      R0,R1
   \   000009D2   0xDB2B             BLT.N    ??FindCentralLine_50
   \   000009D4   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   000009D8   0xF8B0 0x0082      LDRH     R0,[R0, #+130]
   \   000009DC   0x.... 0x....      BL       __aeabi_ui2d
   \   000009E0   0x.... 0x....      LDR.W    R2,??DataTable3_2  ;; 0x9999999a
   \   000009E4   0x.... 0x....      LDR.W    R3,??DataTable3_3  ;; 0x3fc99999
   \   000009E8   0x.... 0x....      BL       __aeabi_dmul
   \   000009EC   0x0002             MOVS     R2,R0
   \   000009EE   0x000B             MOVS     R3,R1
   \   000009F0   0x0014             MOVS     R4,R2
   \   000009F2   0x001D             MOVS     R5,R3
   \   000009F4   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000009F6   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   000009FA   0x5C38             LDRB     R0,[R7, R0]
   \   000009FC   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000009FE   0x.... 0x....      LDR.W    R1,??DataTable3_8
   \   00000A02   0x1879             ADDS     R1,R7,R1
   \   00000A04   0x7A09             LDRB     R1,[R1, #+8]
   \   00000A06   0x1A40             SUBS     R0,R0,R1
   \   00000A08   0x.... 0x....      BL       __aeabi_i2d
   \   00000A0C   0x0022             MOVS     R2,R4
   \   00000A0E   0x002B             MOVS     R3,R5
   \   00000A10   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000A14   0xD80A             BHI.N    ??FindCentralLine_50
    454                {  Trk.right2[Trk.currentRight2] = Temp+CCD2ScanWidth;}      
   \   00000A16   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000A1A   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000A1E   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000A22   0x1840             ADDS     R0,R0,R1
   \   00000A24   0xF117 0x0108      ADDS     R1,R7,#+8
   \   00000A28   0xF880 0x140E      STRB     R1,[R0, #+1038]
    455                Temp++;
   \                     ??FindCentralLine_50: (+1)
   \   00000A2C   0x1C7F             ADDS     R7,R7,#+1
    456              }
   \   00000A2E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??FindCentralLine_48: (+1)
   \   00000A32   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000A36   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000A38   0x45B0             CMP      R8,R6
   \   00000A3A   0xD20A             BCS.N    ??FindCentralLine_45
   \   00000A3C   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000A40   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000A44   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000A48   0x1840             ADDS     R0,R0,R1
   \   00000A4A   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000A4E   0x28FF             CMP      R0,#+255
   \   00000A50   0xD0A5             BEQ.N    ??FindCentralLine_49
    457            }
    458          
    459            //*****************************************************************************************
    460            //-----------------------------------------------------------------------------------------
    461            //----------------------所有CCD2图像边沿提取完毕，开始计算CCD2中线位置---------------------
    462            //-----------------------------------------------------------------------------------------
    463            //*****************************************************************************************
    464            if(Trk.currentCen2 == maxRAMSaveNum - 1){Trk.currentCen2 = 0;}else{Trk.currentCen2 ++;}  
   \                     ??FindCentralLine_45: (+1)
   \   00000A52   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000A56   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000A5A   0x28C7             CMP      R0,#+199
   \   00000A5C   0xD105             BNE.N    ??FindCentralLine_51
   \   00000A5E   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000A62   0x2100             MOVS     R1,#+0
   \   00000A64   0xF8A0 0x166A      STRH     R1,[R0, #+1642]
   \   00000A68   0xE008             B.N      ??FindCentralLine_52
   \                     ??FindCentralLine_51: (+1)
   \   00000A6A   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000A6E   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000A72   0x1C40             ADDS     R0,R0,#+1
   \   00000A74   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000A78   0xF8A1 0x066A      STRH     R0,[R1, #+1642]
    465            if(Trk.left2[Trk.currentLeft2]!=255 && Trk.right2[Trk.currentRight2]!=255) //CCD2双边都存在
   \                     ??FindCentralLine_52: (+1)
   \   00000A7C   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000A80   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000A84   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000A88   0x1840             ADDS     R0,R0,R1
   \   00000A8A   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000A8E   0x28FF             CMP      R0,#+255
   \   00000A90   0xD04E             BEQ.N    ??FindCentralLine_53
   \   00000A92   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000A96   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000A9A   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000A9E   0x1840             ADDS     R0,R0,R1
   \   00000AA0   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000AA4   0x28FF             CMP      R0,#+255
   \   00000AA6   0xD043             BEQ.N    ??FindCentralLine_53
    466            { Trk.cen2[Trk.currentCen2] = (Trk.left2[Trk.currentLeft2] + Trk.right2[Trk.currentRight2])/2 + 937;//计算CCD2中线位置
   \   00000AA8   0x.... 0x....      LDR.W    R0,??DataTable3
   \   00000AAC   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000AB0   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000AB4   0x1840             ADDS     R0,R0,R1
   \   00000AB6   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000ABA   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000ABE   0xF8B1 0x14D6      LDRH     R1,[R1, #+1238]
   \   00000AC2   0x.... 0x....      LDR.W    R2,??DataTable3
   \   00000AC6   0x1889             ADDS     R1,R1,R2
   \   00000AC8   0xF891 0x140E      LDRB     R1,[R1, #+1038]
   \   00000ACC   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   00000AD0   0x2102             MOVS     R1,#+2
   \   00000AD2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000AD6   0xF200 0x30A9      ADDW     R0,R0,#+937
   \   00000ADA   0x.... 0x....      LDR.W    R1,??DataTable3
   \   00000ADE   0xF8B1 0x166A      LDRH     R1,[R1, #+1642]
   \   00000AE2   0x.... 0x....      LDR.W    R2,??DataTable3
   \   00000AE6   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000AEA   0xF8A1 0x04DA      STRH     R0,[R1, #+1242]
    467              Trk.RoadBlockLastWidth2 = Trk.Width2;//记录上一次赛道宽度
   \   00000AEE   0x....             LDR.N    R0,??DataTable3
   \   00000AF0   0x....             LDR.N    R1,??DataTable3
   \   00000AF2   0xF891 0x166E      LDRB     R1,[R1, #+1646]
   \   00000AF6   0xF880 0x16CD      STRB     R1,[R0, #+1741]
    468              Trk.Width2 = Trk.right2[Trk.currentRight2] - Trk.left2[Trk.currentLeft2];//计算赛道宽度
   \   00000AFA   0x....             LDR.N    R0,??DataTable3
   \   00000AFC   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000B00   0x....             LDR.N    R1,??DataTable3
   \   00000B02   0x1840             ADDS     R0,R0,R1
   \   00000B04   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000B08   0x....             LDR.N    R1,??DataTable3
   \   00000B0A   0xF8B1 0x140A      LDRH     R1,[R1, #+1034]
   \   00000B0E   0x....             LDR.N    R2,??DataTable3
   \   00000B10   0x1889             ADDS     R1,R1,R2
   \   00000B12   0xF891 0x1342      LDRB     R1,[R1, #+834]
   \   00000B16   0x1A40             SUBS     R0,R0,R1
   \   00000B18   0x....             LDR.N    R1,??DataTable3
   \   00000B1A   0xF881 0x066E      STRB     R0,[R1, #+1646]
    469              Trk.AllDark2 = 0;//清0全黑标志
   \   00000B1E   0x....             LDR.N    R0,??DataTable3
   \   00000B20   0x2100             MOVS     R1,#+0
   \   00000B22   0xF880 0x166F      STRB     R1,[R0, #+1647]
    470              Trk.BackCen2 = 0;//清0回正标志
   \   00000B26   0x....             LDR.N    R0,??DataTable3
   \   00000B28   0x2100             MOVS     R1,#+0
   \   00000B2A   0xF880 0x1670      STRB     R1,[R0, #+1648]
   \   00000B2E   0xE163             B.N      ??FindCentralLine_54
    471            }
    472            else if(Trk.left2[Trk.currentLeft2]!=255 && Trk.right2[Trk.currentRight2]==255) //CCD2只存在左边
   \                     ??FindCentralLine_53: (+1)
   \   00000B30   0x....             LDR.N    R0,??DataTable3
   \   00000B32   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000B36   0x....             LDR.N    R1,??DataTable3
   \   00000B38   0x1840             ADDS     R0,R0,R1
   \   00000B3A   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000B3E   0x28FF             CMP      R0,#+255
   \   00000B40   0xD061             BEQ.N    ??FindCentralLine_55
   \   00000B42   0x....             LDR.N    R0,??DataTable3
   \   00000B44   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000B48   0x....             LDR.N    R1,??DataTable3
   \   00000B4A   0x1840             ADDS     R0,R0,R1
   \   00000B4C   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000B50   0x28FF             CMP      R0,#+255
   \   00000B52   0xD158             BNE.N    ??FindCentralLine_55
    473            { //中线位置=左边+坐标系转换偏移量+赛道宽度/2
    474              //Trk.cen2[Trk.currentCen2] = Trk.left2[Trk.currentLeft2] + 937 + Trk.Width2/2;
    475              Trk.cen2[Trk.currentCen2] = Trk.left2[Trk.currentLeft2] + 937 + CCD2CurveTrkWidth/2;
   \   00000B54   0x....             LDR.N    R0,??DataTable3
   \   00000B56   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000B5A   0x....             LDR.N    R1,??DataTable3
   \   00000B5C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000B60   0x....             LDR.N    R1,??DataTable3
   \   00000B62   0xF8B1 0x140A      LDRH     R1,[R1, #+1034]
   \   00000B66   0x....             LDR.N    R2,??DataTable3
   \   00000B68   0x1889             ADDS     R1,R1,R2
   \   00000B6A   0xF891 0x1342      LDRB     R1,[R1, #+834]
   \   00000B6E   0xF201 0x31D2      ADDW     R1,R1,#+978
   \   00000B72   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    476              if(Trk.cen2[Trk.currentCen2] > 1200){Trk.cen2[Trk.currentCen2] = 1200;}//防止越界
   \   00000B76   0x....             LDR.N    R0,??DataTable3
   \   00000B78   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000B7C   0x....             LDR.N    R1,??DataTable3
   \   00000B7E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000B82   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000B86   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000B8A   0xDD09             BLE.N    ??FindCentralLine_56
   \   00000B8C   0x....             LDR.N    R0,??DataTable3
   \   00000B8E   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000B92   0x....             LDR.N    R1,??DataTable3
   \   00000B94   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000B98   0xF44F 0x6196      MOV      R1,#+1200
   \   00000B9C   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    477              if(Trk.cen2[Trk.currentCen2] < 1000 + CCD2AllDarkThreshold){Trk.AllDark2 = 0;}//中线位置超过阈值判断为全白
   \                     ??FindCentralLine_56: (+1)
   \   00000BA0   0x....             LDR.N    R0,??DataTable3
   \   00000BA2   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000BA6   0x....             LDR.N    R1,??DataTable3
   \   00000BA8   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000BAC   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000BB0   0xF240 0x4106      MOVW     R1,#+1030
   \   00000BB4   0x4288             CMP      R0,R1
   \   00000BB6   0xDA04             BGE.N    ??FindCentralLine_57
   \   00000BB8   0x....             LDR.N    R0,??DataTable3
   \   00000BBA   0x2100             MOVS     R1,#+0
   \   00000BBC   0xF880 0x166F      STRB     R1,[R0, #+1647]
   \   00000BC0   0xE003             B.N      ??FindCentralLine_58
    478              else{Trk.AllDark2 = 1;}
   \                     ??FindCentralLine_57: (+1)
   \   00000BC2   0x....             LDR.N    R0,??DataTable3
   \   00000BC4   0x2101             MOVS     R1,#+1
   \   00000BC6   0xF880 0x166F      STRB     R1,[R0, #+1647]
    479              //本来右边应该存在，但是实际上不存在，说明很可能是十字误判
    480              //if(Trk.left2[Trk.currentLeft2] < 127 - Trk.Width2 - CCD2illegalArea)
    481              if(Trk.left2[Trk.currentLeft2] < 127 - CCD2CurveTrkWidth - CCD2illegalArea)
   \                     ??FindCentralLine_58: (+1)
   \   00000BCA   0x....             LDR.N    R0,??DataTable3
   \   00000BCC   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000BD0   0x....             LDR.N    R1,??DataTable3
   \   00000BD2   0x1840             ADDS     R0,R0,R1
   \   00000BD4   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000BD8   0x2827             CMP      R0,#+39
   \   00000BDA   0xDA0F             BGE.N    ??FindCentralLine_59
    482              { Trk.cen2[Trk.currentCen2] = Trk.cen2[Trk.lastCen2];//保持上次打角
   \   00000BDC   0x....             LDR.N    R0,??DataTable3
   \   00000BDE   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000BE2   0x....             LDR.N    R1,??DataTable3
   \   00000BE4   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000BE8   0x....             LDR.N    R1,??DataTable3
   \   00000BEA   0xF8B1 0x166C      LDRH     R1,[R1, #+1644]
   \   00000BEE   0x....             LDR.N    R2,??DataTable3
   \   00000BF0   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000BF4   0xF8B1 0x14DA      LDRH     R1,[R1, #+1242]
   \   00000BF8   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    483              }
    484              Trk.BackCen2 = 0;//清0回正标志
   \                     ??FindCentralLine_59: (+1)
   \   00000BFC   0x....             LDR.N    R0,??DataTable3
   \   00000BFE   0x2100             MOVS     R1,#+0
   \   00000C00   0xF880 0x1670      STRB     R1,[R0, #+1648]
   \   00000C04   0xE0F8             B.N      ??FindCentralLine_54
    485            }
    486            else if(Trk.left2[Trk.currentLeft2]==255 && Trk.right2[Trk.currentRight2]!=255) //CCD2只存在右边
   \                     ??FindCentralLine_55: (+1)
   \   00000C06   0x....             LDR.N    R0,??DataTable3
   \   00000C08   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000C0C   0x....             LDR.N    R1,??DataTable3
   \   00000C0E   0x1840             ADDS     R0,R0,R1
   \   00000C10   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000C14   0x28FF             CMP      R0,#+255
   \   00000C16   0xD160             BNE.N    ??FindCentralLine_60
   \   00000C18   0x....             LDR.N    R0,??DataTable3
   \   00000C1A   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000C1E   0x....             LDR.N    R1,??DataTable3
   \   00000C20   0x1840             ADDS     R0,R0,R1
   \   00000C22   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000C26   0x28FF             CMP      R0,#+255
   \   00000C28   0xD057             BEQ.N    ??FindCentralLine_60
    487            { //中线位置=右边+坐标系转换偏移量-赛道宽度/2
    488              //Trk.cen2[Trk.currentCen2] = Trk.right2[Trk.currentRight2] + 937 - Trk.Width2/2;
    489              Trk.cen2[Trk.currentCen2] = Trk.right2[Trk.currentRight2] + 937 - CCD2CurveTrkWidth/2;
   \   00000C2A   0x....             LDR.N    R0,??DataTable3
   \   00000C2C   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000C30   0x....             LDR.N    R1,??DataTable3
   \   00000C32   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000C36   0x....             LDR.N    R1,??DataTable3
   \   00000C38   0xF8B1 0x14D6      LDRH     R1,[R1, #+1238]
   \   00000C3C   0x....             LDR.N    R2,??DataTable3
   \   00000C3E   0x1889             ADDS     R1,R1,R2
   \   00000C40   0xF891 0x140E      LDRB     R1,[R1, #+1038]
   \   00000C44   0xF511 0x7160      ADDS     R1,R1,#+896
   \   00000C48   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    490              if(Trk.cen2[Trk.currentCen2] > 1200){Trk.cen2[Trk.currentCen2] = 0;}//防止越界
   \   00000C4C   0x....             LDR.N    R0,??DataTable3
   \   00000C4E   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000C52   0x....             LDR.N    R1,??DataTable3
   \   00000C54   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000C58   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000C5C   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000C60   0xDD08             BLE.N    ??FindCentralLine_61
   \   00000C62   0x....             LDR.N    R0,??DataTable3
   \   00000C64   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000C68   0x....             LDR.N    R1,??DataTable3
   \   00000C6A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000C6E   0x2100             MOVS     R1,#+0
   \   00000C70   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    491              if(Trk.cen2[Trk.currentCen2] > 1000 - CCD2AllDarkThreshold){Trk.AllDark2 = 0;}//中线位置超过阈值判断为全白
   \                     ??FindCentralLine_61: (+1)
   \   00000C74   0x....             LDR.N    R0,??DataTable3
   \   00000C76   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000C7A   0x....             LDR.N    R1,??DataTable3
   \   00000C7C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000C80   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000C84   0xF240 0x31CB      MOVW     R1,#+971
   \   00000C88   0x4288             CMP      R0,R1
   \   00000C8A   0xDB04             BLT.N    ??FindCentralLine_62
   \   00000C8C   0x....             LDR.N    R0,??DataTable3
   \   00000C8E   0x2100             MOVS     R1,#+0
   \   00000C90   0xF880 0x166F      STRB     R1,[R0, #+1647]
   \   00000C94   0xE003             B.N      ??FindCentralLine_63
    492              else{Trk.AllDark2 = 1;}
   \                     ??FindCentralLine_62: (+1)
   \   00000C96   0x....             LDR.N    R0,??DataTable3
   \   00000C98   0x2101             MOVS     R1,#+1
   \   00000C9A   0xF880 0x166F      STRB     R1,[R0, #+1647]
    493              //本来左边应该存在，但是实际上不存在，说明很可能是十字误判
    494              //if(Trk.right2[Trk.currentRight2] > Trk.Width2 + CCD2illegalArea)
    495              if(Trk.right2[Trk.currentRight2] > CCD2CurveTrkWidth + CCD2illegalArea)
   \                     ??FindCentralLine_63: (+1)
   \   00000C9E   0x....             LDR.N    R0,??DataTable3
   \   00000CA0   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000CA4   0x....             LDR.N    R1,??DataTable3
   \   00000CA6   0x1840             ADDS     R0,R0,R1
   \   00000CA8   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000CAC   0x2859             CMP      R0,#+89
   \   00000CAE   0xDB0F             BLT.N    ??FindCentralLine_64
    496              { Trk.cen2[Trk.currentCen2] = Trk.cen2[Trk.lastCen2];//保持上次打角
   \   00000CB0   0x....             LDR.N    R0,??DataTable3
   \   00000CB2   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000CB6   0x....             LDR.N    R1,??DataTable3
   \   00000CB8   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000CBC   0x....             LDR.N    R1,??DataTable3
   \   00000CBE   0xF8B1 0x166C      LDRH     R1,[R1, #+1644]
   \   00000CC2   0x....             LDR.N    R2,??DataTable3
   \   00000CC4   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000CC8   0xF8B1 0x14DA      LDRH     R1,[R1, #+1242]
   \   00000CCC   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    497              }
    498              Trk.BackCen2 = 0;//清0回正标志
   \                     ??FindCentralLine_64: (+1)
   \   00000CD0   0x....             LDR.N    R0,??DataTable3
   \   00000CD2   0x2100             MOVS     R1,#+0
   \   00000CD4   0xF880 0x1670      STRB     R1,[R0, #+1648]
   \   00000CD8   0xE08E             B.N      ??FindCentralLine_54
    499            }
    500            else//CCD2双边都不存在
    501            {
    502              if(Trk.AllDark2 == 1){Trk.cen2[Trk.currentCen2] = Trk.cen2[Trk.lastCen2];}//若全黑标志为1，保持上次打角
   \                     ??FindCentralLine_60: (+1)
   \   00000CDA   0x....             LDR.N    R0,??DataTable3
   \   00000CDC   0xF890 0x066F      LDRB     R0,[R0, #+1647]
   \   00000CE0   0x2801             CMP      R0,#+1
   \   00000CE2   0xD110             BNE.N    ??FindCentralLine_65
   \   00000CE4   0x....             LDR.N    R0,??DataTable3
   \   00000CE6   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000CEA   0x....             LDR.N    R1,??DataTable3
   \   00000CEC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000CF0   0x....             LDR.N    R1,??DataTable3
   \   00000CF2   0xF8B1 0x166C      LDRH     R1,[R1, #+1644]
   \   00000CF6   0x....             LDR.N    R2,??DataTable3
   \   00000CF8   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000CFC   0xF8B1 0x14DA      LDRH     R1,[R1, #+1242]
   \   00000D00   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
   \   00000D04   0xE078             B.N      ??FindCentralLine_54
    503              else if(Trk.BackCen2 == 0)//若回正标志为0
   \                     ??FindCentralLine_65: (+1)
   \   00000D06   0x....             LDR.N    R0,??DataTable3
   \   00000D08   0xF890 0x0670      LDRB     R0,[R0, #+1648]
   \   00000D0C   0x2800             CMP      R0,#+0
   \   00000D0E   0xD124             BNE.N    ??FindCentralLine_66
    504              { Trk.BackCen2 = 1;Trk.BackCenRoad2 = Con.TotalRoad;Trk.BcakCenCen2 = Trk.cen2[Trk.lastCen2];//置1回正标志，记录回正开始的变量
   \   00000D10   0x....             LDR.N    R0,??DataTable3
   \   00000D12   0x2101             MOVS     R1,#+1
   \   00000D14   0xF880 0x1670      STRB     R1,[R0, #+1648]
   \   00000D18   0x....             LDR.N    R0,??DataTable3
   \   00000D1A   0x....             LDR.N    R1,??DataTable3_4
   \   00000D1C   0x6849             LDR      R1,[R1, #+4]
   \   00000D1E   0xF8C0 0x1674      STR      R1,[R0, #+1652]
   \   00000D22   0x....             LDR.N    R0,??DataTable3
   \   00000D24   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   00000D28   0x....             LDR.N    R1,??DataTable3
   \   00000D2A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000D2E   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000D32   0x....             LDR.N    R1,??DataTable3
   \   00000D34   0xF8A1 0x0678      STRH     R0,[R1, #+1656]
    505                Trk.cen2[Trk.currentCen2] = Trk.cen2[Trk.lastCen2];//保持上次打角   
   \   00000D38   0x....             LDR.N    R0,??DataTable3
   \   00000D3A   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000D3E   0x....             LDR.N    R1,??DataTable3
   \   00000D40   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000D44   0x....             LDR.N    R1,??DataTable3
   \   00000D46   0xF8B1 0x166C      LDRH     R1,[R1, #+1644]
   \   00000D4A   0x....             LDR.N    R2,??DataTable3
   \   00000D4C   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000D50   0xF8B1 0x14DA      LDRH     R1,[R1, #+1242]
   \   00000D54   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
   \   00000D58   0xE04E             B.N      ??FindCentralLine_54
    506              }
    507              else//处于回正状态
    508              { Trk.BackCen2 = 1;//置1回正标志
   \                     ??FindCentralLine_66: (+1)
   \   00000D5A   0x....             LDR.N    R0,??DataTable3
   \   00000D5C   0x2101             MOVS     R1,#+1
   \   00000D5E   0xF880 0x1670      STRB     R1,[R0, #+1648]
    509                //下面计算回正过程中的中心坐标
    510                float _float_temp1,_float_temp2;_float_temp1 = Con.TotalRoad - Trk.BackCenRoad2;if(_float_temp1> CCD2BackCenRoad){_float_temp1 = CCD2BackCenRoad;}
   \   00000D62   0x....             LDR.N    R0,??DataTable3_4
   \   00000D64   0x6840             LDR      R0,[R0, #+4]
   \   00000D66   0x....             LDR.N    R1,??DataTable3
   \   00000D68   0xF8D1 0x1674      LDR      R1,[R1, #+1652]
   \   00000D6C   0x1A40             SUBS     R0,R0,R1
   \   00000D6E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000D72   0x0004             MOVS     R4,R0
   \   00000D74   0x0020             MOVS     R0,R4
   \   00000D76   0x....             LDR.N    R1,??DataTable3_9  ;; 0x459c4001
   \   00000D78   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000D7C   0xD800             BHI.N    ??FindCentralLine_67
   \   00000D7E   0x....             LDR.N    R4,??DataTable3_10  ;; 0x459c4000
    511                _float_temp1 = _float_temp1/CCD2BackCenRoad;_float_temp1 = 1- _float_temp1;
   \                     ??FindCentralLine_67: (+1)
   \   00000D80   0x0020             MOVS     R0,R4
   \   00000D82   0x....             LDR.N    R1,??DataTable3_10  ;; 0x459c4000
   \   00000D84   0x.... 0x....      BL       __aeabi_fdiv
   \   00000D88   0x0004             MOVS     R4,R0
   \   00000D8A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000D8E   0x0021             MOVS     R1,R4
   \   00000D90   0x.... 0x....      BL       __aeabi_fsub
   \   00000D94   0x0004             MOVS     R4,R0
    512                if(Trk.BcakCenCen2 >= 1000){_float_temp2 = Trk.BcakCenCen2 - 1000;_float_temp1 = 1000 + _float_temp1 * _float_temp2;}
   \   00000D96   0x....             LDR.N    R0,??DataTable3
   \   00000D98   0xF8B0 0x0678      LDRH     R0,[R0, #+1656]
   \   00000D9C   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000DA0   0xDB0F             BLT.N    ??FindCentralLine_68
   \   00000DA2   0x....             LDR.N    R0,??DataTable3
   \   00000DA4   0xF8B0 0x0678      LDRH     R0,[R0, #+1656]
   \   00000DA8   0xF5B0 0x707A      SUBS     R0,R0,#+1000
   \   00000DAC   0x.... 0x....      BL       __aeabi_i2f
   \   00000DB0   0x0001             MOVS     R1,R0
   \   00000DB2   0x0020             MOVS     R0,R4
   \   00000DB4   0x.... 0x....      BL       __aeabi_fmul
   \   00000DB8   0x....             LDR.N    R1,??DataTable3_7  ;; 0x447a0000
   \   00000DBA   0x.... 0x....      BL       __aeabi_fadd
   \   00000DBE   0x0004             MOVS     R4,R0
   \   00000DC0   0xE00F             B.N      ??FindCentralLine_69
    513                else{_float_temp2 = 1000 - Trk.BcakCenCen2;_float_temp1 = 1000 - _float_temp1 * _float_temp2;}
   \                     ??FindCentralLine_68: (+1)
   \   00000DC2   0x....             LDR.N    R0,??DataTable3
   \   00000DC4   0xF8B0 0x0678      LDRH     R0,[R0, #+1656]
   \   00000DC8   0xF5D0 0x707A      RSBS     R0,R0,#+1000
   \   00000DCC   0x.... 0x....      BL       __aeabi_i2f
   \   00000DD0   0x0001             MOVS     R1,R0
   \   00000DD2   0x0020             MOVS     R0,R4
   \   00000DD4   0x.... 0x....      BL       __aeabi_fmul
   \   00000DD8   0x0001             MOVS     R1,R0
   \   00000DDA   0x....             LDR.N    R0,??DataTable3_7  ;; 0x447a0000
   \   00000DDC   0x.... 0x....      BL       __aeabi_fsub
   \   00000DE0   0x0004             MOVS     R4,R0
    514                Trk.cen2[Trk.currentCen2] = (uint16)_float_temp1;    
   \                     ??FindCentralLine_69: (+1)
   \   00000DE2   0x0020             MOVS     R0,R4
   \   00000DE4   0x.... 0x....      BL       __aeabi_f2iz
   \   00000DE8   0x....             LDR.N    R1,??DataTable3
   \   00000DEA   0xF8B1 0x166A      LDRH     R1,[R1, #+1642]
   \   00000DEE   0x....             LDR.N    R2,??DataTable3
   \   00000DF0   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000DF4   0xF8A1 0x04DA      STRH     R0,[R1, #+1242]
    515              }
    516            }
    517            //*****************************************************************************************
    518            //-----------------------------------------------------------------------------------------
    519            //-------------------------CCD1、CCD2中线计算完毕，开始计算直线系数------------------------
    520            //-----------------------------------------------------------------------------------------
    521            //*****************************************************************************************
    522            /*Trk.lastServerCoef = Trk.ServerCoef;//记录上一次的舵机系数
    523            uint16 temp_offset1,temp_offset2;
    524            if(Trk.cen1[Trk.currentCen1] >= 1000){temp_offset1 = Trk.cen1[Trk.currentCen1] - 1000;}//计算CCD1中线偏差
    525            else {temp_offset1 = 1000 - Trk.cen1[Trk.currentCen1];}
    526            if(Trk.cen2[Trk.currentCen2] >= 1000){temp_offset2 = Trk.cen2[Trk.currentCen2] - 1000;}//计算CCD2中线偏差
    527            else {temp_offset2 = 1000 - Trk.cen2[Trk.currentCen2];}
    528            
    529            Trk.ServerCoef = 0.7 + (float)temp_offset2/60;//根据偏差计算舵机系数
    530          
    531            if(temp_offset2 > 60 && Trk.ServerCoefLock == 0)
    532            { Trk.ServerCoefLock = 1;//舵机系数锁定标志置1
    533              Trk.ServerLockRoad = Con.TotalRoad;//记录开始锁定的路程
    534            }
    535            if(Trk.ServerCoefLock == 1 && Con.TotalRoad  - Trk.ServerLockRoad > 5000)
    536            { //CCD1和CCD2偏差均小于某一值，清0舵机系数锁定
    537              if(temp_offset1 < 30 && temp_offset2 <30){Trk.ServerCoefLock = 0;}
    538            }
    539            if(Trk.ServerCoefLock == 1){Trk.ServerCoef = Trk.lastServerCoef;}
    540            */
    541            //*****************************************************************************************
    542            //-----------------------------------------------------------------------------------------
    543            //------------------------根据计算出来的直线系数重新整定CCD1的中心坐标---------------------
    544            //-----------------------------------------------------------------------------------------
    545            //*****************************************************************************************
    546            /*if(Trk.cen1[Trk.currentCen1] >= 1000)
    547            { Trk.cen1[Trk.currentCen1] = 1000 + (uint16)(((float)(Trk.cen1[Trk.currentCen1]-1000)) * Trk.ServerCoef);
    548              if(Trk.cen1[Trk.currentCen1] > 1200){Trk.cen1[Trk.currentCen1] = 1200;}
    549            }
    550            else 
    551            { Trk.cen1[Trk.currentCen1] = 1000 - (uint16)(((float)(1000-Trk.cen1[Trk.currentCen1])) * Trk.ServerCoef);
    552              if(Trk.cen1[Trk.currentCen1] < 800){Trk.cen1[Trk.currentCen1] = 800;}
    553            }
    554            */
    555          }
   \                     ??FindCentralLine_54: (+1)
   \   00000DF8   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    556          

   \                                 In section .text, align 4, keep-with-next
    557          void SpecialStatus(void)//特殊状态判断
    558          {
    559            //*****************************************************************************************
    560            //-----------------------------------------------------------------------------------------
    561            //--------------------------------------CCD2人字检测---------------------------------------
    562            //-----------------------------------------------------------------------------------------
    563            //*****************************************************************************************
    564            if(Trk.SpecialStatus == 0 && Con.EnableHerribone == 1 && Con.Run == 2)
   \                     SpecialStatus: (+1)
   \   00000000   0xF8DF 0x0D9C      LDR.W    R0,??SpecialStatus_0
   \   00000004   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xF040 0x811B      BNE.W    ??SpecialStatus_1
   \   0000000E   0xF8DF 0x0D94      LDR.W    R0,??SpecialStatus_0+0x4
   \   00000012   0xF890 0x0033      LDRB     R0,[R0, #+51]
   \   00000016   0x2801             CMP      R0,#+1
   \   00000018   0xF040 0x8114      BNE.W    ??SpecialStatus_1
   \   0000001C   0xF8DF 0x0D84      LDR.W    R0,??SpecialStatus_0+0x4
   \   00000020   0x7B00             LDRB     R0,[R0, #+12]
   \   00000022   0x2802             CMP      R0,#+2
   \   00000024   0xF040 0x810E      BNE.W    ??SpecialStatus_1
    565            { //CCD2判断直道入人字
    566              if(Trk.left2[Trk.currentLeft2] == 255 && Trk.right2[Trk.currentRight2] != 255 //CCD2当前丢左边
    567                 && Trk.left2[Trk.lastLeft2] != 255 && Trk.right2[Trk.lastRight2] != 255 //上次CCD2双边存在
    568                 && Trk.cen2[Trk.currentCen2] >= 1000 - 10 && Trk.cen2[Trk.currentCen2] <= 1000 + 10 //当前CCD2中线处于中值附近
    569                 && Trk.cen1[Trk.currentCen1] >= 1000 - 10 && Trk.cen1[Trk.currentCen1] <= 1000 + 10 //当前CCD1中线处于中值附近
    570                 && Trk.cen2[Trk.lastCen2] >= 1000 - 10 && Trk.cen2[Trk.lastCen2] <= 1000 + 10 //上次CCD2中线处于中值附近
    571                 && Trk.cen1[Trk.lastCen1] >= 1000 - 10 && Trk.cen1[Trk.lastCen1] <= 1000 + 10 //上次CCD1中线处于中值附近
    572                 && Trk.Width2 >= 0.9*CCD2TrkWidth //赛道宽度大于等于直道的0.9倍(防止把障碍误判成人字)
    573                 && Trk.Width1 <= 1.1*CCD1TrkWidth //赛道宽度大于等于直道的1.1倍(防止把欧姆弯误判成人字)
    574                 )
   \   00000028   0xF8DF 0x0D74      LDR.W    R0,??SpecialStatus_0
   \   0000002C   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000030   0xF8DF 0x1D6C      LDR.W    R1,??SpecialStatus_0
   \   00000034   0x1840             ADDS     R0,R0,R1
   \   00000036   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   0000003A   0x28FF             CMP      R0,#+255
   \   0000003C   0xD176             BNE.N    ??SpecialStatus_2
   \   0000003E   0xF8DF 0x0D60      LDR.W    R0,??SpecialStatus_0
   \   00000042   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000046   0xF8DF 0x1D58      LDR.W    R1,??SpecialStatus_0
   \   0000004A   0x1840             ADDS     R0,R0,R1
   \   0000004C   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000050   0x28FF             CMP      R0,#+255
   \   00000052   0xD06B             BEQ.N    ??SpecialStatus_2
   \   00000054   0xF8DF 0x0D48      LDR.W    R0,??SpecialStatus_0
   \   00000058   0xF8B0 0x040C      LDRH     R0,[R0, #+1036]
   \   0000005C   0xF8DF 0x1D40      LDR.W    R1,??SpecialStatus_0
   \   00000060   0x1840             ADDS     R0,R0,R1
   \   00000062   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000066   0x28FF             CMP      R0,#+255
   \   00000068   0xD060             BEQ.N    ??SpecialStatus_2
   \   0000006A   0xF8DF 0x0D34      LDR.W    R0,??SpecialStatus_0
   \   0000006E   0xF8B0 0x04D8      LDRH     R0,[R0, #+1240]
   \   00000072   0xF8DF 0x1D2C      LDR.W    R1,??SpecialStatus_0
   \   00000076   0x1840             ADDS     R0,R0,R1
   \   00000078   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   0000007C   0x28FF             CMP      R0,#+255
   \   0000007E   0xD055             BEQ.N    ??SpecialStatus_2
   \   00000080   0xF8DF 0x0D1C      LDR.W    R0,??SpecialStatus_0
   \   00000084   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000088   0xF8DF 0x1D14      LDR.W    R1,??SpecialStatus_0
   \   0000008C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000090   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000094   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   00000098   0x2815             CMP      R0,#+21
   \   0000009A   0xD247             BCS.N    ??SpecialStatus_2
   \   0000009C   0xF8DF 0x0D00      LDR.W    R0,??SpecialStatus_0
   \   000000A0   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000000A4   0xF8DF 0x1CF8      LDR.W    R1,??SpecialStatus_0
   \   000000A8   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000000AC   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000000B0   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000000B4   0x2815             CMP      R0,#+21
   \   000000B6   0xD239             BCS.N    ??SpecialStatus_2
   \   000000B8   0xF8DF 0x0CE4      LDR.W    R0,??SpecialStatus_0
   \   000000BC   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   000000C0   0xF8DF 0x1CDC      LDR.W    R1,??SpecialStatus_0
   \   000000C4   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000000C8   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000000CC   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000000D0   0x2815             CMP      R0,#+21
   \   000000D2   0xD22B             BCS.N    ??SpecialStatus_2
   \   000000D4   0xF8DF 0x0CC8      LDR.W    R0,??SpecialStatus_0
   \   000000D8   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   000000DC   0xF8DF 0x1CC0      LDR.W    R1,??SpecialStatus_0
   \   000000E0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000000E4   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000000E8   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000000EC   0x2815             CMP      R0,#+21
   \   000000EE   0xD21D             BCS.N    ??SpecialStatus_2
   \   000000F0   0xF8DF 0x0CAC      LDR.W    R0,??SpecialStatus_0
   \   000000F4   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   000000F8   0x283E             CMP      R0,#+62
   \   000000FA   0xD317             BCC.N    ??SpecialStatus_2
   \   000000FC   0xF8DF 0x0CA0      LDR.W    R0,??SpecialStatus_0
   \   00000100   0xF890 0x032E      LDRB     R0,[R0, #+814]
   \   00000104   0x2845             CMP      R0,#+69
   \   00000106   0xD211             BCS.N    ??SpecialStatus_2
    575              { Trk.SpecialStatus = 11;Trk.HerringToConDir2 = 0;//人字状态：21//人字待确认方向为：左
   \   00000108   0xF8DF 0x0C94      LDR.W    R0,??SpecialStatus_0
   \   0000010C   0x210B             MOVS     R1,#+11
   \   0000010E   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   00000112   0xF8DF 0x0C8C      LDR.W    R0,??SpecialStatus_0
   \   00000116   0x2100             MOVS     R1,#+0
   \   00000118   0xF880 0x16B8      STRB     R1,[R0, #+1720]
    576                Trk.HerringToConRoad2 = Con.TotalRoad;//记录人字待确认路程 
   \   0000011C   0xF8DF 0x0C80      LDR.W    R0,??SpecialStatus_0
   \   00000120   0xF8DF 0x1C80      LDR.W    R1,??SpecialStatus_0+0x4
   \   00000124   0x6849             LDR      R1,[R1, #+4]
   \   00000126   0xF8C0 0x16B4      STR      R1,[R0, #+1716]
   \   0000012A   0xE2A1             B.N      ??SpecialStatus_3
    577              }
    578              else if(Trk.left2[Trk.currentLeft2] != 255 && Trk.right2[Trk.currentRight2] == 255 //当前丢右边
    579                 && Trk.left2[Trk.lastLeft2] != 255 && Trk.right2[Trk.lastRight2] != 255 //上次CCD2双边存在
    580                 && Trk.cen2[Trk.currentCen2] >= 1000 - 10 && Trk.cen2[Trk.currentCen2] <= 1000 + 10 //当前CCD2中线处于中值附近
    581                 && Trk.cen1[Trk.currentCen1] >= 1000 - 10 && Trk.cen1[Trk.currentCen1] <= 1000 + 10 //当前CCD1中线处于中值附近
    582                 && Trk.cen2[Trk.lastCen2] >= 1000 - 10 && Trk.cen2[Trk.lastCen2] <= 1000 + 10 //上次CCD2中线处于中值附近
    583                 && Trk.cen1[Trk.lastCen1] >= 1000 - 10 && Trk.cen1[Trk.lastCen1] <= 1000 + 10 //上次CCD1中线处于中值附近
    584                 && Trk.Width2 >= 0.9*CCD2TrkWidth //赛道宽度大于等于直道的0.9倍(防止把障碍误判成人字)
    585                 && Trk.Width1 <= 1.1*CCD1TrkWidth //赛道宽度小于直道的1.1倍(防止把欧姆弯误判成人字)
    586                 )
   \                     ??SpecialStatus_2: (+1)
   \   0000012C   0xF8DF 0x0C70      LDR.W    R0,??SpecialStatus_0
   \   00000130   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000134   0xF8DF 0x1C68      LDR.W    R1,??SpecialStatus_0
   \   00000138   0x1840             ADDS     R0,R0,R1
   \   0000013A   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   0000013E   0x28FF             CMP      R0,#+255
   \   00000140   0xF000 0x8296      BEQ.W    ??SpecialStatus_3
   \   00000144   0xF8DF 0x0C58      LDR.W    R0,??SpecialStatus_0
   \   00000148   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   0000014C   0xF8DF 0x1C50      LDR.W    R1,??SpecialStatus_0
   \   00000150   0x1840             ADDS     R0,R0,R1
   \   00000152   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000156   0x28FF             CMP      R0,#+255
   \   00000158   0xF040 0x828A      BNE.W    ??SpecialStatus_3
   \   0000015C   0xF8DF 0x0C40      LDR.W    R0,??SpecialStatus_0
   \   00000160   0xF8B0 0x040C      LDRH     R0,[R0, #+1036]
   \   00000164   0xF8DF 0x1C38      LDR.W    R1,??SpecialStatus_0
   \   00000168   0x1840             ADDS     R0,R0,R1
   \   0000016A   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   0000016E   0x28FF             CMP      R0,#+255
   \   00000170   0xF000 0x827E      BEQ.W    ??SpecialStatus_3
   \   00000174   0xF8DF 0x0C28      LDR.W    R0,??SpecialStatus_0
   \   00000178   0xF8B0 0x04D8      LDRH     R0,[R0, #+1240]
   \   0000017C   0xF8DF 0x1C20      LDR.W    R1,??SpecialStatus_0
   \   00000180   0x1840             ADDS     R0,R0,R1
   \   00000182   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000186   0x28FF             CMP      R0,#+255
   \   00000188   0xF000 0x8272      BEQ.W    ??SpecialStatus_3
   \   0000018C   0xF8DF 0x0C10      LDR.W    R0,??SpecialStatus_0
   \   00000190   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000194   0xF8DF 0x1C08      LDR.W    R1,??SpecialStatus_0
   \   00000198   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000019C   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000001A0   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000001A4   0x2815             CMP      R0,#+21
   \   000001A6   0xF080 0x8263      BCS.W    ??SpecialStatus_3
   \   000001AA   0xF8DF 0x0BF4      LDR.W    R0,??SpecialStatus_0
   \   000001AE   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000001B2   0xF8DF 0x1BEC      LDR.W    R1,??SpecialStatus_0
   \   000001B6   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000001BA   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000001BE   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000001C2   0x2815             CMP      R0,#+21
   \   000001C4   0xF080 0x8254      BCS.W    ??SpecialStatus_3
   \   000001C8   0xF8DF 0x0BD4      LDR.W    R0,??SpecialStatus_0
   \   000001CC   0xF8B0 0x066C      LDRH     R0,[R0, #+1644]
   \   000001D0   0xF8DF 0x1BCC      LDR.W    R1,??SpecialStatus_0
   \   000001D4   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000001D8   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000001DC   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000001E0   0x2815             CMP      R0,#+21
   \   000001E2   0xF080 0x8245      BCS.W    ??SpecialStatus_3
   \   000001E6   0xF8DF 0x0BB8      LDR.W    R0,??SpecialStatus_0
   \   000001EA   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   000001EE   0xF8DF 0x1BB0      LDR.W    R1,??SpecialStatus_0
   \   000001F2   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000001F6   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000001FA   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000001FE   0x2815             CMP      R0,#+21
   \   00000200   0xF080 0x8236      BCS.W    ??SpecialStatus_3
   \   00000204   0xF8DF 0x0B98      LDR.W    R0,??SpecialStatus_0
   \   00000208   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   0000020C   0x283E             CMP      R0,#+62
   \   0000020E   0xF0C0 0x822F      BCC.W    ??SpecialStatus_3
   \   00000212   0xF8DF 0x0B8C      LDR.W    R0,??SpecialStatus_0
   \   00000216   0xF890 0x032E      LDRB     R0,[R0, #+814]
   \   0000021A   0x2845             CMP      R0,#+69
   \   0000021C   0xF080 0x8228      BCS.W    ??SpecialStatus_3
    587              { Trk.SpecialStatus = 11;Trk.HerringToConDir2 = 1;//人字状态：11//人字待确认方向为：右
   \   00000220   0xF8DF 0x0B7C      LDR.W    R0,??SpecialStatus_0
   \   00000224   0x210B             MOVS     R1,#+11
   \   00000226   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   0000022A   0xF8DF 0x0B74      LDR.W    R0,??SpecialStatus_0
   \   0000022E   0x2101             MOVS     R1,#+1
   \   00000230   0xF880 0x16B8      STRB     R1,[R0, #+1720]
    588                Trk.HerringToConRoad2 = Con.TotalRoad;//记录人字待确认路程 
   \   00000234   0xF8DF 0x0B68      LDR.W    R0,??SpecialStatus_0
   \   00000238   0xF8DF 0x1B68      LDR.W    R1,??SpecialStatus_0+0x4
   \   0000023C   0x6849             LDR      R1,[R1, #+4]
   \   0000023E   0xF8C0 0x16B4      STR      R1,[R0, #+1716]
   \   00000242   0xE215             B.N      ??SpecialStatus_3
    589              }
    590            }
    591            else if(Trk.SpecialStatus == 11 && Con.TotalRoad - Trk.HerringToConRoad2 >= 2000)//CCD2检测人字待确认，待确认过了2000个脉冲
   \                     ??SpecialStatus_1: (+1)
   \   00000244   0xF8DF 0x0B58      LDR.W    R0,??SpecialStatus_0
   \   00000248   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   0000024C   0x280B             CMP      R0,#+11
   \   0000024E   0xF040 0x814E      BNE.W    ??SpecialStatus_4
   \   00000252   0xF8DF 0x0B50      LDR.W    R0,??SpecialStatus_0+0x4
   \   00000256   0x6840             LDR      R0,[R0, #+4]
   \   00000258   0xF8DF 0x1B44      LDR.W    R1,??SpecialStatus_0
   \   0000025C   0xF8D1 0x16B4      LDR      R1,[R1, #+1716]
   \   00000260   0x1A40             SUBS     R0,R0,R1
   \   00000262   0xF5B0 0x6FFA      CMP      R0,#+2000
   \   00000266   0xF0C0 0x8142      BCC.W    ??SpecialStatus_4
    592            {
    593              if(Trk.left2[Trk.currentLeft2] == 255 && Trk.right2[Trk.currentRight2] != 255 //CCD2当前丢左边不丢右边
    594                 && Trk.HerringToConDir2 == 0 //人字待确认方向向左
    595                 && Trk.cen2[Trk.currentCen2] >= 1000 - 10 && Trk.cen2[Trk.currentCen2] <= 1000 + 10 //当前CCD2中线处于中值附近
    596                 && Trk.cen1[Trk.currentCen1] >= 1000 - 10 && Trk.cen1[Trk.currentCen1] <= 1000 + 10 //当前CCD1中线处于中值附近
    597                 && Trk.Width2 >= 0.9*CCD2TrkWidth //赛道宽度大于等于直道的0.9倍(防止把障碍误判成人字)
    598                 && Trk.Width1 <= 1.1*CCD1TrkWidth //赛道宽度小于等于直道的1.1倍(防止把欧姆弯误判成人字)
    599                 )
   \   0000026A   0xF8DF 0x0B34      LDR.W    R0,??SpecialStatus_0
   \   0000026E   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000272   0xF8DF 0x1B2C      LDR.W    R1,??SpecialStatus_0
   \   00000276   0x1840             ADDS     R0,R0,R1
   \   00000278   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   0000027C   0x28FF             CMP      R0,#+255
   \   0000027E   0xF040 0x808E      BNE.W    ??SpecialStatus_5
   \   00000282   0xF8DF 0x0B1C      LDR.W    R0,??SpecialStatus_0
   \   00000286   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   0000028A   0xF8DF 0x1B14      LDR.W    R1,??SpecialStatus_0
   \   0000028E   0x1840             ADDS     R0,R0,R1
   \   00000290   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000294   0x28FF             CMP      R0,#+255
   \   00000296   0xF000 0x8082      BEQ.W    ??SpecialStatus_5
   \   0000029A   0xF8DF 0x0B04      LDR.W    R0,??SpecialStatus_0
   \   0000029E   0xF890 0x06B8      LDRB     R0,[R0, #+1720]
   \   000002A2   0x2800             CMP      R0,#+0
   \   000002A4   0xD17B             BNE.N    ??SpecialStatus_5
   \   000002A6   0xF8DF 0x0AF8      LDR.W    R0,??SpecialStatus_0
   \   000002AA   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000002AE   0xF8DF 0x1AF0      LDR.W    R1,??SpecialStatus_0
   \   000002B2   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000002B6   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000002BA   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000002BE   0x2815             CMP      R0,#+21
   \   000002C0   0xD26D             BCS.N    ??SpecialStatus_5
   \   000002C2   0xF8DF 0x0ADC      LDR.W    R0,??SpecialStatus_0
   \   000002C6   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000002CA   0xF8DF 0x1AD4      LDR.W    R1,??SpecialStatus_0
   \   000002CE   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000002D2   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000002D6   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000002DA   0x2815             CMP      R0,#+21
   \   000002DC   0xD25F             BCS.N    ??SpecialStatus_5
   \   000002DE   0xF8DF 0x0AC0      LDR.W    R0,??SpecialStatus_0
   \   000002E2   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   000002E6   0x283E             CMP      R0,#+62
   \   000002E8   0xD359             BCC.N    ??SpecialStatus_5
   \   000002EA   0xF8DF 0x0AB4      LDR.W    R0,??SpecialStatus_0
   \   000002EE   0xF890 0x032E      LDRB     R0,[R0, #+814]
   \   000002F2   0x2845             CMP      R0,#+69
   \   000002F4   0xD253             BCS.N    ??SpecialStatus_5
    600              { Trk.SpecialStatus = 12;Trk.HerringRoad2 = Con.TotalRoad;//人字状态：2//记录进入人字的路程
   \   000002F6   0xF8DF 0x0AA8      LDR.W    R0,??SpecialStatus_0
   \   000002FA   0x210C             MOVS     R1,#+12
   \   000002FC   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   00000300   0xF8DF 0x0A9C      LDR.W    R0,??SpecialStatus_0
   \   00000304   0xF8DF 0x1A9C      LDR.W    R1,??SpecialStatus_0+0x4
   \   00000308   0x6849             LDR      R1,[R1, #+4]
   \   0000030A   0xF8C0 0x16BC      STR      R1,[R0, #+1724]
    601                Trk.HerringDir2 = 0;//记录进入人字的方向：左
   \   0000030E   0xF8DF 0x0A90      LDR.W    R0,??SpecialStatus_0
   \   00000312   0x2100             MOVS     R1,#+0
   \   00000314   0xF880 0x16C4      STRB     R1,[R0, #+1732]
    602                Give.forceSpeed = 1;//强制给定速度：人字
   \   00000318   0xF8DF 0x0DB8      LDR.W    R0,??SpecialStatus_6
   \   0000031C   0x2101             MOVS     R1,#+1
   \   0000031E   0x8041             STRH     R1,[R0, #+2]
    603                Give.MotorHerringSpeed = 100;//人字转向给定速度为90
   \   00000320   0xF8DF 0x0DB0      LDR.W    R0,??SpecialStatus_6
   \   00000324   0x2164             MOVS     R1,#+100
   \   00000326   0x80C1             STRH     R1,[R0, #+6]
    604                //计算人字开始转向的路程=0速度转向脉冲数(4500) - 速度/5*190，其中190为舵机打角响应时间190ms
    605                if(6800 - Encoder.encoder[Encoder.currentEnc]*(5/Con.SpeedContralPeriod)/5*190 >=0)
   \   00000328   0xF641 0x2090      MOVW     R0,#+6800
   \   0000032C   0xF8DF 0x1DA8      LDR.W    R1,??SpecialStatus_6+0x4
   \   00000330   0xF8B1 0x1190      LDRH     R1,[R1, #+400]
   \   00000334   0xF8DF 0x2DA0      LDR.W    R2,??SpecialStatus_6+0x4
   \   00000338   0xF832 0x1011      LDRH     R1,[R2, R1, LSL #+1]
   \   0000033C   0x2205             MOVS     R2,#+5
   \   0000033E   0xF8DF 0x3A64      LDR.W    R3,??SpecialStatus_0+0x4
   \   00000342   0x785B             LDRB     R3,[R3, #+1]
   \   00000344   0xFB92 0xF2F3      SDIV     R2,R2,R3
   \   00000348   0x4351             MULS     R1,R2,R1
   \   0000034A   0x2205             MOVS     R2,#+5
   \   0000034C   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000350   0x22BE             MOVS     R2,#+190
   \   00000352   0xFB02 0x0011      MLS      R0,R2,R1,R0
   \   00000356   0x2800             CMP      R0,#+0
   \   00000358   0xD41B             BMI.N    ??SpecialStatus_7
    606                { Trk.HerringTurnRoad2 = 6800 - Encoder.encoder[Encoder.currentEnc]*(5/Con.SpeedContralPeriod)/5*190; 
   \   0000035A   0xF641 0x2090      MOVW     R0,#+6800
   \   0000035E   0xF8DF 0x1D78      LDR.W    R1,??SpecialStatus_6+0x4
   \   00000362   0xF8B1 0x1190      LDRH     R1,[R1, #+400]
   \   00000366   0xF8DF 0x2D70      LDR.W    R2,??SpecialStatus_6+0x4
   \   0000036A   0xF832 0x1011      LDRH     R1,[R2, R1, LSL #+1]
   \   0000036E   0x2205             MOVS     R2,#+5
   \   00000370   0xF8DF 0x3A30      LDR.W    R3,??SpecialStatus_0+0x4
   \   00000374   0x785B             LDRB     R3,[R3, #+1]
   \   00000376   0xFB92 0xF2F3      SDIV     R2,R2,R3
   \   0000037A   0x4351             MULS     R1,R2,R1
   \   0000037C   0x2205             MOVS     R2,#+5
   \   0000037E   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000382   0x22BE             MOVS     R2,#+190
   \   00000384   0xFB02 0x0011      MLS      R0,R2,R1,R0
   \   00000388   0xF8DF 0x1A14      LDR.W    R1,??SpecialStatus_0
   \   0000038C   0xF8C1 0x06C0      STR      R0,[R1, #+1728]
   \   00000390   0xE16E             B.N      ??SpecialStatus_3
    607                }
    608                else{Trk.HerringTurnRoad2 = 0;}
   \                     ??SpecialStatus_7: (+1)
   \   00000392   0xF8DF 0x0A0C      LDR.W    R0,??SpecialStatus_0
   \   00000396   0x2100             MOVS     R1,#+0
   \   00000398   0xF8C0 0x16C0      STR      R1,[R0, #+1728]
   \   0000039C   0xE168             B.N      ??SpecialStatus_3
    609              }
    610              else if(Trk.left2[Trk.currentLeft2] != 255 && Trk.right2[Trk.currentRight2] == 255 //当前丢右边不丢左边
    611                  && Trk.HerringToConDir2 == 1 //人字待确认方向向右
    612                  && Trk.cen2[Trk.currentCen2] >= 1000 - 10 && Trk.cen2[Trk.currentCen2] <= 1000 + 10 //当前CCD2中线处于中值附近
    613                  && Trk.cen1[Trk.currentCen1] >= 1000 - 10 && Trk.cen1[Trk.currentCen1] <= 1000 + 10 //当前CCD1中线处于中值附近
    614                  && Trk.Width2 >= 0.9*CCD2TrkWidth //赛道宽度大于等于直道的0.9倍(防止把障碍误判成人字)
    615                  && Trk.Width1 <= 1.1*CCD1TrkWidth //赛道宽度大于等于直道的1.1倍(防止把欧姆弯误判成人字)
    616                  )
   \                     ??SpecialStatus_5: (+1)
   \   0000039E   0xF8DF 0x0A00      LDR.W    R0,??SpecialStatus_0
   \   000003A2   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   000003A6   0xF8DF 0x19F8      LDR.W    R1,??SpecialStatus_0
   \   000003AA   0x1840             ADDS     R0,R0,R1
   \   000003AC   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   000003B0   0x28FF             CMP      R0,#+255
   \   000003B2   0xF000 0x808E      BEQ.W    ??SpecialStatus_8
   \   000003B6   0xF8DF 0x09E8      LDR.W    R0,??SpecialStatus_0
   \   000003BA   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   000003BE   0xF8DF 0x19E0      LDR.W    R1,??SpecialStatus_0
   \   000003C2   0x1840             ADDS     R0,R0,R1
   \   000003C4   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   000003C8   0x28FF             CMP      R0,#+255
   \   000003CA   0xF040 0x8082      BNE.W    ??SpecialStatus_8
   \   000003CE   0xF8DF 0x09D0      LDR.W    R0,??SpecialStatus_0
   \   000003D2   0xF890 0x06B8      LDRB     R0,[R0, #+1720]
   \   000003D6   0x2801             CMP      R0,#+1
   \   000003D8   0xD17B             BNE.N    ??SpecialStatus_8
   \   000003DA   0xF8DF 0x09C4      LDR.W    R0,??SpecialStatus_0
   \   000003DE   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000003E2   0xF8DF 0x19BC      LDR.W    R1,??SpecialStatus_0
   \   000003E6   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000003EA   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000003EE   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   000003F2   0x2815             CMP      R0,#+21
   \   000003F4   0xD26D             BCS.N    ??SpecialStatus_8
   \   000003F6   0xF8DF 0x09A8      LDR.W    R0,??SpecialStatus_0
   \   000003FA   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000003FE   0xF8DF 0x19A0      LDR.W    R1,??SpecialStatus_0
   \   00000402   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000406   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   0000040A   0xF2A0 0x30DE      SUBW     R0,R0,#+990
   \   0000040E   0x2815             CMP      R0,#+21
   \   00000410   0xD25F             BCS.N    ??SpecialStatus_8
   \   00000412   0xF8DF 0x098C      LDR.W    R0,??SpecialStatus_0
   \   00000416   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   0000041A   0x283E             CMP      R0,#+62
   \   0000041C   0xD359             BCC.N    ??SpecialStatus_8
   \   0000041E   0xF8DF 0x0980      LDR.W    R0,??SpecialStatus_0
   \   00000422   0xF890 0x032E      LDRB     R0,[R0, #+814]
   \   00000426   0x2845             CMP      R0,#+69
   \   00000428   0xD253             BCS.N    ??SpecialStatus_8
    617              { Trk.SpecialStatus = 12;Trk.HerringRoad2 = Con.TotalRoad;//人字状态：2//记录进入人字的路程
   \   0000042A   0xF8DF 0x0974      LDR.W    R0,??SpecialStatus_0
   \   0000042E   0x210C             MOVS     R1,#+12
   \   00000430   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   00000434   0xF8DF 0x0968      LDR.W    R0,??SpecialStatus_0
   \   00000438   0xF8DF 0x1968      LDR.W    R1,??SpecialStatus_0+0x4
   \   0000043C   0x6849             LDR      R1,[R1, #+4]
   \   0000043E   0xF8C0 0x16BC      STR      R1,[R0, #+1724]
    618                Trk.HerringDir2 = 1;//记录进入人字的方向：右
   \   00000442   0xF8DF 0x095C      LDR.W    R0,??SpecialStatus_0
   \   00000446   0x2101             MOVS     R1,#+1
   \   00000448   0xF880 0x16C4      STRB     R1,[R0, #+1732]
    619                Give.forceSpeed = 1;//强制给定速度：人字
   \   0000044C   0xF8DF 0x0C84      LDR.W    R0,??SpecialStatus_6
   \   00000450   0x2101             MOVS     R1,#+1
   \   00000452   0x8041             STRH     R1,[R0, #+2]
    620                Give.MotorHerringSpeed = 160;//人字转向给定速度为100
   \   00000454   0xF8DF 0x0C7C      LDR.W    R0,??SpecialStatus_6
   \   00000458   0x21A0             MOVS     R1,#+160
   \   0000045A   0x80C1             STRH     R1,[R0, #+6]
    621                //计算人字开始转向的路程=0速度转向脉冲数(4500) - 速度/5*190，其中190为舵机打角响应时间190ms
    622                if(6800 - Encoder.encoder[Encoder.currentEnc]*(5/Con.SpeedContralPeriod)/5*190 >=0)
   \   0000045C   0xF641 0x2090      MOVW     R0,#+6800
   \   00000460   0xF8DF 0x1C74      LDR.W    R1,??SpecialStatus_6+0x4
   \   00000464   0xF8B1 0x1190      LDRH     R1,[R1, #+400]
   \   00000468   0xF8DF 0x2C6C      LDR.W    R2,??SpecialStatus_6+0x4
   \   0000046C   0xF832 0x1011      LDRH     R1,[R2, R1, LSL #+1]
   \   00000470   0x2205             MOVS     R2,#+5
   \   00000472   0xF8DF 0x3930      LDR.W    R3,??SpecialStatus_0+0x4
   \   00000476   0x785B             LDRB     R3,[R3, #+1]
   \   00000478   0xFB92 0xF2F3      SDIV     R2,R2,R3
   \   0000047C   0x4351             MULS     R1,R2,R1
   \   0000047E   0x2205             MOVS     R2,#+5
   \   00000480   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000484   0x22BE             MOVS     R2,#+190
   \   00000486   0xFB02 0x0011      MLS      R0,R2,R1,R0
   \   0000048A   0x2800             CMP      R0,#+0
   \   0000048C   0xD41B             BMI.N    ??SpecialStatus_9
    623                { Trk.HerringTurnRoad2 = 6800 - Encoder.encoder[Encoder.currentEnc]*(5/Con.SpeedContralPeriod)/5*190; 
   \   0000048E   0xF641 0x2090      MOVW     R0,#+6800
   \   00000492   0xF8DF 0x1C44      LDR.W    R1,??SpecialStatus_6+0x4
   \   00000496   0xF8B1 0x1190      LDRH     R1,[R1, #+400]
   \   0000049A   0xF8DF 0x2C3C      LDR.W    R2,??SpecialStatus_6+0x4
   \   0000049E   0xF832 0x1011      LDRH     R1,[R2, R1, LSL #+1]
   \   000004A2   0x2205             MOVS     R2,#+5
   \   000004A4   0xF8DF 0x38FC      LDR.W    R3,??SpecialStatus_0+0x4
   \   000004A8   0x785B             LDRB     R3,[R3, #+1]
   \   000004AA   0xFB92 0xF2F3      SDIV     R2,R2,R3
   \   000004AE   0x4351             MULS     R1,R2,R1
   \   000004B0   0x2205             MOVS     R2,#+5
   \   000004B2   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000004B6   0x22BE             MOVS     R2,#+190
   \   000004B8   0xFB02 0x0011      MLS      R0,R2,R1,R0
   \   000004BC   0xF8DF 0x18E0      LDR.W    R1,??SpecialStatus_0
   \   000004C0   0xF8C1 0x06C0      STR      R0,[R1, #+1728]
   \   000004C4   0xE0D4             B.N      ??SpecialStatus_3
    624                }
    625                else{Trk.HerringTurnRoad2 = 0;}
   \                     ??SpecialStatus_9: (+1)
   \   000004C6   0xF8DF 0x08D8      LDR.W    R0,??SpecialStatus_0
   \   000004CA   0x2100             MOVS     R1,#+0
   \   000004CC   0xF8C0 0x16C0      STR      R1,[R0, #+1728]
   \   000004D0   0xE0CE             B.N      ??SpecialStatus_3
    626              }
    627              else{Give.forceDir = 0;Give.forceSpeed = 0;Trk.SpecialStatus = 0;}//未通过CCD2人字检测确认
   \                     ??SpecialStatus_8: (+1)
   \   000004D2   0xF8DF 0x0C00      LDR.W    R0,??SpecialStatus_6
   \   000004D6   0x2100             MOVS     R1,#+0
   \   000004D8   0x7041             STRB     R1,[R0, #+1]
   \   000004DA   0xF8DF 0x0BF8      LDR.W    R0,??SpecialStatus_6
   \   000004DE   0x2100             MOVS     R1,#+0
   \   000004E0   0x8041             STRH     R1,[R0, #+2]
   \   000004E2   0xF8DF 0x08BC      LDR.W    R0,??SpecialStatus_0
   \   000004E6   0x2100             MOVS     R1,#+0
   \   000004E8   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   000004EC   0xE0C0             B.N      ??SpecialStatus_3
    628            }
    629            else if(Trk.SpecialStatus == 12)//CCD2检测人字已确认，未转向
   \                     ??SpecialStatus_4: (+1)
   \   000004EE   0xF8DF 0x08B0      LDR.W    R0,??SpecialStatus_0
   \   000004F2   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   000004F6   0x280C             CMP      R0,#+12
   \   000004F8   0xD127             BNE.N    ??SpecialStatus_10
    630            { if(Con.TotalRoad - Trk.HerringRoad2 >= Trk.HerringTurnRoad2)//CCD2人字确认后一段路程开始转向
   \   000004FA   0xF8DF 0x08A8      LDR.W    R0,??SpecialStatus_0+0x4
   \   000004FE   0x6840             LDR      R0,[R0, #+4]
   \   00000500   0xF8DF 0x189C      LDR.W    R1,??SpecialStatus_0
   \   00000504   0xF8D1 0x16BC      LDR      R1,[R1, #+1724]
   \   00000508   0x1A40             SUBS     R0,R0,R1
   \   0000050A   0xF8DF 0x1894      LDR.W    R1,??SpecialStatus_0
   \   0000050E   0xF8D1 0x16C0      LDR      R1,[R1, #+1728]
   \   00000512   0x4288             CMP      R0,R1
   \   00000514   0xF0C0 0x80AC      BCC.W    ??SpecialStatus_3
    631              { Trk.SpecialStatus = 13;Give.forceDir = 1;//人字状态：3//强制打角来源：1-人字   
   \   00000518   0xF8DF 0x0884      LDR.W    R0,??SpecialStatus_0
   \   0000051C   0x210D             MOVS     R1,#+13
   \   0000051E   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   00000522   0xF8DF 0x0BB0      LDR.W    R0,??SpecialStatus_6
   \   00000526   0x2101             MOVS     R1,#+1
   \   00000528   0x7041             STRB     R1,[R0, #+1]
    632                if(Trk.HerringDir2 == 0){Give.SerHerringPWM = 0;}else{Give.SerHerringPWM = 200;}//强制给定人字打角PWM
   \   0000052A   0xF8DF 0x0874      LDR.W    R0,??SpecialStatus_0
   \   0000052E   0xF890 0x06C4      LDRB     R0,[R0, #+1732]
   \   00000532   0x2800             CMP      R0,#+0
   \   00000534   0xD104             BNE.N    ??SpecialStatus_11
   \   00000536   0xF8DF 0x0B9C      LDR.W    R0,??SpecialStatus_6
   \   0000053A   0x2100             MOVS     R1,#+0
   \   0000053C   0x7101             STRB     R1,[R0, #+4]
   \   0000053E   0xE097             B.N      ??SpecialStatus_3
   \                     ??SpecialStatus_11: (+1)
   \   00000540   0xF8DF 0x0B90      LDR.W    R0,??SpecialStatus_6
   \   00000544   0x21C8             MOVS     R1,#+200
   \   00000546   0x7101             STRB     R1,[R0, #+4]
   \   00000548   0xE092             B.N      ??SpecialStatus_3
    633              }
    634            }
    635            else if(Trk.SpecialStatus == 13)//CCD2检测人字转向中
   \                     ??SpecialStatus_10: (+1)
   \   0000054A   0xF8DF 0x0854      LDR.W    R0,??SpecialStatus_0
   \   0000054E   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000552   0x280D             CMP      R0,#+13
   \   00000554   0xD131             BNE.N    ??SpecialStatus_12
    636            { if(Trk.HerringDir2 == 0){Give.SerHerringPWM = 0;}else{Give.SerHerringPWM = 200;}//强制给定人字打角PWM
   \   00000556   0xF8DF 0x0848      LDR.W    R0,??SpecialStatus_0
   \   0000055A   0xF890 0x06C4      LDRB     R0,[R0, #+1732]
   \   0000055E   0x2800             CMP      R0,#+0
   \   00000560   0xD104             BNE.N    ??SpecialStatus_13
   \   00000562   0xF8DF 0x0B70      LDR.W    R0,??SpecialStatus_6
   \   00000566   0x2100             MOVS     R1,#+0
   \   00000568   0x7101             STRB     R1,[R0, #+4]
   \   0000056A   0xE003             B.N      ??SpecialStatus_14
   \                     ??SpecialStatus_13: (+1)
   \   0000056C   0xF8DF 0x0B64      LDR.W    R0,??SpecialStatus_6
   \   00000570   0x21C8             MOVS     R1,#+200
   \   00000572   0x7101             STRB     R1,[R0, #+4]
    637              if(Con.TotalRoad - Trk.HerringRoad2 >= Trk.HerringTurnRoad2 + 10000)//CCD2人字转向后一段路程开始重寻中线
   \                     ??SpecialStatus_14: (+1)
   \   00000574   0xF8DF 0x082C      LDR.W    R0,??SpecialStatus_0+0x4
   \   00000578   0x6840             LDR      R0,[R0, #+4]
   \   0000057A   0xF8DF 0x1824      LDR.W    R1,??SpecialStatus_0
   \   0000057E   0xF8D1 0x16BC      LDR      R1,[R1, #+1724]
   \   00000582   0x1A40             SUBS     R0,R0,R1
   \   00000584   0xF8DF 0x1818      LDR.W    R1,??SpecialStatus_0
   \   00000588   0xF8D1 0x16C0      LDR      R1,[R1, #+1728]
   \   0000058C   0xF501 0x511C      ADD      R1,R1,#+9984
   \   00000590   0x3110             ADDS     R1,R1,#+16
   \   00000592   0x4288             CMP      R0,R1
   \   00000594   0xD36C             BCC.N    ??SpecialStatus_3
    638              { Trk.SpecialStatus = 14;//人字状态：4
   \   00000596   0xF8DF 0x0808      LDR.W    R0,??SpecialStatus_0
   \   0000059A   0x210E             MOVS     R1,#+14
   \   0000059C   0xF880 0x169C      STRB     R1,[R0, #+1692]
    639                Trk.cen2[Trk.currentCen2]=1000;//重新给定CCD2中线，让CCD2从中点开始寻找黑边
   \   000005A0   0xF8DF 0x07FC      LDR.W    R0,??SpecialStatus_0
   \   000005A4   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000005A8   0xF8DF 0x17F4      LDR.W    R1,??SpecialStatus_0
   \   000005AC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000005B0   0xF44F 0x717A      MOV      R1,#+1000
   \   000005B4   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
   \   000005B8   0xE05A             B.N      ??SpecialStatus_3
    640              }
    641            }
    642            else if(Trk.SpecialStatus == 14)//CCD2检测人字重寻中线
   \                     ??SpecialStatus_12: (+1)
   \   000005BA   0xF8DF 0x07E4      LDR.W    R0,??SpecialStatus_0
   \   000005BE   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   000005C2   0x280E             CMP      R0,#+14
   \   000005C4   0xD154             BNE.N    ??SpecialStatus_3
    643            { if(Trk.cen2[Trk.currentCen2] >= 1000 - 20 && Trk.cen2[Trk.currentCen2] <= 1000 + 20 //CCD2中线处于中值附近
    644                 && Trk.left2[Trk.currentLeft2] != 255 && Trk.right2[Trk.currentRight2] != 255 //CCD2双边存在
    645                 && Trk.Width2 >= 0.9*CCD2TrkWidth && Trk.Width2 <= 1.1*CCD2TrkWidth //CCD2检测到的赛道宽度在正常范围内
    646                 )
   \   000005C6   0xF8DF 0x07D8      LDR.W    R0,??SpecialStatus_0
   \   000005CA   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000005CE   0xF8DF 0x17D0      LDR.W    R1,??SpecialStatus_0
   \   000005D2   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000005D6   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000005DA   0xF5B0 0x7075      SUBS     R0,R0,#+980
   \   000005DE   0x2829             CMP      R0,#+41
   \   000005E0   0xD22B             BCS.N    ??SpecialStatus_15
   \   000005E2   0xF8DF 0x07BC      LDR.W    R0,??SpecialStatus_0
   \   000005E6   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   000005EA   0xF8DF 0x17B4      LDR.W    R1,??SpecialStatus_0
   \   000005EE   0x1840             ADDS     R0,R0,R1
   \   000005F0   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   000005F4   0x28FF             CMP      R0,#+255
   \   000005F6   0xD020             BEQ.N    ??SpecialStatus_15
   \   000005F8   0xF8DF 0x07A4      LDR.W    R0,??SpecialStatus_0
   \   000005FC   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000600   0xF8DF 0x179C      LDR.W    R1,??SpecialStatus_0
   \   00000604   0x1840             ADDS     R0,R0,R1
   \   00000606   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   0000060A   0x28FF             CMP      R0,#+255
   \   0000060C   0xD015             BEQ.N    ??SpecialStatus_15
   \   0000060E   0xF8DF 0x0790      LDR.W    R0,??SpecialStatus_0
   \   00000612   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   00000616   0x383E             SUBS     R0,R0,#+62
   \   00000618   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000061A   0x280D             CMP      R0,#+13
   \   0000061C   0xD20D             BCS.N    ??SpecialStatus_15
    647              { Give.forceDir = 0;Give.forceSpeed = 0;Trk.SpecialStatus = 0;//取消强制打角来源和给定速度，退出人字
   \   0000061E   0xF8DF 0x0AB4      LDR.W    R0,??SpecialStatus_6
   \   00000622   0x2100             MOVS     R1,#+0
   \   00000624   0x7041             STRB     R1,[R0, #+1]
   \   00000626   0xF8DF 0x0AAC      LDR.W    R0,??SpecialStatus_6
   \   0000062A   0x2100             MOVS     R1,#+0
   \   0000062C   0x8041             STRH     R1,[R0, #+2]
   \   0000062E   0xF8DF 0x0770      LDR.W    R0,??SpecialStatus_0
   \   00000632   0x2100             MOVS     R1,#+0
   \   00000634   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   00000638   0xE01A             B.N      ??SpecialStatus_3
    648              }
    649              else 
    650              { if(Trk.HerringDir2 == 0){Give.SerHerringPWM = 0;}else{Give.SerHerringPWM = 200;}//强制给定人字打角PWM
   \                     ??SpecialStatus_15: (+1)
   \   0000063A   0xF8DF 0x0764      LDR.W    R0,??SpecialStatus_0
   \   0000063E   0xF890 0x06C4      LDRB     R0,[R0, #+1732]
   \   00000642   0x2800             CMP      R0,#+0
   \   00000644   0xD104             BNE.N    ??SpecialStatus_16
   \   00000646   0xF8DF 0x0A8C      LDR.W    R0,??SpecialStatus_6
   \   0000064A   0x2100             MOVS     R1,#+0
   \   0000064C   0x7101             STRB     R1,[R0, #+4]
   \   0000064E   0xE003             B.N      ??SpecialStatus_17
   \                     ??SpecialStatus_16: (+1)
   \   00000650   0xF8DF 0x0A80      LDR.W    R0,??SpecialStatus_6
   \   00000654   0x21C8             MOVS     R1,#+200
   \   00000656   0x7101             STRB     R1,[R0, #+4]
    651                Trk.cen2[Trk.currentCen2]=1000;//重新给定CCD2中线，让CCD2从中点开始寻找黑边
   \                     ??SpecialStatus_17: (+1)
   \   00000658   0xF8DF 0x0744      LDR.W    R0,??SpecialStatus_0
   \   0000065C   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000660   0xF8DF 0x173C      LDR.W    R1,??SpecialStatus_0
   \   00000664   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000668   0xF44F 0x717A      MOV      R1,#+1000
   \   0000066C   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    652              }
    653            }
    654            //*****************************************************************************************
    655            //-----------------------------------------------------------------------------------------
    656            //--------------------------------------CCD2路障检测---------------------------------------
    657            //-----------------------------------------------------------------------------------------
    658            //*****************************************************************************************
    659            if(Trk.SpecialStatus == 0 && Con.EnableRoadblock == 1 && Con.Run == 2)
   \                     ??SpecialStatus_3: (+1)
   \   00000670   0xF8DF 0x072C      LDR.W    R0,??SpecialStatus_0
   \   00000674   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000678   0x2800             CMP      R0,#+0
   \   0000067A   0xD16C             BNE.N    ??SpecialStatus_18
   \   0000067C   0xF8DF 0x0724      LDR.W    R0,??SpecialStatus_0+0x4
   \   00000680   0xF890 0x0034      LDRB     R0,[R0, #+52]
   \   00000684   0x2801             CMP      R0,#+1
   \   00000686   0xD166             BNE.N    ??SpecialStatus_18
   \   00000688   0xF8DF 0x0718      LDR.W    R0,??SpecialStatus_0+0x4
   \   0000068C   0x7B00             LDRB     R0,[R0, #+12]
   \   0000068E   0x2802             CMP      R0,#+2
   \   00000690   0xD161             BNE.N    ??SpecialStatus_18
    660            { if(Trk.left2[Trk.currentLeft2] != 255 && Trk.right2[Trk.currentRight2] != 255 //当前CCD2双边存在
    661                 && Trk.Width2 <= 0.75*CCD2TrkWidth//当前CCD2赛道宽度小于正常直道宽度的0.75倍
    662                 && Trk.Width1 >= 0.9*CCD1TrkWidth//当前CCD1赛道宽度大于等于正常直道宽度的0.9倍(防止与坡道误判)
    663                 && Trk.cen2[Trk.currentCen2] > 1000 - 20 && Trk.cen2[Trk.currentCen2] < 1000 + 20 //当前中心坐标没有偏离中心太多
    664                 )
   \   00000692   0xF8DF 0x070C      LDR.W    R0,??SpecialStatus_0
   \   00000696   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   0000069A   0xF8DF 0x1704      LDR.W    R1,??SpecialStatus_0
   \   0000069E   0x1840             ADDS     R0,R0,R1
   \   000006A0   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   000006A4   0x28FF             CMP      R0,#+255
   \   000006A6   0xF000 0x82A1      BEQ.W    ??SpecialStatus_19
   \   000006AA   0xF8DF 0x06F4      LDR.W    R0,??SpecialStatus_0
   \   000006AE   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   000006B2   0xF8DF 0x16EC      LDR.W    R1,??SpecialStatus_0
   \   000006B6   0x1840             ADDS     R0,R0,R1
   \   000006B8   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   000006BC   0x28FF             CMP      R0,#+255
   \   000006BE   0xF000 0x8295      BEQ.W    ??SpecialStatus_19
   \   000006C2   0xF8DF 0x06DC      LDR.W    R0,??SpecialStatus_0
   \   000006C6   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   000006CA   0x2834             CMP      R0,#+52
   \   000006CC   0xF080 0x828E      BCS.W    ??SpecialStatus_19
   \   000006D0   0xF8DF 0x06CC      LDR.W    R0,??SpecialStatus_0
   \   000006D4   0xF890 0x032E      LDRB     R0,[R0, #+814]
   \   000006D8   0x2838             CMP      R0,#+56
   \   000006DA   0xF0C0 0x8287      BCC.W    ??SpecialStatus_19
   \   000006DE   0xF8DF 0x06C0      LDR.W    R0,??SpecialStatus_0
   \   000006E2   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000006E6   0xF8DF 0x16B8      LDR.W    R1,??SpecialStatus_0
   \   000006EA   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000006EE   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000006F2   0xF2A0 0x30D5      SUBW     R0,R0,#+981
   \   000006F6   0x2827             CMP      R0,#+39
   \   000006F8   0xF080 0x8278      BCS.W    ??SpecialStatus_19
    665              { Trk.SpecialStatus = 31;//特殊状态：路障待确认
   \   000006FC   0xF8DF 0x06A0      LDR.W    R0,??SpecialStatus_0
   \   00000700   0x211F             MOVS     R1,#+31
   \   00000702   0xF880 0x169C      STRB     R1,[R0, #+1692]
    666                Trk.RoadBlockWidth2 = Trk.Width2;Trk.RoadBlockRoad2 = Con.TotalRoad;//记录赛道宽度//记录路障待确认的路程
   \   00000706   0xF8DF 0x0698      LDR.W    R0,??SpecialStatus_0
   \   0000070A   0xF8DF 0x1694      LDR.W    R1,??SpecialStatus_0
   \   0000070E   0xF891 0x166E      LDRB     R1,[R1, #+1646]
   \   00000712   0xF880 0x16CE      STRB     R1,[R0, #+1742]
   \   00000716   0xF8DF 0x0688      LDR.W    R0,??SpecialStatus_0
   \   0000071A   0xF8DF 0x1688      LDR.W    R1,??SpecialStatus_0+0x4
   \   0000071E   0x6849             LDR      R1,[R1, #+4]
   \   00000720   0xF8C0 0x16D0      STR      R1,[R0, #+1744]
    667                if(Trk.cen2[Trk.currentCen2] <= 1000){Trk.RoadBlockDir2 = 0;}else{Trk.RoadBlockDir2 = 1;}//记录路障方向
   \   00000724   0xF8DF 0x0678      LDR.W    R0,??SpecialStatus_0
   \   00000728   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000072C   0xF8DF 0x1670      LDR.W    R1,??SpecialStatus_0
   \   00000730   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000734   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000738   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000073C   0xDC05             BGT.N    ??SpecialStatus_20
   \   0000073E   0xF8DF 0x0660      LDR.W    R0,??SpecialStatus_0
   \   00000742   0x2100             MOVS     R1,#+0
   \   00000744   0xF880 0x16D4      STRB     R1,[R0, #+1748]
   \   00000748   0xE250             B.N      ??SpecialStatus_19
   \                     ??SpecialStatus_20: (+1)
   \   0000074A   0xF8DF 0x0654      LDR.W    R0,??SpecialStatus_0
   \   0000074E   0x2101             MOVS     R1,#+1
   \   00000750   0xF880 0x16D4      STRB     R1,[R0, #+1748]
   \   00000754   0xE24A             B.N      ??SpecialStatus_19
    668              }
    669            }
    670            else if(Trk.SpecialStatus == 31 && Con.TotalRoad - Trk.RoadBlockRoad2 >= 800)//路障待确认经过800个脉冲
   \                     ??SpecialStatus_18: (+1)
   \   00000756   0xF8DF 0x0648      LDR.W    R0,??SpecialStatus_0
   \   0000075A   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   0000075E   0x281F             CMP      R0,#+31
   \   00000760   0xD148             BNE.N    ??SpecialStatus_21
   \   00000762   0xF8DF 0x0640      LDR.W    R0,??SpecialStatus_0+0x4
   \   00000766   0x6840             LDR      R0,[R0, #+4]
   \   00000768   0xF8DF 0x1634      LDR.W    R1,??SpecialStatus_0
   \   0000076C   0xF8D1 0x16D0      LDR      R1,[R1, #+1744]
   \   00000770   0x1A40             SUBS     R0,R0,R1
   \   00000772   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000776   0xD33D             BCC.N    ??SpecialStatus_21
    671            {
    672              if(Trk.left2[Trk.currentLeft2] != 255 && Trk.right2[Trk.currentRight2] != 255 //当前CCD2双边存在
    673                 && Trk.Width2 <= 0.75*CCD2TrkWidth//当前赛道宽度小于正常直道宽度的0.75倍
    674                 && Trk.cen2[Trk.currentCen2] > 1000 - 20 && Trk.cen2[Trk.currentCen2] < 1000 + 20 //当前中心坐标没有偏离中心太多
    675                 )
   \   00000778   0xF8DF 0x0624      LDR.W    R0,??SpecialStatus_0
   \   0000077C   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000780   0xF8DF 0x161C      LDR.W    R1,??SpecialStatus_0
   \   00000784   0x1840             ADDS     R0,R0,R1
   \   00000786   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   0000078A   0x28FF             CMP      R0,#+255
   \   0000078C   0xD02C             BEQ.N    ??SpecialStatus_22
   \   0000078E   0xF8DF 0x0610      LDR.W    R0,??SpecialStatus_0
   \   00000792   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000796   0xF8DF 0x1608      LDR.W    R1,??SpecialStatus_0
   \   0000079A   0x1840             ADDS     R0,R0,R1
   \   0000079C   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   000007A0   0x28FF             CMP      R0,#+255
   \   000007A2   0xD021             BEQ.N    ??SpecialStatus_22
   \   000007A4   0xF8DF 0x05F8      LDR.W    R0,??SpecialStatus_0
   \   000007A8   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   000007AC   0x2834             CMP      R0,#+52
   \   000007AE   0xD21B             BCS.N    ??SpecialStatus_22
   \   000007B0   0xF8DF 0x05EC      LDR.W    R0,??SpecialStatus_0
   \   000007B4   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000007B8   0xF8DF 0x15E4      LDR.W    R1,??SpecialStatus_0
   \   000007BC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000007C0   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000007C4   0xF2A0 0x30D5      SUBW     R0,R0,#+981
   \   000007C8   0x2827             CMP      R0,#+39
   \   000007CA   0xD20D             BCS.N    ??SpecialStatus_22
    676              { Trk.SpecialStatus = 32;//特殊状态：路障确认
   \   000007CC   0xF8DF 0x05D0      LDR.W    R0,??SpecialStatus_0
   \   000007D0   0x2120             MOVS     R1,#+32
   \   000007D2   0xF880 0x169C      STRB     R1,[R0, #+1692]
    677                Give.forceSpeed = 2;//强制给定速度：2-路障速度
   \   000007D6   0xF8DF 0x08FC      LDR.W    R0,??SpecialStatus_6
   \   000007DA   0x2102             MOVS     R1,#+2
   \   000007DC   0x8041             STRH     R1,[R0, #+2]
    678                Give.MotorRoadBlockSpeed = 200;//路障给定速度
   \   000007DE   0xF8DF 0x08F4      LDR.W    R0,??SpecialStatus_6
   \   000007E2   0x21C8             MOVS     R1,#+200
   \   000007E4   0x8101             STRH     R1,[R0, #+8]
   \   000007E6   0xE201             B.N      ??SpecialStatus_19
    679              }
    680              else{Trk.SpecialStatus = 0;}//未通过路障确认
   \                     ??SpecialStatus_22: (+1)
   \   000007E8   0xF8DF 0x05B4      LDR.W    R0,??SpecialStatus_0
   \   000007EC   0x2100             MOVS     R1,#+0
   \   000007EE   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   000007F2   0xE1FB             B.N      ??SpecialStatus_19
    681            }
    682            else if(Trk.SpecialStatus == 32)//路障确认
   \                     ??SpecialStatus_21: (+1)
   \   000007F4   0xF8DF 0x05A8      LDR.W    R0,??SpecialStatus_0
   \   000007F8   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   000007FC   0x2820             CMP      R0,#+32
   \   000007FE   0xF040 0x81F5      BNE.W    ??SpecialStatus_19
    683            {
    684              if(Con.TotalRoad - Trk.RoadBlockRoad2 < 16000)//当前处于路障长度之中
   \   00000802   0xF8DF 0x05A0      LDR.W    R0,??SpecialStatus_0+0x4
   \   00000806   0x6840             LDR      R0,[R0, #+4]
   \   00000808   0xF8DF 0x1594      LDR.W    R1,??SpecialStatus_0
   \   0000080C   0xF8D1 0x16D0      LDR      R1,[R1, #+1744]
   \   00000810   0x1A40             SUBS     R0,R0,R1
   \   00000812   0xF5B0 0x5F7A      CMP      R0,#+16000
   \   00000816   0xF080 0x81E1      BCS.W    ??SpecialStatus_23
    685              { //重新计算CCD2中心坐标
    686                if(Trk.RoadBlockDir2 == 0 && Trk.left2[Trk.currentLeft2] != 255)//向左走且左边存在
   \   0000081A   0xF8DF 0x0584      LDR.W    R0,??SpecialStatus_0
   \   0000081E   0xF890 0x06D4      LDRB     R0,[R0, #+1748]
   \   00000822   0x2800             CMP      R0,#+0
   \   00000824   0xD15D             BNE.N    ??SpecialStatus_24
   \   00000826   0xF8DF 0x0578      LDR.W    R0,??SpecialStatus_0
   \   0000082A   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   0000082E   0xF8DF 0x1570      LDR.W    R1,??SpecialStatus_0
   \   00000832   0x1840             ADDS     R0,R0,R1
   \   00000834   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000838   0x28FF             CMP      R0,#+255
   \   0000083A   0xD052             BEQ.N    ??SpecialStatus_24
    687                { Trk.cen2[Trk.currentCen2] = Trk.left2[Trk.currentLeft2] + Trk.RoadBlockWidth2/2 + 937 - 0;
   \   0000083C   0xF8DF 0x0560      LDR.W    R0,??SpecialStatus_0
   \   00000840   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000844   0xF8DF 0x1558      LDR.W    R1,??SpecialStatus_0
   \   00000848   0x1840             ADDS     R0,R0,R1
   \   0000084A   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   0000084E   0xF8DF 0x1550      LDR.W    R1,??SpecialStatus_0
   \   00000852   0xF891 0x16CE      LDRB     R1,[R1, #+1742]
   \   00000856   0x2202             MOVS     R2,#+2
   \   00000858   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000085C   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   00000860   0xF200 0x30A9      ADDW     R0,R0,#+937
   \   00000864   0xF8DF 0x1538      LDR.W    R1,??SpecialStatus_0
   \   00000868   0xF8B1 0x166A      LDRH     R1,[R1, #+1642]
   \   0000086C   0xF8DF 0x2530      LDR.W    R2,??SpecialStatus_0
   \   00000870   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000874   0xF8A1 0x04DA      STRH     R0,[R1, #+1242]
    688                  if(Trk.cen2[Trk.currentCen2] > 1200){Trk.cen2[Trk.currentCen2] = 1200;}
   \   00000878   0xF8DF 0x0524      LDR.W    R0,??SpecialStatus_0
   \   0000087C   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000880   0xF8DF 0x151C      LDR.W    R1,??SpecialStatus_0
   \   00000884   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000888   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000088C   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000890   0xDD0C             BLE.N    ??SpecialStatus_25
   \   00000892   0xF8DF 0x050C      LDR.W    R0,??SpecialStatus_0
   \   00000896   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000089A   0xF8DF 0x1504      LDR.W    R1,??SpecialStatus_0
   \   0000089E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000008A2   0xF44F 0x6196      MOV      R1,#+1200
   \   000008A6   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
   \   000008AA   0xE0B7             B.N      ??SpecialStatus_26
    689                  else if(Trk.cen2[Trk.currentCen2] < 800){Trk.cen2[Trk.currentCen2] = 800;}
   \                     ??SpecialStatus_25: (+1)
   \   000008AC   0xF8DF 0x04F0      LDR.W    R0,??SpecialStatus_0
   \   000008B0   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000008B4   0xF8DF 0x14E8      LDR.W    R1,??SpecialStatus_0
   \   000008B8   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000008BC   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000008C0   0xF5B0 0x7F48      CMP      R0,#+800
   \   000008C4   0xF280 0x80AA      BGE.W    ??SpecialStatus_26
   \   000008C8   0xF8DF 0x04D4      LDR.W    R0,??SpecialStatus_0
   \   000008CC   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000008D0   0xF8DF 0x14CC      LDR.W    R1,??SpecialStatus_0
   \   000008D4   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000008D8   0xF44F 0x7148      MOV      R1,#+800
   \   000008DC   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
   \   000008E0   0xE09C             B.N      ??SpecialStatus_26
    690                }
    691                else if(Trk.RoadBlockDir2 == 0 && Trk.left2[Trk.currentLeft2] == 255){Trk.cen2[Trk.currentCen2] = 1000;}//左边不存在
   \                     ??SpecialStatus_24: (+1)
   \   000008E2   0xF8DF 0x04BC      LDR.W    R0,??SpecialStatus_0
   \   000008E6   0xF890 0x06D4      LDRB     R0,[R0, #+1748]
   \   000008EA   0x2800             CMP      R0,#+0
   \   000008EC   0xD117             BNE.N    ??SpecialStatus_27
   \   000008EE   0xF8DF 0x04B0      LDR.W    R0,??SpecialStatus_0
   \   000008F2   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   000008F6   0xF8DF 0x14A8      LDR.W    R1,??SpecialStatus_0
   \   000008FA   0x1840             ADDS     R0,R0,R1
   \   000008FC   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000900   0x28FF             CMP      R0,#+255
   \   00000902   0xD10C             BNE.N    ??SpecialStatus_27
   \   00000904   0xF8DF 0x0498      LDR.W    R0,??SpecialStatus_0
   \   00000908   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000090C   0xF8DF 0x1490      LDR.W    R1,??SpecialStatus_0
   \   00000910   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000914   0xF44F 0x717A      MOV      R1,#+1000
   \   00000918   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
   \   0000091C   0xE07E             B.N      ??SpecialStatus_26
    692                else if(Trk.RoadBlockDir2 == 1 && Trk.right2[Trk.currentRight2] != 255)//向右走且右边存在
   \                     ??SpecialStatus_27: (+1)
   \   0000091E   0xF8DF 0x0480      LDR.W    R0,??SpecialStatus_0
   \   00000922   0xF890 0x06D4      LDRB     R0,[R0, #+1748]
   \   00000926   0x2801             CMP      R0,#+1
   \   00000928   0xD15B             BNE.N    ??SpecialStatus_28
   \   0000092A   0xF8DF 0x0474      LDR.W    R0,??SpecialStatus_0
   \   0000092E   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000932   0xF8DF 0x146C      LDR.W    R1,??SpecialStatus_0
   \   00000936   0x1840             ADDS     R0,R0,R1
   \   00000938   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   0000093C   0x28FF             CMP      R0,#+255
   \   0000093E   0xD050             BEQ.N    ??SpecialStatus_28
    693                { Trk.cen2[Trk.currentCen2] = 937 + Trk.right2[Trk.currentRight2] - Trk.RoadBlockWidth2/2 + 0;//重新计算中心坐标
   \   00000940   0xF8DF 0x045C      LDR.W    R0,??SpecialStatus_0
   \   00000944   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000948   0xF8DF 0x1454      LDR.W    R1,??SpecialStatus_0
   \   0000094C   0x1840             ADDS     R0,R0,R1
   \   0000094E   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000952   0xF200 0x30A9      ADDW     R0,R0,#+937
   \   00000956   0xF8DF 0x1448      LDR.W    R1,??SpecialStatus_0
   \   0000095A   0xF891 0x16CE      LDRB     R1,[R1, #+1742]
   \   0000095E   0x2202             MOVS     R2,#+2
   \   00000960   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000964   0x1A40             SUBS     R0,R0,R1
   \   00000966   0xF8DF 0x1438      LDR.W    R1,??SpecialStatus_0
   \   0000096A   0xF8B1 0x166A      LDRH     R1,[R1, #+1642]
   \   0000096E   0xF8DF 0x2430      LDR.W    R2,??SpecialStatus_0
   \   00000972   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000976   0xF8A1 0x04DA      STRH     R0,[R1, #+1242]
    694                  if(Trk.cen2[Trk.currentCen2] < 800){Trk.cen2[Trk.currentCen2] = 800;}
   \   0000097A   0xF8DF 0x0424      LDR.W    R0,??SpecialStatus_0
   \   0000097E   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000982   0xF8DF 0x141C      LDR.W    R1,??SpecialStatus_0
   \   00000986   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000098A   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000098E   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000992   0xDA0C             BGE.N    ??SpecialStatus_29
   \   00000994   0xF8DF 0x0408      LDR.W    R0,??SpecialStatus_0
   \   00000998   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000099C   0xF8DF 0x1400      LDR.W    R1,??SpecialStatus_0
   \   000009A0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000009A4   0xF44F 0x7148      MOV      R1,#+800
   \   000009A8   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
   \   000009AC   0xE036             B.N      ??SpecialStatus_26
    695                  else if(Trk.cen2[Trk.currentCen2] > 1200){Trk.cen2[Trk.currentCen2] = 1200;}
   \                     ??SpecialStatus_29: (+1)
   \   000009AE   0xF8DF 0x03F0      LDR.W    R0,??SpecialStatus_0
   \   000009B2   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000009B6   0xF8DF 0x13E8      LDR.W    R1,??SpecialStatus_0
   \   000009BA   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000009BE   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000009C2   0xF5B0 0x6F96      CMP      R0,#+1200
   \   000009C6   0xDD29             BLE.N    ??SpecialStatus_26
   \   000009C8   0xF8DF 0x03D4      LDR.W    R0,??SpecialStatus_0
   \   000009CC   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000009D0   0xF8DF 0x13CC      LDR.W    R1,??SpecialStatus_0
   \   000009D4   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000009D8   0xF44F 0x6196      MOV      R1,#+1200
   \   000009DC   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
   \   000009E0   0xE01C             B.N      ??SpecialStatus_26
    696                }
    697                else if(Trk.RoadBlockDir2 == 1 && Trk.right2[Trk.currentRight2] == 255){Trk.cen2[Trk.currentCen2] = 1000;}//右边不存在
   \                     ??SpecialStatus_28: (+1)
   \   000009E2   0xF8DF 0x03BC      LDR.W    R0,??SpecialStatus_0
   \   000009E6   0xF890 0x06D4      LDRB     R0,[R0, #+1748]
   \   000009EA   0x2801             CMP      R0,#+1
   \   000009EC   0xD116             BNE.N    ??SpecialStatus_26
   \   000009EE   0xF8DF 0x03B0      LDR.W    R0,??SpecialStatus_0
   \   000009F2   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   000009F6   0xF8DF 0x13A8      LDR.W    R1,??SpecialStatus_0
   \   000009FA   0x1840             ADDS     R0,R0,R1
   \   000009FC   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000A00   0x28FF             CMP      R0,#+255
   \   00000A02   0xD10B             BNE.N    ??SpecialStatus_26
   \   00000A04   0xF8DF 0x0398      LDR.W    R0,??SpecialStatus_0
   \   00000A08   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000A0C   0xF8DF 0x1390      LDR.W    R1,??SpecialStatus_0
   \   00000A10   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000A14   0xF44F 0x717A      MOV      R1,#+1000
   \   00000A18   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    698                //重新计算CCD1中心坐标
    699                if(Trk.RoadBlockDir2 == 0 && Trk.left1[Trk.currentLeft1] != 255)//向左走且左边存在
   \                     ??SpecialStatus_26: (+1)
   \   00000A1C   0xF8DF 0x0380      LDR.W    R0,??SpecialStatus_0
   \   00000A20   0xF890 0x06D4      LDRB     R0,[R0, #+1748]
   \   00000A24   0x2800             CMP      R0,#+0
   \   00000A26   0xD156             BNE.N    ??SpecialStatus_30
   \   00000A28   0xF8DF 0x0374      LDR.W    R0,??SpecialStatus_0
   \   00000A2C   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000A30   0xF8DF 0x136C      LDR.W    R1,??SpecialStatus_0
   \   00000A34   0x1840             ADDS     R0,R0,R1
   \   00000A36   0x7840             LDRB     R0,[R0, #+1]
   \   00000A38   0x28FF             CMP      R0,#+255
   \   00000A3A   0xD04C             BEQ.N    ??SpecialStatus_30
    700                { Trk.cen1[Trk.currentCen1] = 937 + Trk.left1[Trk.currentLeft1] + Trk.RoadBlockWidth2/2 - 0;
   \   00000A3C   0xF8DF 0x0360      LDR.W    R0,??SpecialStatus_0
   \   00000A40   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000A44   0xF8DF 0x1358      LDR.W    R1,??SpecialStatus_0
   \   00000A48   0x1840             ADDS     R0,R0,R1
   \   00000A4A   0x7840             LDRB     R0,[R0, #+1]
   \   00000A4C   0xF8DF 0x1350      LDR.W    R1,??SpecialStatus_0
   \   00000A50   0xF891 0x16CE      LDRB     R1,[R1, #+1742]
   \   00000A54   0x2202             MOVS     R2,#+2
   \   00000A56   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000A5A   0xFA51 0xF080      UXTAB    R0,R1,R0
   \   00000A5E   0xF200 0x30A9      ADDW     R0,R0,#+937
   \   00000A62   0xF8DF 0x133C      LDR.W    R1,??SpecialStatus_0
   \   00000A66   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   00000A6A   0xF8DF 0x2334      LDR.W    R2,??SpecialStatus_0
   \   00000A6E   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000A72   0xF8A1 0x019A      STRH     R0,[R1, #+410]
    701                  if(Trk.cen1[Trk.currentCen1] > 1200){Trk.cen1[Trk.currentCen1] = 1200;}
   \   00000A76   0xF8DF 0x0328      LDR.W    R0,??SpecialStatus_0
   \   00000A7A   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000A7E   0xF8DF 0x1320      LDR.W    R1,??SpecialStatus_0
   \   00000A82   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000A86   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000A8A   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000A8E   0xDD0B             BLE.N    ??SpecialStatus_31
   \   00000A90   0xF8DF 0x030C      LDR.W    R0,??SpecialStatus_0
   \   00000A94   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000A98   0x49C1             LDR.N    R1,??SpecialStatus_0
   \   00000A9A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000A9E   0xF44F 0x6196      MOV      R1,#+1200
   \   00000AA2   0xF8A0 0x119A      STRH     R1,[R0, #+410]
   \   00000AA6   0xE0A1             B.N      ??SpecialStatus_19
    702                  else if(Trk.cen1[Trk.currentCen1] < 800){Trk.cen1[Trk.currentCen1] = 800;}
   \                     ??SpecialStatus_31: (+1)
   \   00000AA8   0x48BD             LDR.N    R0,??SpecialStatus_0
   \   00000AAA   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000AAE   0x49BC             LDR.N    R1,??SpecialStatus_0
   \   00000AB0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000AB4   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000AB8   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000ABC   0xF280 0x8096      BGE.W    ??SpecialStatus_19
   \   00000AC0   0x48B7             LDR.N    R0,??SpecialStatus_0
   \   00000AC2   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000AC6   0x49B6             LDR.N    R1,??SpecialStatus_0
   \   00000AC8   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000ACC   0xF44F 0x7148      MOV      R1,#+800
   \   00000AD0   0xF8A0 0x119A      STRH     R1,[R0, #+410]
   \   00000AD4   0xE08A             B.N      ??SpecialStatus_19
    703                }
    704                else if(Trk.RoadBlockDir2 == 0 && Trk.left1[Trk.currentLeft1] == 255){Trk.cen1[Trk.currentCen1] = 1000;}//左边不存在
   \                     ??SpecialStatus_30: (+1)
   \   00000AD6   0x48B2             LDR.N    R0,??SpecialStatus_0
   \   00000AD8   0xF890 0x06D4      LDRB     R0,[R0, #+1748]
   \   00000ADC   0x2800             CMP      R0,#+0
   \   00000ADE   0xD112             BNE.N    ??SpecialStatus_32
   \   00000AE0   0x48AF             LDR.N    R0,??SpecialStatus_0
   \   00000AE2   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000AE6   0x49AE             LDR.N    R1,??SpecialStatus_0
   \   00000AE8   0x1840             ADDS     R0,R0,R1
   \   00000AEA   0x7840             LDRB     R0,[R0, #+1]
   \   00000AEC   0x28FF             CMP      R0,#+255
   \   00000AEE   0xD10A             BNE.N    ??SpecialStatus_32
   \   00000AF0   0x48AB             LDR.N    R0,??SpecialStatus_0
   \   00000AF2   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000AF6   0x49AA             LDR.N    R1,??SpecialStatus_0
   \   00000AF8   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000AFC   0xF44F 0x717A      MOV      R1,#+1000
   \   00000B00   0xF8A0 0x119A      STRH     R1,[R0, #+410]
   \   00000B04   0xE072             B.N      ??SpecialStatus_19
    705                else if(Trk.RoadBlockDir2 == 1 && Trk.right1[Trk.currentRight1] != 255)//向右走且右边存在
   \                     ??SpecialStatus_32: (+1)
   \   00000B06   0x48A6             LDR.N    R0,??SpecialStatus_0
   \   00000B08   0xF890 0x06D4      LDRB     R0,[R0, #+1748]
   \   00000B0C   0x2801             CMP      R0,#+1
   \   00000B0E   0xD14C             BNE.N    ??SpecialStatus_33
   \   00000B10   0x48A3             LDR.N    R0,??SpecialStatus_0
   \   00000B12   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   00000B16   0x49A2             LDR.N    R1,??SpecialStatus_0
   \   00000B18   0x1840             ADDS     R0,R0,R1
   \   00000B1A   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   00000B1E   0x28FF             CMP      R0,#+255
   \   00000B20   0xD043             BEQ.N    ??SpecialStatus_33
    706                { Trk.cen1[Trk.currentCen1] = 937 + Trk.right1[Trk.currentRight1] - Trk.RoadBlockWidth2/2 + 0;//重新计算中心坐标
   \   00000B22   0x489F             LDR.N    R0,??SpecialStatus_0
   \   00000B24   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   00000B28   0x499D             LDR.N    R1,??SpecialStatus_0
   \   00000B2A   0x1840             ADDS     R0,R0,R1
   \   00000B2C   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   00000B30   0xF200 0x30A9      ADDW     R0,R0,#+937
   \   00000B34   0x499A             LDR.N    R1,??SpecialStatus_0
   \   00000B36   0xF891 0x16CE      LDRB     R1,[R1, #+1742]
   \   00000B3A   0x2202             MOVS     R2,#+2
   \   00000B3C   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000B40   0x1A40             SUBS     R0,R0,R1
   \   00000B42   0x4997             LDR.N    R1,??SpecialStatus_0
   \   00000B44   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   00000B48   0x4A95             LDR.N    R2,??SpecialStatus_0
   \   00000B4A   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000B4E   0xF8A1 0x019A      STRH     R0,[R1, #+410]
    707                  if(Trk.cen1[Trk.currentCen1] < 800){Trk.cen1[Trk.currentCen1] = 800;}
   \   00000B52   0x4893             LDR.N    R0,??SpecialStatus_0
   \   00000B54   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000B58   0x4991             LDR.N    R1,??SpecialStatus_0
   \   00000B5A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000B5E   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000B62   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000B66   0xDA0A             BGE.N    ??SpecialStatus_34
   \   00000B68   0x488D             LDR.N    R0,??SpecialStatus_0
   \   00000B6A   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000B6E   0x498C             LDR.N    R1,??SpecialStatus_0
   \   00000B70   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000B74   0xF44F 0x7148      MOV      R1,#+800
   \   00000B78   0xF8A0 0x119A      STRH     R1,[R0, #+410]
   \   00000B7C   0xE036             B.N      ??SpecialStatus_19
    708                  else if(Trk.cen1[Trk.currentCen1] > 1200){Trk.cen1[Trk.currentCen1] = 1200;}
   \                     ??SpecialStatus_34: (+1)
   \   00000B7E   0x4888             LDR.N    R0,??SpecialStatus_0
   \   00000B80   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000B84   0x4986             LDR.N    R1,??SpecialStatus_0
   \   00000B86   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000B8A   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000B8E   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000B92   0xDD2B             BLE.N    ??SpecialStatus_19
   \   00000B94   0x4882             LDR.N    R0,??SpecialStatus_0
   \   00000B96   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000B9A   0x4981             LDR.N    R1,??SpecialStatus_0
   \   00000B9C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000BA0   0xF44F 0x6196      MOV      R1,#+1200
   \   00000BA4   0xF8A0 0x119A      STRH     R1,[R0, #+410]
   \   00000BA8   0xE020             B.N      ??SpecialStatus_19
    709                }
    710                else if(Trk.RoadBlockDir2 == 1 && Trk.right1[Trk.currentRight1] == 255){Trk.cen1[Trk.currentCen1] = 1000;}//右边不存在
   \                     ??SpecialStatus_33: (+1)
   \   00000BAA   0x487D             LDR.N    R0,??SpecialStatus_0
   \   00000BAC   0xF890 0x06D4      LDRB     R0,[R0, #+1748]
   \   00000BB0   0x2801             CMP      R0,#+1
   \   00000BB2   0xD11B             BNE.N    ??SpecialStatus_19
   \   00000BB4   0x487A             LDR.N    R0,??SpecialStatus_0
   \   00000BB6   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   00000BBA   0x4979             LDR.N    R1,??SpecialStatus_0
   \   00000BBC   0x1840             ADDS     R0,R0,R1
   \   00000BBE   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   00000BC2   0x28FF             CMP      R0,#+255
   \   00000BC4   0xD112             BNE.N    ??SpecialStatus_19
   \   00000BC6   0x4876             LDR.N    R0,??SpecialStatus_0
   \   00000BC8   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000BCC   0x4974             LDR.N    R1,??SpecialStatus_0
   \   00000BCE   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000BD2   0xF44F 0x717A      MOV      R1,#+1000
   \   00000BD6   0xF8A0 0x119A      STRH     R1,[R0, #+410]
   \   00000BDA   0xE007             B.N      ??SpecialStatus_19
    711              }
    712              else{ Give.forceSpeed = 0;Trk.SpecialStatus = 0;}//取消强制给定速度，退出路障
   \                     ??SpecialStatus_23: (+1)
   \   00000BDC   0xF8DF 0x04F4      LDR.W    R0,??SpecialStatus_6
   \   00000BE0   0x2100             MOVS     R1,#+0
   \   00000BE2   0x8041             STRH     R1,[R0, #+2]
   \   00000BE4   0x486E             LDR.N    R0,??SpecialStatus_0
   \   00000BE6   0x2100             MOVS     R1,#+0
   \   00000BE8   0xF880 0x169C      STRB     R1,[R0, #+1692]
    713            }
    714            //*****************************************************************************************
    715            //-----------------------------------------------------------------------------------------
    716            //----------------------------------------坡道检测-----------------------------------------
    717            //-----------------------------------------------------------------------------------------
    718            //*****************************************************************************************
    719            //if(Con.EnableRamp == 1 && Con.Run == 2 && Trk.SpecialStatus == 0)
    720            if(Con.EnableRamp == 1&& Con.Run == 2 && Trk.SpecialStatus == 0
    721               && Trk.cen1[Trk.currentCen1] < 1000+10 && Trk.cen1[Trk.currentCen1] > 1000-10 //当前CCD1中线处于中值附近    
    722               && Trk.cen2[Trk.currentCen2] < 1000+10 && Trk.cen2[Trk.currentCen2] > 1000-10 //当前CCD2中线处于中值附近
    723               && Trk.left2[Trk.currentLeft2] != 255 && Trk.right2[Trk.currentRight2] != 255 //当前CCD2双边存在
    724               && Trk.left1[Trk.currentLeft1] != 255 && Trk.right1[Trk.currentRight1] != 255 //当前CCD1双边存在
    725               && Trk.Width1 >= 1.2*CCD1TrkWidth //CCD1赛道宽度大于1.2倍正常直道宽度
    726               && Trk.Width2 >= 1.25*CCD2TrkWidth //CCD2赛道宽度大于1.25倍正常直道宽度
    727               //&& (Trk.RampRoad1 == 0 || (Trk.RampRoad1 != 0 && Con.TotalRoad - Trk.RampRoad1 >= 60000) )//防止坡道上连续检测
    728               )
   \                     ??SpecialStatus_19: (+1)
   \   00000BEC   0x486D             LDR.N    R0,??SpecialStatus_0+0x4
   \   00000BEE   0xF890 0x0035      LDRB     R0,[R0, #+53]
   \   00000BF2   0x2801             CMP      R0,#+1
   \   00000BF4   0xD15C             BNE.N    ??SpecialStatus_35
   \   00000BF6   0x486B             LDR.N    R0,??SpecialStatus_0+0x4
   \   00000BF8   0x7B00             LDRB     R0,[R0, #+12]
   \   00000BFA   0x2802             CMP      R0,#+2
   \   00000BFC   0xD158             BNE.N    ??SpecialStatus_35
   \   00000BFE   0x4868             LDR.N    R0,??SpecialStatus_0
   \   00000C00   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000C04   0x2800             CMP      R0,#+0
   \   00000C06   0xD153             BNE.N    ??SpecialStatus_35
   \   00000C08   0x4865             LDR.N    R0,??SpecialStatus_0
   \   00000C0A   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000C0E   0x4964             LDR.N    R1,??SpecialStatus_0
   \   00000C10   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000C14   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000C18   0xF2A0 0x30DF      SUBW     R0,R0,#+991
   \   00000C1C   0x2813             CMP      R0,#+19
   \   00000C1E   0xD247             BCS.N    ??SpecialStatus_35
   \   00000C20   0x485F             LDR.N    R0,??SpecialStatus_0
   \   00000C22   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000C26   0x495E             LDR.N    R1,??SpecialStatus_0
   \   00000C28   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000C2C   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000C30   0xF2A0 0x30DF      SUBW     R0,R0,#+991
   \   00000C34   0x2813             CMP      R0,#+19
   \   00000C36   0xD23B             BCS.N    ??SpecialStatus_35
   \   00000C38   0x4859             LDR.N    R0,??SpecialStatus_0
   \   00000C3A   0xF8B0 0x040A      LDRH     R0,[R0, #+1034]
   \   00000C3E   0x4958             LDR.N    R1,??SpecialStatus_0
   \   00000C40   0x1840             ADDS     R0,R0,R1
   \   00000C42   0xF890 0x0342      LDRB     R0,[R0, #+834]
   \   00000C46   0x28FF             CMP      R0,#+255
   \   00000C48   0xD032             BEQ.N    ??SpecialStatus_35
   \   00000C4A   0x4855             LDR.N    R0,??SpecialStatus_0
   \   00000C4C   0xF8B0 0x04D6      LDRH     R0,[R0, #+1238]
   \   00000C50   0x4953             LDR.N    R1,??SpecialStatus_0
   \   00000C52   0x1840             ADDS     R0,R0,R1
   \   00000C54   0xF890 0x040E      LDRB     R0,[R0, #+1038]
   \   00000C58   0x28FF             CMP      R0,#+255
   \   00000C5A   0xD029             BEQ.N    ??SpecialStatus_35
   \   00000C5C   0x4850             LDR.N    R0,??SpecialStatus_0
   \   00000C5E   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000C62   0x494F             LDR.N    R1,??SpecialStatus_0
   \   00000C64   0x1840             ADDS     R0,R0,R1
   \   00000C66   0x7840             LDRB     R0,[R0, #+1]
   \   00000C68   0x28FF             CMP      R0,#+255
   \   00000C6A   0xD021             BEQ.N    ??SpecialStatus_35
   \   00000C6C   0x484C             LDR.N    R0,??SpecialStatus_0
   \   00000C6E   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   00000C72   0x494B             LDR.N    R1,??SpecialStatus_0
   \   00000C74   0x1840             ADDS     R0,R0,R1
   \   00000C76   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   00000C7A   0x28FF             CMP      R0,#+255
   \   00000C7C   0xD018             BEQ.N    ??SpecialStatus_35
   \   00000C7E   0x4848             LDR.N    R0,??SpecialStatus_0
   \   00000C80   0xF890 0x032E      LDRB     R0,[R0, #+814]
   \   00000C84   0x284B             CMP      R0,#+75
   \   00000C86   0xD313             BCC.N    ??SpecialStatus_35
   \   00000C88   0x4845             LDR.N    R0,??SpecialStatus_0
   \   00000C8A   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   00000C8E   0x2855             CMP      R0,#+85
   \   00000C90   0xD30E             BCC.N    ??SpecialStatus_35
    729            {   Trk.SpecialStatus = 41;//特殊状态：坡道
   \   00000C92   0x4843             LDR.N    R0,??SpecialStatus_0
   \   00000C94   0x2129             MOVS     R1,#+41
   \   00000C96   0xF880 0x169C      STRB     R1,[R0, #+1692]
    730                Trk.RampRoad1 = Con.TotalRoad;//记录检测到坡道的路程
   \   00000C9A   0x4841             LDR.N    R0,??SpecialStatus_0
   \   00000C9C   0x4941             LDR.N    R1,??SpecialStatus_0+0x4
   \   00000C9E   0x6849             LDR      R1,[R1, #+4]
   \   00000CA0   0xF8C0 0x16E8      STR      R1,[R0, #+1768]
    731                Trk.RampTime1 = Con.TotalTime;//记录检测到坡道的时间  
   \   00000CA4   0x483E             LDR.N    R0,??SpecialStatus_0
   \   00000CA6   0x493F             LDR.N    R1,??SpecialStatus_0+0x4
   \   00000CA8   0x6889             LDR      R1,[R1, #+8]
   \   00000CAA   0xF8C0 0x16EC      STR      R1,[R0, #+1772]
   \   00000CAE   0xE0DD             B.N      ??SpecialStatus_36
    732            }
    733            else if(Trk.SpecialStatus == 41)//坡道待确认
   \                     ??SpecialStatus_35: (+1)
   \   00000CB0   0x483B             LDR.N    R0,??SpecialStatus_0
   \   00000CB2   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000CB6   0x2829             CMP      R0,#+41
   \   00000CB8   0xD176             BNE.N    ??SpecialStatus_37
    734            {
    735              if(Gyroscope.Gyroscope[Gyroscope.currentGyro] < 87 //陀螺仪值小于某一值
    736                 && Trk.Width1 >= 1.1*CCD1TrkWidth //赛道宽度大于等于1.1倍正常直道宽度
    737                 && Trk.cen1[Trk.currentCen1] < 1000+10 && Trk.cen1[Trk.currentCen1] > 1000-10 //当前CCD1中线处于中值附近 
    738                 && Trk.left1[Trk.currentLeft1] != 255 && Trk.right1[Trk.currentRight1] != 255 //当前CCD1双边存在
    739                 )
   \   00000CBA   0x.... 0x....      LDR.W    R0,??DataTable4
   \   00000CBE   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00000CC2   0x.... 0x....      LDR.W    R1,??DataTable4
   \   00000CC6   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   00000CCA   0x2857             CMP      R0,#+87
   \   00000CCC   0xDA59             BGE.N    ??SpecialStatus_38
   \   00000CCE   0x4834             LDR.N    R0,??SpecialStatus_0
   \   00000CD0   0xF890 0x032E      LDRB     R0,[R0, #+814]
   \   00000CD4   0x2845             CMP      R0,#+69
   \   00000CD6   0xD354             BCC.N    ??SpecialStatus_38
   \   00000CD8   0x4831             LDR.N    R0,??SpecialStatus_0
   \   00000CDA   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000CDE   0x4930             LDR.N    R1,??SpecialStatus_0
   \   00000CE0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000CE4   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000CE8   0xF2A0 0x30DF      SUBW     R0,R0,#+991
   \   00000CEC   0x2813             CMP      R0,#+19
   \   00000CEE   0xD248             BCS.N    ??SpecialStatus_38
   \   00000CF0   0x482B             LDR.N    R0,??SpecialStatus_0
   \   00000CF2   0xF8B0 0x00CA      LDRH     R0,[R0, #+202]
   \   00000CF6   0x492A             LDR.N    R1,??SpecialStatus_0
   \   00000CF8   0x1840             ADDS     R0,R0,R1
   \   00000CFA   0x7840             LDRB     R0,[R0, #+1]
   \   00000CFC   0x28FF             CMP      R0,#+255
   \   00000CFE   0xD040             BEQ.N    ??SpecialStatus_38
   \   00000D00   0x4827             LDR.N    R0,??SpecialStatus_0
   \   00000D02   0xF8B0 0x0196      LDRH     R0,[R0, #+406]
   \   00000D06   0x4926             LDR.N    R1,??SpecialStatus_0
   \   00000D08   0x1840             ADDS     R0,R0,R1
   \   00000D0A   0xF890 0x00CE      LDRB     R0,[R0, #+206]
   \   00000D0E   0x28FF             CMP      R0,#+255
   \   00000D10   0xD037             BEQ.N    ??SpecialStatus_38
    740              { Trk.SpecialStatus = 42;//特殊状态：坡道确认
   \   00000D12   0x4823             LDR.N    R0,??SpecialStatus_0
   \   00000D14   0x212A             MOVS     R1,#+42
   \   00000D16   0xF880 0x169C      STRB     R1,[R0, #+1692]
    741                Give.forceSpeed = 3;//强制给定速度来源：坡道速度
   \   00000D1A   0xF8DF 0x03B8      LDR.W    R0,??SpecialStatus_6
   \   00000D1E   0x2103             MOVS     R1,#+3
   \   00000D20   0x8041             STRH     R1,[R0, #+2]
    742                Give.MotorRampSpeed = 150;//强制给定坡道速度150
   \   00000D22   0xF8DF 0x03B0      LDR.W    R0,??SpecialStatus_6
   \   00000D26   0x2196             MOVS     R1,#+150
   \   00000D28   0x8141             STRH     R1,[R0, #+10]
    743                if(Trk.cen2[Trk.currentCen2] > 1000+10){Trk.cen2[Trk.currentCen2] = 1010;}//防止坡道乱打角
   \   00000D2A   0x481D             LDR.N    R0,??SpecialStatus_0
   \   00000D2C   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000D30   0x491B             LDR.N    R1,??SpecialStatus_0
   \   00000D32   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000D36   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000D3A   0xF240 0x31F3      MOVW     R1,#+1011
   \   00000D3E   0x4288             CMP      R0,R1
   \   00000D40   0xDB09             BLT.N    ??SpecialStatus_39
   \   00000D42   0x4817             LDR.N    R0,??SpecialStatus_0
   \   00000D44   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000D48   0x4915             LDR.N    R1,??SpecialStatus_0
   \   00000D4A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000D4E   0xF240 0x31F2      MOVW     R1,#+1010
   \   00000D52   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    744                if(Trk.cen2[Trk.currentCen2] < 1000-10){Trk.cen2[Trk.currentCen2] = 990;}//防止坡道乱打角
   \                     ??SpecialStatus_39: (+1)
   \   00000D56   0x4812             LDR.N    R0,??SpecialStatus_0
   \   00000D58   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000D5C   0x4910             LDR.N    R1,??SpecialStatus_0
   \   00000D5E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000D62   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000D66   0xF240 0x31DE      MOVW     R1,#+990
   \   00000D6A   0x4288             CMP      R0,R1
   \   00000D6C   0xDA09             BGE.N    ??SpecialStatus_38
   \   00000D6E   0x480C             LDR.N    R0,??SpecialStatus_0
   \   00000D70   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000D74   0x490A             LDR.N    R1,??SpecialStatus_0
   \   00000D76   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000D7A   0xF240 0x31DE      MOVW     R1,#+990
   \   00000D7E   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    745              }
    746              if(Con.TotalRoad - Trk.RampRoad1 > 4000)//未通过坡道确认
   \                     ??SpecialStatus_38: (+1)
   \   00000D82   0x4808             LDR.N    R0,??SpecialStatus_0+0x4
   \   00000D84   0x6840             LDR      R0,[R0, #+4]
   \   00000D86   0x4906             LDR.N    R1,??SpecialStatus_0
   \   00000D88   0xF8D1 0x16E8      LDR      R1,[R1, #+1768]
   \   00000D8C   0x1A40             SUBS     R0,R0,R1
   \   00000D8E   0xF5B0 0x6F7A      CMP      R0,#+4000
   \   00000D92   0xD96B             BLS.N    ??SpecialStatus_36
    747              { Trk.SpecialStatus = 0;//清0特殊状态
   \   00000D94   0x4802             LDR.N    R0,??SpecialStatus_0
   \   00000D96   0x2100             MOVS     R1,#+0
   \   00000D98   0xF880 0x169C      STRB     R1,[R0, #+1692]
   \   00000D9C   0xE066             B.N      ??SpecialStatus_36
   \   00000D9E   0xBF00             Nop      
   \                     ??SpecialStatus_0:
   \   00000DA0   0x........         DC32     Trk
   \   00000DA4   0x........         DC32     Con
    748              }
    749            }
    750            else if(Trk.SpecialStatus == 42)//坡道确认
   \                     ??SpecialStatus_37: (+1)
   \   00000DA8   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000DAC   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000DB0   0x282A             CMP      R0,#+42
   \   00000DB2   0xD15B             BNE.N    ??SpecialStatus_36
    751            { if(Trk.cen2[Trk.currentCen2] > 1000+10){Trk.cen2[Trk.currentCen2] = 1010;}//防止坡道乱打角
   \   00000DB4   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000DB8   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000DBC   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000DC0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000DC4   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000DC8   0xF240 0x31F3      MOVW     R1,#+1011
   \   00000DCC   0x4288             CMP      R0,R1
   \   00000DCE   0xDB0B             BLT.N    ??SpecialStatus_40
   \   00000DD0   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000DD4   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000DD8   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000DDC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000DE0   0xF240 0x31F2      MOVW     R1,#+1010
   \   00000DE4   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    752              if(Trk.cen2[Trk.currentCen2] < 1000-10){Trk.cen2[Trk.currentCen2] = 990;}//防止坡道乱打角
   \                     ??SpecialStatus_40: (+1)
   \   00000DE8   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000DEC   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000DF0   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000DF4   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000DF8   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000DFC   0xF240 0x31DE      MOVW     R1,#+990
   \   00000E00   0x4288             CMP      R0,R1
   \   00000E02   0xDA0B             BGE.N    ??SpecialStatus_41
   \   00000E04   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000E08   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000E0C   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000E10   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000E14   0xF240 0x31DE      MOVW     R1,#+990
   \   00000E18   0xF8A0 0x14DA      STRH     R1,[R0, #+1242]
    753              if(Con.TotalRoad - Trk.RampRoad1 > 33000 //超过坡道路程
    754                 || (Trk.Width1 >= 1.1*CCD1TrkWidth //赛道宽度大于等于1.1倍正常直道宽度(可能是下坡才检测到，然后入弯)
    755                     &&(Trk.cen1[Trk.currentCen1] > 1000+20 || Trk.cen1[Trk.currentCen1] < 1000-20)) //当前CCD1中线不处于中值附近
    756                 )
   \                     ??SpecialStatus_41: (+1)
   \   00000E1C   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000E20   0x6840             LDR      R0,[R0, #+4]
   \   00000E22   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000E26   0xF8D1 0x16E8      LDR      R1,[R1, #+1768]
   \   00000E2A   0x1A40             SUBS     R0,R0,R1
   \   00000E2C   0xF248 0x01E9      MOVW     R1,#+33001
   \   00000E30   0x4288             CMP      R0,R1
   \   00000E32   0xD213             BCS.N    ??SpecialStatus_42
   \   00000E34   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000E38   0xF890 0x032E      LDRB     R0,[R0, #+814]
   \   00000E3C   0x2845             CMP      R0,#+69
   \   00000E3E   0xD315             BCC.N    ??SpecialStatus_36
   \   00000E40   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000E44   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000E48   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000E4C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000E50   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000E54   0xF5B0 0x7075      SUBS     R0,R0,#+980
   \   00000E58   0x2829             CMP      R0,#+41
   \   00000E5A   0xD307             BCC.N    ??SpecialStatus_36
    757              { Trk.SpecialStatus = 0;//清0特殊状态
   \                     ??SpecialStatus_42: (+1)
   \   00000E5C   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000E60   0x2100             MOVS     R1,#+0
   \   00000E62   0xF880 0x169C      STRB     R1,[R0, #+1692]
    758                Give.forceSpeed = 0;//取消强制给定速度
   \   00000E66   0x489B             LDR.N    R0,??SpecialStatus_6
   \   00000E68   0x2100             MOVS     R1,#+0
   \   00000E6A   0x8041             STRH     R1,[R0, #+2]
    759              }
    760            }
    761            //*****************************************************************************************
    762            //-----------------------------------------------------------------------------------------
    763            //---------------------------------------起跑线检测----------------------------------------
    764            //-----------------------------------------------------------------------------------------
    765            //*****************************************************************************************
    766            if(Con.EnableStartline == 1 && Trk.SpecialStatus != 41 && Trk.SpecialStatus != 42
    767               && Con.Run == 2 && Trk.StartLine == 0)//第一次检测起跑线
   \                     ??SpecialStatus_36: (+1)
   \   00000E6C   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000E70   0xF890 0x0036      LDRB     R0,[R0, #+54]
   \   00000E74   0x2801             CMP      R0,#+1
   \   00000E76   0xD13D             BNE.N    ??SpecialStatus_43
   \   00000E78   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000E7C   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000E80   0x2829             CMP      R0,#+41
   \   00000E82   0xD037             BEQ.N    ??SpecialStatus_43
   \   00000E84   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000E88   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000E8C   0x282A             CMP      R0,#+42
   \   00000E8E   0xD031             BEQ.N    ??SpecialStatus_43
   \   00000E90   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000E94   0x7B00             LDRB     R0,[R0, #+12]
   \   00000E96   0x2802             CMP      R0,#+2
   \   00000E98   0xD12C             BNE.N    ??SpecialStatus_43
   \   00000E9A   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000E9E   0xF890 0x06D5      LDRB     R0,[R0, #+1749]
   \   00000EA2   0x2800             CMP      R0,#+0
   \   00000EA4   0xD126             BNE.N    ??SpecialStatus_43
    768            { //两个红外管同时为低电平判断为检测到起跑线（处于坡道时不检测）
    769              if(Infrared.Infrared1[Infrared.currentInfrared] == 0 && Infrared.Infrared2[Infrared.currentInfrared] == 0)
   \   00000EA6   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00000EAA   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00000EAE   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00000EB2   0x5C40             LDRB     R0,[R0, R1]
   \   00000EB4   0x2800             CMP      R0,#+0
   \   00000EB6   0xD11D             BNE.N    ??SpecialStatus_43
   \   00000EB8   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00000EBC   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00000EC0   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00000EC4   0x1840             ADDS     R0,R0,R1
   \   00000EC6   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \   00000ECA   0x2800             CMP      R0,#+0
   \   00000ECC   0xD112             BNE.N    ??SpecialStatus_43
    770              { //记录第一次检测到起跑线时的时间和路程
    771                Trk.StartLine1time = Con.TotalTime;
   \   00000ECE   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000ED2   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000ED6   0x6889             LDR      R1,[R1, #+8]
   \   00000ED8   0xF8C0 0x16D8      STR      R1,[R0, #+1752]
    772                Trk.StartLine1road = Con.TotalRoad;
   \   00000EDC   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000EE0   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000EE4   0x6849             LDR      R1,[R1, #+4]
   \   00000EE6   0xF8C0 0x16E0      STR      R1,[R0, #+1760]
    773                Trk.StartLine = 1;
   \   00000EEA   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000EEE   0x2101             MOVS     R1,#+1
   \   00000EF0   0xF880 0x16D5      STRB     R1,[R0, #+1749]
    774              }
    775            }
    776            
    777            if(Con.EnableStartline == 1 && Trk.SpecialStatus != 41 && Con.Run == 2 && Trk.StartLine == 1)//第二次检测起跑线
   \                     ??SpecialStatus_43: (+1)
   \   00000EF4   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000EF8   0xF890 0x0036      LDRB     R0,[R0, #+54]
   \   00000EFC   0x2801             CMP      R0,#+1
   \   00000EFE   0xD15A             BNE.N    ??SpecialStatus_44
   \   00000F00   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000F04   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000F08   0x2829             CMP      R0,#+41
   \   00000F0A   0xD054             BEQ.N    ??SpecialStatus_44
   \   00000F0C   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000F10   0x7B00             LDRB     R0,[R0, #+12]
   \   00000F12   0x2802             CMP      R0,#+2
   \   00000F14   0xD14F             BNE.N    ??SpecialStatus_44
   \   00000F16   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000F1A   0xF890 0x06D5      LDRB     R0,[R0, #+1749]
   \   00000F1E   0x2801             CMP      R0,#+1
   \   00000F20   0xD149             BNE.N    ??SpecialStatus_44
    778            { //第一次起跑线往后2秒并且路程超过5000个脉冲才检测第二次
    779              if(Con.TotalRoad - Trk.StartLine1road > 5000 && Con.TotalTime - Trk.StartLine1time > 2000)
   \   00000F22   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000F26   0x6840             LDR      R0,[R0, #+4]
   \   00000F28   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000F2C   0xF8D1 0x16E0      LDR      R1,[R1, #+1760]
   \   00000F30   0x1A40             SUBS     R0,R0,R1
   \   00000F32   0xF241 0x3189      MOVW     R1,#+5001
   \   00000F36   0x4288             CMP      R0,R1
   \   00000F38   0xD33D             BCC.N    ??SpecialStatus_44
   \   00000F3A   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000F3E   0x6880             LDR      R0,[R0, #+8]
   \   00000F40   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   00000F44   0xF8D1 0x16D8      LDR      R1,[R1, #+1752]
   \   00000F48   0x1A40             SUBS     R0,R0,R1
   \   00000F4A   0xF5B0 0x6FFA      CMP      R0,#+2000
   \   00000F4E   0xD932             BLS.N    ??SpecialStatus_44
    780              { //两个红外管同时为低电平判断为检测到起跑线（处于坡道时不检测）
    781                if(Infrared.Infrared1[Infrared.currentInfrared] == 0 && Infrared.Infrared2[Infrared.currentInfrared] == 0)
   \   00000F50   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00000F54   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00000F58   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00000F5C   0x5C40             LDRB     R0,[R0, R1]
   \   00000F5E   0x2800             CMP      R0,#+0
   \   00000F60   0xD129             BNE.N    ??SpecialStatus_44
   \   00000F62   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00000F66   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00000F6A   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00000F6E   0x1840             ADDS     R0,R0,R1
   \   00000F70   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \   00000F74   0x2800             CMP      R0,#+0
   \   00000F76   0xD11E             BNE.N    ??SpecialStatus_44
    782                { //记录第二次检测到起跑线时的时间和路程
    783                  Trk.StartLine2time = Con.TotalTime;
   \   00000F78   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000F7C   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000F80   0x6889             LDR      R1,[R1, #+8]
   \   00000F82   0xF8C0 0x16DC      STR      R1,[R0, #+1756]
    784                  Trk.StartLine2road = Con.TotalRoad;
   \   00000F86   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000F8A   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000F8E   0x6849             LDR      R1,[R1, #+4]
   \   00000F90   0xF8C0 0x16E4      STR      R1,[R0, #+1764]
    785                  Trk.StartLine = 2;
   \   00000F94   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000F98   0x2102             MOVS     R1,#+2
   \   00000F9A   0xF880 0x16D5      STRB     R1,[R0, #+1749]
    786                  Con.Run = 3;//进入停止阶段
   \   00000F9E   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000FA2   0x2103             MOVS     R1,#+3
   \   00000FA4   0x7301             STRB     R1,[R0, #+12]
    787                  Trk.SpecialStatus = 71;//特殊状态标志改为：第二次起跑线停车
   \   00000FA6   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000FAA   0x2147             MOVS     R1,#+71
   \   00000FAC   0xF880 0x169C      STRB     R1,[R0, #+1692]
    788                  Give.forceSpeed = 10;//强制给定速度0
   \   00000FB0   0x4848             LDR.N    R0,??SpecialStatus_6
   \   00000FB2   0x210A             MOVS     R1,#+10
   \   00000FB4   0x8041             STRH     R1,[R0, #+2]
    789                }
    790              }
    791            }
    792            //*****************************************************************************************
    793            //-----------------------------------------------------------------------------------------
    794            //--------------------------------------冲出赛道检测---------------------------------------
    795            //-----------------------------------------------------------------------------------------
    796            //*****************************************************************************************
    797            if(Con.EnableCrash == 1 & Con.Run == 2 && Trk.SpecialStatus != 41 && Trk.SpecialStatus != 42 
    798               && Trk.SpecialStatus != 71
    799               && Con.TotalTime - Con.Run2time > 2000
    800               && Con.TotalRoad - Con.Run2road > 20000)//正式起跑阶段2秒内不检测冲出赛道，防止起跑线误检测
   \                     ??SpecialStatus_44: (+1)
   \   00000FB6   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00000FBA   0xF890 0x0037      LDRB     R0,[R0, #+55]
   \   00000FBE   0x2801             CMP      R0,#+1
   \   00000FC0   0xF040 0x80E7      BNE.W    ??SpecialStatus_45
   \   00000FC4   0x2001             MOVS     R0,#+1
   \   00000FC6   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00000FCA   0x7B09             LDRB     R1,[R1, #+12]
   \   00000FCC   0x2902             CMP      R1,#+2
   \   00000FCE   0xF040 0x80E0      BNE.W    ??SpecialStatus_45
   \   00000FD2   0x07C0             LSLS     R0,R0,#+31
   \   00000FD4   0xF140 0x80DD      BPL.W    ??SpecialStatus_45
   \   00000FD8   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000FDC   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000FE0   0x2829             CMP      R0,#+41
   \   00000FE2   0xF000 0x80D6      BEQ.W    ??SpecialStatus_45
   \   00000FE6   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000FEA   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000FEE   0x282A             CMP      R0,#+42
   \   00000FF0   0xF000 0x80CF      BEQ.W    ??SpecialStatus_45
   \   00000FF4   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00000FF8   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000FFC   0x2847             CMP      R0,#+71
   \   00000FFE   0xF000 0x80C8      BEQ.W    ??SpecialStatus_45
   \   00001002   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   00001006   0x6880             LDR      R0,[R0, #+8]
   \   00001008   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   0000100C   0x6949             LDR      R1,[R1, #+20]
   \   0000100E   0x1A40             SUBS     R0,R0,R1
   \   00001010   0xF5B0 0x6FFA      CMP      R0,#+2000
   \   00001014   0xF240 0x80BD      BLS.W    ??SpecialStatus_45
   \   00001018   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   0000101C   0x6840             LDR      R0,[R0, #+4]
   \   0000101E   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00001022   0x6A49             LDR      R1,[R1, #+36]
   \   00001024   0x1A40             SUBS     R0,R0,R1
   \   00001026   0xF644 0x6121      MOVW     R1,#+20001
   \   0000102A   0x4288             CMP      R0,R1
   \   0000102C   0xF0C0 0x80B1      BCC.W    ??SpecialStatus_45
    801            { if(Trk.SpecialStatus == 0)
   \   00001030   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00001034   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00001038   0x2800             CMP      R0,#+0
   \   0000103A   0xD14F             BNE.N    ??SpecialStatus_46
    802              { //若只有左对管检测到低电平
    803                if(Infrared.Infrared1[Infrared.currentInfrared] == 0 && Infrared.Infrared2[Infrared.currentInfrared] == 1)
   \   0000103C   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00001040   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00001044   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00001048   0x5C40             LDRB     R0,[R0, R1]
   \   0000104A   0x2800             CMP      R0,#+0
   \   0000104C   0xD11C             BNE.N    ??SpecialStatus_47
   \   0000104E   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   00001052   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00001056   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   0000105A   0x1840             ADDS     R0,R0,R1
   \   0000105C   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \   00001060   0x2801             CMP      R0,#+1
   \   00001062   0xD111             BNE.N    ??SpecialStatus_47
    804                { Trk.SpecialStatus = 51;//有一个对管检测到低电平，冲出赛道待确认
   \   00001064   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00001068   0x2133             MOVS     R1,#+51
   \   0000106A   0xF880 0x169C      STRB     R1,[R0, #+1692]
    805                  Trk.CrashFirst = 0;//首先左对管检测到低电平
   \   0000106E   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00001072   0x2100             MOVS     R1,#+0
   \   00001074   0xF880 0x16F4      STRB     R1,[R0, #+1780]
    806                  Trk.CrashRoad = Con.TotalRoad;//记录第一个对管检测到低电平的路程
   \   00001078   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000107C   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   00001080   0x6849             LDR      R1,[R1, #+4]
   \   00001082   0xF8C0 0x16F0      STR      R1,[R0, #+1776]
   \   00001086   0xE084             B.N      ??SpecialStatus_45
    807                }
    808                //若只有右对管检测到低电平
    809                else if(Infrared.Infrared1[Infrared.currentInfrared] == 1 && Infrared.Infrared2[Infrared.currentInfrared] == 0)
   \                     ??SpecialStatus_47: (+1)
   \   00001088   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   0000108C   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00001090   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00001094   0x5C40             LDRB     R0,[R0, R1]
   \   00001096   0x2801             CMP      R0,#+1
   \   00001098   0xD17B             BNE.N    ??SpecialStatus_45
   \   0000109A   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   0000109E   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   000010A2   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   000010A6   0x1840             ADDS     R0,R0,R1
   \   000010A8   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \   000010AC   0x2800             CMP      R0,#+0
   \   000010AE   0xD170             BNE.N    ??SpecialStatus_45
    810                { Trk.SpecialStatus = 51;//有一个对管检测到低电平，冲出赛道待确认
   \   000010B0   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000010B4   0x2133             MOVS     R1,#+51
   \   000010B6   0xF880 0x169C      STRB     R1,[R0, #+1692]
    811                  Trk.CrashFirst = 1;//首先右对管检测到低电平
   \   000010BA   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000010BE   0x2101             MOVS     R1,#+1
   \   000010C0   0xF880 0x16F4      STRB     R1,[R0, #+1780]
    812                  Trk.CrashRoad = Con.TotalRoad;//记录第一个对管检测到低电平的路程
   \   000010C4   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000010C8   0x.... 0x....      LDR.W    R1,??DataTable4_2
   \   000010CC   0x6849             LDR      R1,[R1, #+4]
   \   000010CE   0xF8C0 0x16F0      STR      R1,[R0, #+1776]
   \   000010D2   0xE05E             B.N      ??SpecialStatus_45
   \                     ??SpecialStatus_6:
   \   000010D4   0x........         DC32     Give
   \   000010D8   0x........         DC32     Encoder
    813                }
    814              }
    815              else if(Trk.SpecialStatus == 51)
   \                     ??SpecialStatus_46: (+1)
   \   000010DC   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   000010E0   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   000010E4   0x2833             CMP      R0,#+51
   \   000010E6   0xD154             BNE.N    ??SpecialStatus_45
    816              { //若3000个脉冲过去没有检测到另一个对管低电平，则取消全黑
    817                if(Con.TotalRoad - Trk.CrashRoad >3000){Trk.SpecialStatus = 0;}
   \   000010E8   0x.... 0x....      LDR.W    R0,??DataTable4_2
   \   000010EC   0x6840             LDR      R0,[R0, #+4]
   \   000010EE   0x.... 0x....      LDR.W    R1,??DataTable4_1
   \   000010F2   0xF8D1 0x16F0      LDR      R1,[R1, #+1776]
   \   000010F6   0x1A40             SUBS     R0,R0,R1
   \   000010F8   0xF640 0x31B9      MOVW     R1,#+3001
   \   000010FC   0x4288             CMP      R0,R1
   \   000010FE   0xD304             BCC.N    ??SpecialStatus_48
   \   00001100   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   00001104   0x2100             MOVS     R1,#+0
   \   00001106   0xF880 0x169C      STRB     R1,[R0, #+1692]
    818                //若另一个对管也检测到低电平
    819                if(Trk.CrashFirst == 0 
    820                && Infrared.Infrared1[Infrared.currentInfrared] == 1 && Infrared.Infrared2[Infrared.currentInfrared] == 0)
   \                     ??SpecialStatus_48: (+1)
   \   0000110A   0x.... 0x....      LDR.W    R0,??DataTable4_1
   \   0000110E   0xF890 0x06F4      LDRB     R0,[R0, #+1780]
   \   00001112   0x2800             CMP      R0,#+0
   \   00001114   0xD11D             BNE.N    ??SpecialStatus_49
   \   00001116   0x.... 0x....      LDR.W    R0,??DataTable4_3
   \   0000111A   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   0000111E   0x.... 0x....      LDR.W    R1,??DataTable4_3
   \   00001122   0x5C40             LDRB     R0,[R0, R1]
   \   00001124   0x2801             CMP      R0,#+1
   \   00001126   0xD114             BNE.N    ??SpecialStatus_49
   \   00001128   0x....             LDR.N    R0,??DataTable4_3
   \   0000112A   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   0000112E   0x....             LDR.N    R1,??DataTable4_3
   \   00001130   0x1840             ADDS     R0,R0,R1
   \   00001132   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \   00001136   0x2800             CMP      R0,#+0
   \   00001138   0xD10B             BNE.N    ??SpecialStatus_49
    821                { Trk.SpecialStatus = 52;//确认冲出赛道
   \   0000113A   0x....             LDR.N    R0,??DataTable4_1
   \   0000113C   0x2134             MOVS     R1,#+52
   \   0000113E   0xF880 0x169C      STRB     R1,[R0, #+1692]
    822                  Con.Run = 3;//停车
   \   00001142   0x....             LDR.N    R0,??DataTable4_2
   \   00001144   0x2103             MOVS     R1,#+3
   \   00001146   0x7301             STRB     R1,[R0, #+12]
    823                  Give.forceSpeed = 10;//强制给定速度0
   \   00001148   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000114C   0x210A             MOVS     R1,#+10
   \   0000114E   0x8041             STRH     R1,[R0, #+2]
   \   00001150   0xE01F             B.N      ??SpecialStatus_45
    824                }
    825                else if(Trk.CrashFirst == 1 
    826                && Infrared.Infrared1[Infrared.currentInfrared] == 0 && Infrared.Infrared2[Infrared.currentInfrared] == 1)
   \                     ??SpecialStatus_49: (+1)
   \   00001152   0x....             LDR.N    R0,??DataTable4_1
   \   00001154   0xF890 0x06F4      LDRB     R0,[R0, #+1780]
   \   00001158   0x2801             CMP      R0,#+1
   \   0000115A   0xD11A             BNE.N    ??SpecialStatus_45
   \   0000115C   0x....             LDR.N    R0,??DataTable4_3
   \   0000115E   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00001162   0x....             LDR.N    R1,??DataTable4_3
   \   00001164   0x5C40             LDRB     R0,[R0, R1]
   \   00001166   0x2800             CMP      R0,#+0
   \   00001168   0xD113             BNE.N    ??SpecialStatus_45
   \   0000116A   0x....             LDR.N    R0,??DataTable4_3
   \   0000116C   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   00001170   0x....             LDR.N    R1,??DataTable4_3
   \   00001172   0x1840             ADDS     R0,R0,R1
   \   00001174   0xF890 0x00C8      LDRB     R0,[R0, #+200]
   \   00001178   0x2801             CMP      R0,#+1
   \   0000117A   0xD10A             BNE.N    ??SpecialStatus_45
    827                { Trk.SpecialStatus = 52;//确认冲出赛道
   \   0000117C   0x....             LDR.N    R0,??DataTable4_1
   \   0000117E   0x2134             MOVS     R1,#+52
   \   00001180   0xF880 0x169C      STRB     R1,[R0, #+1692]
    828                  Con.Run = 3;//停车
   \   00001184   0x....             LDR.N    R0,??DataTable4_2
   \   00001186   0x2103             MOVS     R1,#+3
   \   00001188   0x7301             STRB     R1,[R0, #+12]
    829                  Give.forceSpeed = 10;//强制给定速度0
   \   0000118A   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000118E   0x210A             MOVS     R1,#+10
   \   00001190   0x8041             STRH     R1,[R0, #+2]
    830                }
    831              }
    832            }
    833            //*****************************************************************************************
    834            //-----------------------------------------------------------------------------------------
    835            //-------------------------------------按键起跑、停车--------------------------------------
    836            //-----------------------------------------------------------------------------------------
    837            //*****************************************************************************************
    838            if(Con.Run == 0)
   \                     ??SpecialStatus_45: (+1)
   \   00001192   0x....             LDR.N    R0,??DataTable4_2
   \   00001194   0x7B00             LDRB     R0,[R0, #+12]
   \   00001196   0x2800             CMP      R0,#+0
   \   00001198   0xD107             BNE.N    ??SpecialStatus_50
    839            { if(Con.Run_Button == 1){Con.Run = 1;}//起跑按键按下进入预起跑阶段
   \   0000119A   0x....             LDR.N    R0,??DataTable4_2
   \   0000119C   0xF890 0x0030      LDRB     R0,[R0, #+48]
   \   000011A0   0x2801             CMP      R0,#+1
   \   000011A2   0xD102             BNE.N    ??SpecialStatus_50
   \   000011A4   0x....             LDR.N    R0,??DataTable4_2
   \   000011A6   0x2101             MOVS     R1,#+1
   \   000011A8   0x7301             STRB     R1,[R0, #+12]
    840            }
    841            if(Con.Run == 2)
   \                     ??SpecialStatus_50: (+1)
   \   000011AA   0x....             LDR.N    R0,??DataTable4_2
   \   000011AC   0x7B00             LDRB     R0,[R0, #+12]
   \   000011AE   0x2802             CMP      R0,#+2
   \   000011B0   0xD10F             BNE.N    ??SpecialStatus_51
    842            { if(Con.Run_Button == 3)
   \   000011B2   0x....             LDR.N    R0,??DataTable4_2
   \   000011B4   0xF890 0x0030      LDRB     R0,[R0, #+48]
   \   000011B8   0x2803             CMP      R0,#+3
   \   000011BA   0xD10A             BNE.N    ??SpecialStatus_51
    843              { Con.Run = 3;//起跑按键按下进入停车阶段 
   \   000011BC   0x....             LDR.N    R0,??DataTable4_2
   \   000011BE   0x2103             MOVS     R1,#+3
   \   000011C0   0x7301             STRB     R1,[R0, #+12]
    844                Trk.SpecialStatus = 81;//特殊状态标志改为：按键停车
   \   000011C2   0x....             LDR.N    R0,??DataTable4_1
   \   000011C4   0x2151             MOVS     R1,#+81
   \   000011C6   0xF880 0x169C      STRB     R1,[R0, #+1692]
    845                Give.forceSpeed = 10;//强制给定速度0
   \   000011CA   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000011CE   0x210A             MOVS     R1,#+10
   \   000011D0   0x8041             STRH     R1,[R0, #+2]
    846              }
    847            }
    848            //*****************************************************************************************
    849            //-----------------------------------------------------------------------------------------
    850            //----------------------------------------5 秒试跑-----------------------------------------
    851            //-----------------------------------------------------------------------------------------
    852            //*****************************************************************************************
    853            if(Con.EnableTest5S == 1 && Con.Run == 2 && Con.TotalTime - Con.Run2time >= 5000)
   \                     ??SpecialStatus_51: (+1)
   \   000011D2   0x....             LDR.N    R0,??DataTable4_2
   \   000011D4   0xF890 0x0038      LDRB     R0,[R0, #+56]
   \   000011D8   0x2801             CMP      R0,#+1
   \   000011DA   0xD117             BNE.N    ??SpecialStatus_52
   \   000011DC   0x....             LDR.N    R0,??DataTable4_2
   \   000011DE   0x7B00             LDRB     R0,[R0, #+12]
   \   000011E0   0x2802             CMP      R0,#+2
   \   000011E2   0xD113             BNE.N    ??SpecialStatus_52
   \   000011E4   0x....             LDR.N    R0,??DataTable4_2
   \   000011E6   0x6880             LDR      R0,[R0, #+8]
   \   000011E8   0x....             LDR.N    R1,??DataTable4_2
   \   000011EA   0x6949             LDR      R1,[R1, #+20]
   \   000011EC   0x1A40             SUBS     R0,R0,R1
   \   000011EE   0xF241 0x3188      MOVW     R1,#+5000
   \   000011F2   0x4288             CMP      R0,R1
   \   000011F4   0xD30A             BCC.N    ??SpecialStatus_52
    854            { Con.Run = 3;//进入停止阶段
   \   000011F6   0x....             LDR.N    R0,??DataTable4_2
   \   000011F8   0x2103             MOVS     R1,#+3
   \   000011FA   0x7301             STRB     R1,[R0, #+12]
    855              Trk.SpecialStatus = 61;//特殊状态标志改为：试跑时间到停车
   \   000011FC   0x....             LDR.N    R0,??DataTable4_1
   \   000011FE   0x213D             MOVS     R1,#+61
   \   00001200   0xF880 0x169C      STRB     R1,[R0, #+1692]
    856              Give.forceSpeed = 10;//强制给定速度0
   \   00001204   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00001208   0x210A             MOVS     R1,#+10
   \   0000120A   0x8041             STRH     R1,[R0, #+2]
    857            }
    858            //*****************************************************************************************
    859            //-----------------------------------------------------------------------------------------
    860            //--------------------------------------CCD1直道累加---------------------------------------
    861            //-----------------------------------------------------------------------------------------
    862            //*****************************************************************************************
    863            if(Con.Run == 2)
   \                     ??SpecialStatus_52: (+1)
   \   0000120C   0x....             LDR.N    R0,??DataTable4_2
   \   0000120E   0x7B00             LDRB     R0,[R0, #+12]
   \   00001210   0x2802             CMP      R0,#+2
   \   00001212   0xD12E             BNE.N    ??SpecialStatus_53
    864            { if(Trk.cen1[Trk.currentCen1] < 1000+CCD_SwitchTHreshold 
    865                 && Trk.cen1[Trk.currentCen1] > 1000-CCD_SwitchTHreshold //当前CCD1中线处于直道判决范围附近 
    866                 )
   \   00001214   0x....             LDR.N    R0,??DataTable4_1
   \   00001216   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000121A   0x....             LDR.N    R1,??DataTable4_1
   \   0000121C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00001220   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00001224   0xF2A0 0x30C1      SUBW     R0,R0,#+961
   \   00001228   0x284F             CMP      R0,#+79
   \   0000122A   0xD21A             BCS.N    ??SpecialStatus_54
    867              { //上一次处于直道中//累加直道路程
    868                if(Trk.Straight1 == 1){Trk.StraightRoad1 = Trk.StraightRoad1 + Encoder.encoder[Encoder.currentEnc];}
   \   0000122C   0x....             LDR.N    R0,??DataTable4_1
   \   0000122E   0xF890 0x033A      LDRB     R0,[R0, #+826]
   \   00001232   0x2801             CMP      R0,#+1
   \   00001234   0xD110             BNE.N    ??SpecialStatus_55
   \   00001236   0x....             LDR.N    R0,??DataTable4_1
   \   00001238   0xF8D0 0x033C      LDR      R0,[R0, #+828]
   \   0000123C   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   00001240   0xF8B1 0x1190      LDRH     R1,[R1, #+400]
   \   00001244   0x.... 0x....      LDR.W    R2,??DataTable5_1
   \   00001248   0xF832 0x1011      LDRH     R1,[R2, R1, LSL #+1]
   \   0000124C   0xFA10 0xF081      UXTAH    R0,R0,R1
   \   00001250   0x....             LDR.N    R1,??DataTable4_1
   \   00001252   0xF8C1 0x033C      STR      R0,[R1, #+828]
   \   00001256   0xE00C             B.N      ??SpecialStatus_53
    869                //上一次不处于直道中
    870                else {Trk.Straight1 = 1;}//置位直道标志
   \                     ??SpecialStatus_55: (+1)
   \   00001258   0x....             LDR.N    R0,??DataTable4_1
   \   0000125A   0x2101             MOVS     R1,#+1
   \   0000125C   0xF880 0x133A      STRB     R1,[R0, #+826]
   \   00001260   0xE007             B.N      ??SpecialStatus_53
    871              }
    872              else {Trk.Straight1 = 0;Trk.StraightRoad1 = 0;}//清0直道标志和直道路程
   \                     ??SpecialStatus_54: (+1)
   \   00001262   0x....             LDR.N    R0,??DataTable4_1
   \   00001264   0x2100             MOVS     R1,#+0
   \   00001266   0xF880 0x133A      STRB     R1,[R0, #+826]
   \   0000126A   0x....             LDR.N    R0,??DataTable4_1
   \   0000126C   0x2100             MOVS     R1,#+0
   \   0000126E   0xF8C0 0x133C      STR      R1,[R0, #+828]
    873            }
    874            //*****************************************************************************************
    875            //-----------------------------------------------------------------------------------------
    876            //--------------------------------------CCD1弯道累加---------------------------------------
    877            //-----------------------------------------------------------------------------------------
    878            //*****************************************************************************************
    879            
    880            //*****************************************************************************************
    881            //-----------------------------------------------------------------------------------------
    882            //--------------------------------------CCD1弯道锁定---------------------------------------
    883            //-----------------------------------------------------------------------------------------
    884            //*****************************************************************************************
    885            if(Con.Run == 2)
   \                     ??SpecialStatus_53: (+1)
   \   00001272   0x....             LDR.N    R0,??DataTable4_2
   \   00001274   0x7B00             LDRB     R0,[R0, #+12]
   \   00001276   0x2802             CMP      R0,#+2
   \   00001278   0xD173             BNE.N    ??SpecialStatus_56
    886            { //若当前处于弯道锁定标志并且上一次与当前中心坐标偏离过大
    887              if(((Trk.cen1[Trk.currentCen1] > Trk.cen1[Trk.lastCen1] && Trk.cen1[Trk.currentCen1] - Trk.cen1[Trk.lastCen1] >20)
    888                 || (Trk.cen1[Trk.currentCen1] < Trk.cen1[Trk.lastCen1] && Trk.cen1[Trk.lastCen1] - Trk.cen1[Trk.currentCen1]>20))
    889                 && Trk.CurveLock1 == 1
    890                 )
   \   0000127A   0x....             LDR.N    R0,??DataTable4_1
   \   0000127C   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   00001280   0x....             LDR.N    R1,??DataTable4_1
   \   00001282   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00001286   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   0000128A   0x....             LDR.N    R1,??DataTable4_1
   \   0000128C   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   00001290   0x....             LDR.N    R2,??DataTable4_1
   \   00001292   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00001296   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   0000129A   0x4288             CMP      R0,R1
   \   0000129C   0xD212             BCS.N    ??SpecialStatus_57
   \   0000129E   0x....             LDR.N    R0,??DataTable4_1
   \   000012A0   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000012A4   0x....             LDR.N    R1,??DataTable4_1
   \   000012A6   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000012AA   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000012AE   0x....             LDR.N    R1,??DataTable4_1
   \   000012B0   0xF8B1 0x132C      LDRH     R1,[R1, #+812]
   \   000012B4   0x....             LDR.N    R2,??DataTable4_1
   \   000012B6   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000012BA   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   000012BE   0x1A40             SUBS     R0,R0,R1
   \   000012C0   0x2815             CMP      R0,#+21
   \   000012C2   0xDA24             BGE.N    ??SpecialStatus_58
   \                     ??SpecialStatus_57: (+1)
   \   000012C4   0x....             LDR.N    R0,??DataTable4_1
   \   000012C6   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000012CA   0x....             LDR.N    R1,??DataTable4_1
   \   000012CC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000012D0   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000012D4   0x....             LDR.N    R1,??DataTable4_1
   \   000012D6   0xF8B1 0x132C      LDRH     R1,[R1, #+812]
   \   000012DA   0x....             LDR.N    R2,??DataTable4_1
   \   000012DC   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000012E0   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   000012E4   0x4288             CMP      R0,R1
   \   000012E6   0xD227             BCS.N    ??SpecialStatus_59
   \   000012E8   0x....             LDR.N    R0,??DataTable4_1
   \   000012EA   0xF8B0 0x032C      LDRH     R0,[R0, #+812]
   \   000012EE   0x....             LDR.N    R1,??DataTable4_1
   \   000012F0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000012F4   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000012F8   0x....             LDR.N    R1,??DataTable4_1
   \   000012FA   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   000012FE   0x....             LDR.N    R2,??DataTable4_1
   \   00001300   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00001304   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   00001308   0x1A40             SUBS     R0,R0,R1
   \   0000130A   0x2815             CMP      R0,#+21
   \   0000130C   0xDB14             BLT.N    ??SpecialStatus_59
   \                     ??SpecialStatus_58: (+1)
   \   0000130E   0x....             LDR.N    R0,??DataTable4_1
   \   00001310   0xF890 0x0340      LDRB     R0,[R0, #+832]
   \   00001314   0x2801             CMP      R0,#+1
   \   00001316   0xD10F             BNE.N    ??SpecialStatus_59
    891              { Trk.cen1[Trk.currentCen1] = Trk.cen1[Trk.lastCen1];}//保持上一次打角
   \   00001318   0x....             LDR.N    R0,??DataTable4_1
   \   0000131A   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000131E   0x....             LDR.N    R1,??DataTable4_1
   \   00001320   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00001324   0x....             LDR.N    R1,??DataTable4_1
   \   00001326   0xF8B1 0x132C      LDRH     R1,[R1, #+812]
   \   0000132A   0x....             LDR.N    R2,??DataTable4_1
   \   0000132C   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00001330   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   00001334   0xF8A0 0x119A      STRH     R1,[R0, #+410]
    892              if(Trk.cen1[Trk.currentCen1] > 1000+51 || Trk.cen1[Trk.currentCen1] < 1000-51)//当前CCD1中线偏离过多（超过50cm半径）
   \                     ??SpecialStatus_59: (+1)
   \   00001338   0x....             LDR.N    R0,??DataTable4_1
   \   0000133A   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000133E   0x....             LDR.N    R1,??DataTable4_1
   \   00001340   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00001344   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00001348   0xF2A0 0x30B5      SUBW     R0,R0,#+949
   \   0000134C   0x2867             CMP      R0,#+103
   \   0000134E   0xD304             BCC.N    ??SpecialStatus_60
    893              { Trk.CurveLock1 = 1;//置1弯道锁定标志
   \   00001350   0x....             LDR.N    R0,??DataTable4_1
   \   00001352   0x2101             MOVS     R1,#+1
   \   00001354   0xF880 0x1340      STRB     R1,[R0, #+832]
   \   00001358   0xE003             B.N      ??SpecialStatus_56
    894              }
    895              else{Trk.CurveLock1 = 0;}//清0弯道锁定标志
   \                     ??SpecialStatus_60: (+1)
   \   0000135A   0x....             LDR.N    R0,??DataTable4_1
   \   0000135C   0x2100             MOVS     R1,#+0
   \   0000135E   0xF880 0x1340      STRB     R1,[R0, #+832]
    896            }
    897            //*****************************************************************************************
    898            //-----------------------------------------------------------------------------------------
    899            //----------------------------------------起跑时序-----------------------------------------
    900            //-----------------------------------------------------------------------------------------
    901            //*****************************************************************************************
    902            if(Con.Run == 1)
   \                     ??SpecialStatus_56: (+1)
   \   00001362   0x....             LDR.N    R0,??DataTable4_2
   \   00001364   0x7B00             LDRB     R0,[R0, #+12]
   \   00001366   0x2801             CMP      R0,#+1
   \   00001368   0xD116             BNE.N    ??SpecialStatus_61
    903            { //记录进入预起跑的时间和路程
    904              if(Con.Run1time == 0){Con.Run1time = Con.TotalTime;Con.Run1road = Con.TotalRoad;}
   \   0000136A   0x....             LDR.N    R0,??DataTable4_2
   \   0000136C   0x6900             LDR      R0,[R0, #+16]
   \   0000136E   0x2800             CMP      R0,#+0
   \   00001370   0xD107             BNE.N    ??SpecialStatus_62
   \   00001372   0x....             LDR.N    R0,??DataTable4_2
   \   00001374   0x....             LDR.N    R1,??DataTable4_2
   \   00001376   0x6889             LDR      R1,[R1, #+8]
   \   00001378   0x6101             STR      R1,[R0, #+16]
   \   0000137A   0x....             LDR.N    R0,??DataTable4_2
   \   0000137C   0x....             LDR.N    R1,??DataTable4_2
   \   0000137E   0x6849             LDR      R1,[R1, #+4]
   \   00001380   0x6201             STR      R1,[R0, #+32]
    905              if(Con.TotalTime - Con.Run1time >= 2000){Con.Run = 2;}//预起跑阶段经过2秒进入正式起跑
   \                     ??SpecialStatus_62: (+1)
   \   00001382   0x....             LDR.N    R0,??DataTable4_2
   \   00001384   0x6880             LDR      R0,[R0, #+8]
   \   00001386   0x....             LDR.N    R1,??DataTable4_2
   \   00001388   0x6909             LDR      R1,[R1, #+16]
   \   0000138A   0x1A40             SUBS     R0,R0,R1
   \   0000138C   0xF5B0 0x6FFA      CMP      R0,#+2000
   \   00001390   0xD302             BCC.N    ??SpecialStatus_61
   \   00001392   0x....             LDR.N    R0,??DataTable4_2
   \   00001394   0x2102             MOVS     R1,#+2
   \   00001396   0x7301             STRB     R1,[R0, #+12]
    906            }
    907            if(Con.Run == 2)
   \                     ??SpecialStatus_61: (+1)
   \   00001398   0x....             LDR.N    R0,??DataTable4_2
   \   0000139A   0x7B00             LDRB     R0,[R0, #+12]
   \   0000139C   0x2802             CMP      R0,#+2
   \   0000139E   0xD10B             BNE.N    ??SpecialStatus_63
    908            { //记录进入正式起跑的时间和路程
    909              if(Con.Run2time == 0){Con.Run2time = Con.TotalTime;Con.Run2road = Con.TotalRoad;} 
   \   000013A0   0x....             LDR.N    R0,??DataTable4_2
   \   000013A2   0x6940             LDR      R0,[R0, #+20]
   \   000013A4   0x2800             CMP      R0,#+0
   \   000013A6   0xD107             BNE.N    ??SpecialStatus_63
   \   000013A8   0x....             LDR.N    R0,??DataTable4_2
   \   000013AA   0x....             LDR.N    R1,??DataTable4_2
   \   000013AC   0x6889             LDR      R1,[R1, #+8]
   \   000013AE   0x6141             STR      R1,[R0, #+20]
   \   000013B0   0x....             LDR.N    R0,??DataTable4_2
   \   000013B2   0x....             LDR.N    R1,??DataTable4_2
   \   000013B4   0x6849             LDR      R1,[R1, #+4]
   \   000013B6   0x6241             STR      R1,[R0, #+36]
    910            }
    911            if(Con.Run == 3)
   \                     ??SpecialStatus_63: (+1)
   \   000013B8   0x....             LDR.N    R0,??DataTable4_2
   \   000013BA   0x7B00             LDRB     R0,[R0, #+12]
   \   000013BC   0x2803             CMP      R0,#+3
   \   000013BE   0xD116             BNE.N    ??SpecialStatus_64
    912            { //记录进入停止状态的时间和路程
    913              if(Con.Run3time == 0){Con.Run3time = Con.TotalTime;Con.Run3road = Con.TotalRoad;} 
   \   000013C0   0x....             LDR.N    R0,??DataTable4_2
   \   000013C2   0x6980             LDR      R0,[R0, #+24]
   \   000013C4   0x2800             CMP      R0,#+0
   \   000013C6   0xD107             BNE.N    ??SpecialStatus_65
   \   000013C8   0x....             LDR.N    R0,??DataTable4_2
   \   000013CA   0x....             LDR.N    R1,??DataTable4_2
   \   000013CC   0x6889             LDR      R1,[R1, #+8]
   \   000013CE   0x6181             STR      R1,[R0, #+24]
   \   000013D0   0x....             LDR.N    R0,??DataTable4_2
   \   000013D2   0x....             LDR.N    R1,??DataTable4_2
   \   000013D4   0x6849             LDR      R1,[R1, #+4]
   \   000013D6   0x6281             STR      R1,[R0, #+40]
    914              if(Con.TotalTime - Con.Run3time >= 1000){Con.Run = 4;}//停止阶段经过2秒进入停止后2秒
   \                     ??SpecialStatus_65: (+1)
   \   000013D8   0x....             LDR.N    R0,??DataTable4_2
   \   000013DA   0x6880             LDR      R0,[R0, #+8]
   \   000013DC   0x....             LDR.N    R1,??DataTable4_2
   \   000013DE   0x6989             LDR      R1,[R1, #+24]
   \   000013E0   0x1A40             SUBS     R0,R0,R1
   \   000013E2   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000013E6   0xD302             BCC.N    ??SpecialStatus_64
   \   000013E8   0x....             LDR.N    R0,??DataTable4_2
   \   000013EA   0x2104             MOVS     R1,#+4
   \   000013EC   0x7301             STRB     R1,[R0, #+12]
    915            }
    916            if(Con.Run == 4)
   \                     ??SpecialStatus_64: (+1)
   \   000013EE   0x....             LDR.N    R0,??DataTable4_2
   \   000013F0   0x7B00             LDRB     R0,[R0, #+12]
   \   000013F2   0x2804             CMP      R0,#+4
   \   000013F4   0xD10B             BNE.N    ??SpecialStatus_66
    917            { //记录进入停止后2秒的时间和路程
    918              if(Con.Run4time == 0){Con.Run4time = Con.TotalTime;Con.Run4road = Con.TotalRoad;} 
   \   000013F6   0x....             LDR.N    R0,??DataTable4_2
   \   000013F8   0x69C0             LDR      R0,[R0, #+28]
   \   000013FA   0x2800             CMP      R0,#+0
   \   000013FC   0xD107             BNE.N    ??SpecialStatus_66
   \   000013FE   0x....             LDR.N    R0,??DataTable4_2
   \   00001400   0x....             LDR.N    R1,??DataTable4_2
   \   00001402   0x6889             LDR      R1,[R1, #+8]
   \   00001404   0x61C1             STR      R1,[R0, #+28]
   \   00001406   0x....             LDR.N    R0,??DataTable4_2
   \   00001408   0x....             LDR.N    R1,??DataTable4_2
   \   0000140A   0x6849             LDR      R1,[R1, #+4]
   \   0000140C   0x62C1             STR      R1,[R0, #+44]
    919            }
    920            
    921          }
   \                     ??SpecialStatus_66: (+1)
   \   0000140E   0x4770             BX       LR               ;; return
    922          
    923          

   \                                 In section .text, align 2, keep-with-next
    924          void DirSpeedGive(void)//计算方向和给定速度
    925          {
   \                     DirSpeedGive: (+1)
   \   00000000   0xB51C             PUSH     {R2-R4,LR}
    926            //*****************************************************************************************
    927            //-----------------------------------------------------------------------------------------
    928            //--------------------------选择CCD1或CCD2作为方向和速度决策来源---------------------------
    929            //-----------------------------------------------------------------------------------------
    930            //*****************************************************************************************  
    931            //CCD1中心坐标偏离过大
    932            if(Trk.cen1[Trk.currentCen1] > 1000 + CCD_SwitchTHreshold || Trk.cen1[Trk.currentCen1] < 1000 - CCD_SwitchTHreshold
    933               //|| (Trk.left2[Trk.currentLeft2]==255 
    934               //    && Trk.right2[Trk.currentRight2]==255 && Trk.AllDark2 == 1)//CCD2丢双边且处于全黑
    935               || (Trk.Width2 <= 0.75*CCD2TrkWidth //当前CCD2赛道宽度小于正常直道宽度的0.75倍，上坡不稳定时不使用CCD2
    936                   && Trk.SpecialStatus!= 31 && Trk.SpecialStatus!= 32)//路障时可以使用
    937               || Trk.StraightRoad1 < 10000 //CCD1直道累加路程小于某一值（防止十字CCD2误判）
    938               || (Encoder.encoder[Encoder.currentEnc]*(5/Con.SpeedContralPeriod) < 140 //当前速度低于某一值且CCD2中线偏离过大
    939                   &&(Trk.cen2[Trk.currentCen2] > 1000+40 || Trk.cen2[Trk.currentCen2] < 1000-40) )//防止低速时因CCD2打角过大偏离
    940               )
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000006   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000000E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000012   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000016   0xF5B0 0x7070      SUBS     R0,R0,#+960
   \   0000001A   0x2851             CMP      R0,#+81
   \   0000001C   0xD238             BCS.N    ??DirSpeedGive_0
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000022   0xF890 0x066E      LDRB     R0,[R0, #+1646]
   \   00000026   0x2834             CMP      R0,#+52
   \   00000028   0xD20B             BCS.N    ??DirSpeedGive_1
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000002E   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   00000032   0x281F             CMP      R0,#+31
   \   00000034   0xD005             BEQ.N    ??DirSpeedGive_1
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000003A   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   0000003E   0x2820             CMP      R0,#+32
   \   00000040   0xD126             BNE.N    ??DirSpeedGive_0
   \                     ??DirSpeedGive_1: (+1)
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000046   0xF8D0 0x033C      LDR      R0,[R0, #+828]
   \   0000004A   0xF242 0x7110      MOVW     R1,#+10000
   \   0000004E   0x4288             CMP      R0,R1
   \   00000050   0xD31E             BCC.N    ??DirSpeedGive_0
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable5_1
   \   00000056   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable5_1
   \   0000005E   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   00000062   0x2105             MOVS     R1,#+5
   \   00000064   0x.... 0x....      LDR.W    R2,??DataTable6_1
   \   00000068   0x7852             LDRB     R2,[R2, #+1]
   \   0000006A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000006E   0x4348             MULS     R0,R1,R0
   \   00000070   0x288C             CMP      R0,#+140
   \   00000072   0xDA12             BGE.N    ??DirSpeedGive_2
   \   00000074   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000078   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000080   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000084   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000088   0xF5B0 0x7070      SUBS     R0,R0,#+960
   \   0000008C   0x2851             CMP      R0,#+81
   \   0000008E   0xD304             BCC.N    ??DirSpeedGive_2
    941            { Give.CCDSource = 0;}//使用CCD1
   \                     ??DirSpeedGive_0: (+1)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000094   0x2100             MOVS     R1,#+0
   \   00000096   0x7001             STRB     R1,[R0, #+0]
   \   00000098   0xE003             B.N      ??DirSpeedGive_3
    942            else {Give.CCDSource = 1;}//使用CCD2
   \                     ??DirSpeedGive_2: (+1)
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000009E   0x2101             MOVS     R1,#+1
   \   000000A0   0x7001             STRB     R1,[R0, #+0]
    943            Give.CCDSource = 0;
   \                     ??DirSpeedGive_3: (+1)
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x7001             STRB     R1,[R0, #+0]
    944            //*****************************************************************************************
    945            //-----------------------------------------------------------------------------------------
    946            //----------------------------------------使用CCD1-----------------------------------------
    947            //-----------------------------------------------------------------------------------------
    948            //*****************************************************************************************
    949            if(Give.CCDSource == 0)//若使用CCD1
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000000AE   0x7800             LDRB     R0,[R0, #+0]
   \   000000B0   0x2800             CMP      R0,#+0
   \   000000B2   0xF040 0x81D7      BNE.W    ??DirSpeedGive_4
    950            {
    951              volatile uint16 tempCenRate1;//临时存储变化率
    952              volatile uint16 lastDCen1;//临时存储历史值的下标
    953              volatile uint16 tempSerCen1,tempMotorCen1;//临时存储中心坐标
    954              //计算微分周期历史值的下标
    955              if(Trk.currentCen1 >= (Give.DPeriod/Con.MainContralPeriod)){lastDCen1 = Trk.currentCen1 - (Give.DPeriod/Con.MainContralPeriod);}
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000000BA   0x8980             LDRH     R0,[R0, #+12]
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000000C0   0x78C9             LDRB     R1,[R1, #+3]
   \   000000C2   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000000C6   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000000CA   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   000000CE   0x4281             CMP      R1,R0
   \   000000D0   0xDB0F             BLT.N    ??DirSpeedGive_5
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000000D6   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000000DE   0x8989             LDRH     R1,[R1, #+12]
   \   000000E0   0x.... 0x....      LDR.W    R2,??DataTable6_1
   \   000000E4   0x78D2             LDRB     R2,[R2, #+3]
   \   000000E6   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   000000EA   0x1A40             SUBS     R0,R0,R1
   \   000000EC   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   000000F0   0xE010             B.N      ??DirSpeedGive_6
    956              else {lastDCen1 = maxRAMSaveNum - (Give.DPeriod/Con.MainContralPeriod) + Trk.currentCen1;} 
   \                     ??DirSpeedGive_5: (+1)
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000000F6   0x8980             LDRH     R0,[R0, #+12]
   \   000000F8   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000000FC   0x78C9             LDRB     R1,[R1, #+3]
   \   000000FE   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000102   0xF1D0 0x00C8      RSBS     R0,R0,#+200
   \   00000106   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000010A   0xF8B1 0x132A      LDRH     R1,[R1, #+810]
   \   0000010E   0x1808             ADDS     R0,R1,R0
   \   00000110   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    957              //计算最终中心坐标变化率，1000为变化率0，小于1000向左变化，大于1000向右变化
    958              tempCenRate1 = 1000 + Trk.cen1[Trk.currentCen1] - Trk.cen1[lastDCen1];
   \                     ??DirSpeedGive_6: (+1)
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000118   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000120   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000124   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000128   0xF510 0x707A      ADDS     R0,R0,#+1000
   \   0000012C   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000130   0x.... 0x....      LDR.W    R2,??DataTable6
   \   00000134   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   00000138   0xF8B1 0x119A      LDRH     R1,[R1, #+410]
   \   0000013C   0x1A40             SUBS     R0,R0,R1
   \   0000013E   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    959              Give.CenRate1 = tempCenRate1;
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000146   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   0000014A   0x81C1             STRH     R1,[R0, #+14]
    960              //计算微分之后的舵机中心坐标
    961              tempSerCen1 = Trk.cen1[Trk.currentCen1] + (uint16)(Give.D_server*tempCenRate1) - (uint16)(Give.D_server*1000);
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000150   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000154   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000158   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000015C   0xF8B0 0x419A      LDRH     R4,[R0, #+410]
   \   00000160   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000164   0x.... 0x....      BL       __aeabi_ui2f
   \   00000168   0x.... 0x....      LDR.W    R1,??DataTable5
   \   0000016C   0x6949             LDR      R1,[R1, #+20]
   \   0000016E   0x.... 0x....      BL       __aeabi_fmul
   \   00000172   0x.... 0x....      BL       __aeabi_f2iz
   \   00000176   0x1904             ADDS     R4,R0,R4
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000017C   0x6941             LDR      R1,[R0, #+20]
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x447a0000
   \   00000182   0x.... 0x....      BL       __aeabi_fmul
   \   00000186   0x.... 0x....      BL       __aeabi_f2iz
   \   0000018A   0x1A20             SUBS     R0,R4,R0
   \   0000018C   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    962              if(tempSerCen1 > 1200){tempSerCen1 = 1200;}else if(tempSerCen1 < 800){tempSerCen1 = 800;}//防止越界
   \   00000190   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000194   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000198   0xDD04             BLE.N    ??DirSpeedGive_7
   \   0000019A   0xF44F 0x6096      MOV      R0,#+1200
   \   0000019E   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   000001A2   0xE008             B.N      ??DirSpeedGive_8
   \                     ??DirSpeedGive_7: (+1)
   \   000001A4   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000001A8   0xF5B0 0x7F48      CMP      R0,#+800
   \   000001AC   0xDA03             BGE.N    ??DirSpeedGive_8
   \   000001AE   0xF44F 0x7048      MOV      R0,#+800
   \   000001B2   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    963              if(Trk.cen1[Trk.currentCen1] <= 1000 && tempSerCen1 >1000){tempSerCen1 = 1000;}//防止微分之后与之前中线方向相反
   \                     ??DirSpeedGive_8: (+1)
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000001BA   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000001BE   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000001C2   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000001C6   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000001CA   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000001CE   0xDC08             BGT.N    ??DirSpeedGive_9
   \   000001D0   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000001D4   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000001D8   0xDD03             BLE.N    ??DirSpeedGive_9
   \   000001DA   0xF44F 0x707A      MOV      R0,#+1000
   \   000001DE   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    964              if(Trk.cen1[Trk.currentCen1] >= 1000 && tempSerCen1 <1000){tempSerCen1 = 1000;}//防止微分之后与之前中线方向相反
   \                     ??DirSpeedGive_9: (+1)
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000001E6   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000001EA   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000001EE   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000001F2   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000001F6   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000001FA   0xDB08             BLT.N    ??DirSpeedGive_10
   \   000001FC   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000200   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000204   0xDA03             BGE.N    ??DirSpeedGive_10
   \   00000206   0xF44F 0x707A      MOV      R0,#+1000
   \   0000020A   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    965              //存储微分之后的舵机中心坐标
    966              Give.serverDCen = tempSerCen1;
   \                     ??DirSpeedGive_10: (+1)
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000212   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   00000216   0x8301             STRH     R1,[R0, #+24]
    967              //计算微分之后的电机中心坐标
    968              tempMotorCen1 = Trk.cen1[Trk.currentCen1] + (uint16)(Give.D_motor*tempCenRate1) - (uint16)(Give.D_motor*1000);
   \   00000218   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000021C   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000220   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000224   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000228   0xF8B0 0x419A      LDRH     R4,[R0, #+410]
   \   0000022C   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000230   0x.... 0x....      BL       __aeabi_ui2f
   \   00000234   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000238   0x69C9             LDR      R1,[R1, #+28]
   \   0000023A   0x.... 0x....      BL       __aeabi_fmul
   \   0000023E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000242   0x1904             ADDS     R4,R0,R4
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000248   0x69C1             LDR      R1,[R0, #+28]
   \   0000024A   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x447a0000
   \   0000024E   0x.... 0x....      BL       __aeabi_fmul
   \   00000252   0x.... 0x....      BL       __aeabi_f2iz
   \   00000256   0x1A20             SUBS     R0,R4,R0
   \   00000258   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    969              if(tempMotorCen1 > 1200){tempMotorCen1 = 1200;}else if(tempMotorCen1 < 800){tempMotorCen1 = 800;}//防止越界
   \   0000025C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000260   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000264   0xDD04             BLE.N    ??DirSpeedGive_11
   \   00000266   0xF44F 0x6096      MOV      R0,#+1200
   \   0000026A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   0000026E   0xE008             B.N      ??DirSpeedGive_12
   \                     ??DirSpeedGive_11: (+1)
   \   00000270   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000274   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000278   0xDA03             BGE.N    ??DirSpeedGive_12
   \   0000027A   0xF44F 0x7048      MOV      R0,#+800
   \   0000027E   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    970              if(Trk.cen1[Trk.currentCen1] <= 1000 && tempMotorCen1 >1000){tempMotorCen1 = 1000;}//防止微分之后与之前中线方向相反
   \                     ??DirSpeedGive_12: (+1)
   \   00000282   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000286   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000028A   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000028E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000292   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000296   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000029A   0xDC08             BGT.N    ??DirSpeedGive_13
   \   0000029C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000002A0   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000002A4   0xDD03             BLE.N    ??DirSpeedGive_13
   \   000002A6   0xF44F 0x707A      MOV      R0,#+1000
   \   000002AA   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    971              if(Trk.cen1[Trk.currentCen1] >= 1000 && tempMotorCen1 <1000){tempMotorCen1 = 1000;}//防止微分之后与之前中线方向相反
   \                     ??DirSpeedGive_13: (+1)
   \   000002AE   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000002B2   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000002B6   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000002BA   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000002BE   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000002C2   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000002C6   0xDB08             BLT.N    ??DirSpeedGive_14
   \   000002C8   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   000002CC   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000002D0   0xDA03             BGE.N    ??DirSpeedGive_14
   \   000002D2   0xF44F 0x707A      MOV      R0,#+1000
   \   000002D6   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    972              //存储微分之后的电机中心坐标
    973              Give.motorDCen = tempSerCen1;
   \                     ??DirSpeedGive_14: (+1)
   \   000002DA   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000002DE   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000002E2   0x8401             STRH     R1,[R0, #+32]
    974              
    975              //临时存储舵机原始给定PWM,微分给定PWM
    976              volatile uint16 temp_ServerOrgPWM1,temp_ServerDPWM1;
    977              //临时存储原始给定速度、微分给定速度
    978              volatile uint16 temp_MotorOrgSpeed1,temp_MotorDSpeed1;
    979              //查表得出原始舵机给定PWM和原始电机给定速度和弯道半径
    980              if(Trk.cen1[Trk.currentCen1] >= 1000)
   \   000002E4   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000002E8   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   000002EC   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000002F0   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000002F4   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   000002F8   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000002FC   0xDB26             BLT.N    ??DirSpeedGive_15
    981              {temp_ServerOrgPWM1 = GR_ServerPWM1[Trk.cen1[Trk.currentCen1]-1000] + 100;
   \   000002FE   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000302   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000306   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000030A   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000030E   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000312   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000316   0x1840             ADDS     R0,R0,R1
   \   00000318   0xF5B0 0x707A      SUBS     R0,R0,#+1000
   \   0000031C   0x7800             LDRB     R0,[R0, #+0]
   \   0000031E   0x3064             ADDS     R0,R0,#+100
   \   00000320   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    982               temp_MotorOrgSpeed1 = GR_SpeedGive1[Trk.cen1[Trk.currentCen1]-1000];
   \   00000324   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000328   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000032C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000330   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000334   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000338   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000033C   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   00000340   0xF5B0 0x607A      SUBS     R0,R0,#+4000
   \   00000344   0x6800             LDR      R0,[R0, #+0]
   \   00000346   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   0000034A   0xE026             B.N      ??DirSpeedGive_16
    983              }
    984              else 
    985              {temp_ServerOrgPWM1 = 100 - GR_ServerPWM1[1000-Trk.cen1[Trk.currentCen1]];
   \                     ??DirSpeedGive_15: (+1)
   \   0000034C   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000350   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   00000354   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000358   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000035C   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000360   0x4240             RSBS     R0,R0,#+0
   \   00000362   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000366   0x1840             ADDS     R0,R0,R1
   \   00000368   0xF890 0x03E8      LDRB     R0,[R0, #+1000]
   \   0000036C   0xF1D0 0x0064      RSBS     R0,R0,#+100
   \   00000370   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    986               temp_MotorOrgSpeed1 = GR_SpeedGive1[1000-Trk.cen1[Trk.currentCen1]];
   \   00000374   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000378   0xF8B0 0x032A      LDRH     R0,[R0, #+810]
   \   0000037C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000380   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000384   0xF8B0 0x019A      LDRH     R0,[R0, #+410]
   \   00000388   0x4240             RSBS     R0,R0,#+0
   \   0000038A   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000038E   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   00000392   0xF8D0 0x0FA0      LDR      R0,[R0, #+4000]
   \   00000396   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    987              }
    988              Give.serverOrgPWM = temp_ServerOrgPWM1;
   \                     ??DirSpeedGive_16: (+1)
   \   0000039A   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000039E   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   000003A2   0x7681             STRB     R1,[R0, #+26]
    989              Give.motorOrgSpeed = (uint16)(temp_MotorOrgSpeed1*Give.SpeedCoef);//乘以速度给定系数
   \   000003A4   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000003A8   0x.... 0x....      BL       __aeabi_ui2f
   \   000003AC   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000003B0   0x6A89             LDR      R1,[R1, #+40]
   \   000003B2   0x.... 0x....      BL       __aeabi_fmul
   \   000003B6   0x.... 0x....      BL       __aeabi_f2iz
   \   000003BA   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000003BE   0x8448             STRH     R0,[R1, #+34]
    990              Give.lastmotorDSpeed = Give.motorDSpeed;//计算微分给定速度之前先存储上一次的微分给定速度
   \   000003C0   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000003C4   0x.... 0x....      LDR.W    R1,??DataTable5
   \   000003C8   0x8C89             LDRH     R1,[R1, #+36]
   \   000003CA   0x84C1             STRH     R1,[R0, #+38]
    991              //查表得出微分舵机给定PWM和微分电机给定速度
    992              if(Give.serverDCen >= 1000)
   \   000003CC   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000003D0   0x8B00             LDRH     R0,[R0, #+24]
   \   000003D2   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000003D6   0xDB18             BLT.N    ??DirSpeedGive_17
    993              {temp_ServerDPWM1 = GR_ServerPWM1[Give.serverDCen-1000] + 100;
   \   000003D8   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000003DC   0x8B00             LDRH     R0,[R0, #+24]
   \   000003DE   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   000003E2   0x1840             ADDS     R0,R0,R1
   \   000003E4   0xF5B0 0x707A      SUBS     R0,R0,#+1000
   \   000003E8   0x7800             LDRB     R0,[R0, #+0]
   \   000003EA   0x3064             ADDS     R0,R0,#+100
   \   000003EC   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    994               temp_MotorDSpeed1 = GR_SpeedGive1[Give.motorDCen-1000];
   \   000003F0   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000003F4   0x8C00             LDRH     R0,[R0, #+32]
   \   000003F6   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000003FA   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   000003FE   0xF5B0 0x607A      SUBS     R0,R0,#+4000
   \   00000402   0x6800             LDR      R0,[R0, #+0]
   \   00000404   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   00000408   0xE018             B.N      ??DirSpeedGive_18
    995              }
    996              else 
    997              {temp_ServerDPWM1 = 100 - GR_ServerPWM1[1000-Give.serverDCen];
   \                     ??DirSpeedGive_17: (+1)
   \   0000040A   0x.... 0x....      LDR.W    R0,??DataTable5
   \   0000040E   0x8B00             LDRH     R0,[R0, #+24]
   \   00000410   0x4240             RSBS     R0,R0,#+0
   \   00000412   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000416   0x1840             ADDS     R0,R0,R1
   \   00000418   0xF890 0x03E8      LDRB     R0,[R0, #+1000]
   \   0000041C   0xF1D0 0x0064      RSBS     R0,R0,#+100
   \   00000420   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    998               temp_MotorDSpeed1 = GR_SpeedGive1[1000-Give.motorDCen];
   \   00000424   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000428   0x8C00             LDRH     R0,[R0, #+32]
   \   0000042A   0x4240             RSBS     R0,R0,#+0
   \   0000042C   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000430   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   00000434   0xF8D0 0x0FA0      LDR      R0,[R0, #+4000]
   \   00000438   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    999              }
   1000              Give.serverDPWM = temp_ServerDPWM1;
   \                     ??DirSpeedGive_18: (+1)
   \   0000043C   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000440   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000444   0x76C1             STRB     R1,[R0, #+27]
   1001              Give.motorDSpeed = (uint16)(temp_MotorDSpeed1*Give.SpeedCoef);//乘以速度给定系数
   \   00000446   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   0000044A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000044E   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000452   0x6A89             LDR      R1,[R1, #+40]
   \   00000454   0x.... 0x....      BL       __aeabi_fmul
   \   00000458   0x.... 0x....      BL       __aeabi_f2iz
   \   0000045C   0x.... 0x....      LDR.W    R1,??DataTable5
   \   00000460   0x8488             STRH     R0,[R1, #+36]
   \   00000462   0xE1C2             B.N      ??DirSpeedGive_19
   1002            }
   1003            //*****************************************************************************************
   1004            //-----------------------------------------------------------------------------------------
   1005            //----------------------------------------使用CCD2-----------------------------------------
   1006            //-----------------------------------------------------------------------------------------
   1007            //*****************************************************************************************
   1008            else//若使用CCD2
   1009            {
   1010              volatile uint16 tempCenRate2;//临时存储变化率
   1011              volatile uint16 lastDcen2;//临时存储历史值的下标
   1012              volatile uint16 tempSerCen2,tempMotorcen2;//临时存储中心坐标
   1013              //计算微分周期历史值的下标
   1014              if(Trk.currentCen2 >= (Give.DPeriod/Con.MainContralPeriod)){lastDcen2 = Trk.currentCen2 - (Give.DPeriod/Con.MainContralPeriod);}
   \                     ??DirSpeedGive_4: (+1)
   \   00000464   0x.... 0x....      LDR.W    R0,??DataTable5
   \   00000468   0x8980             LDRH     R0,[R0, #+12]
   \   0000046A   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   0000046E   0x78C9             LDRB     R1,[R1, #+3]
   \   00000470   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   00000474   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000478   0xF8B1 0x166A      LDRH     R1,[R1, #+1642]
   \   0000047C   0x4281             CMP      R1,R0
   \   0000047E   0xDB0F             BLT.N    ??DirSpeedGive_20
   \   00000480   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000484   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000488   0x.... 0x....      LDR.W    R1,??DataTable5
   \   0000048C   0x8989             LDRH     R1,[R1, #+12]
   \   0000048E   0x.... 0x....      LDR.W    R2,??DataTable6_1
   \   00000492   0x78D2             LDRB     R2,[R2, #+3]
   \   00000494   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   00000498   0x1A40             SUBS     R0,R0,R1
   \   0000049A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   0000049E   0xE010             B.N      ??DirSpeedGive_21
   1015              else {lastDcen2 = maxRAMSaveNum - (Give.DPeriod/Con.MainContralPeriod) + Trk.currentCen2;} 
   \                     ??DirSpeedGive_20: (+1)
   \   000004A0   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000004A4   0x8980             LDRH     R0,[R0, #+12]
   \   000004A6   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   000004AA   0x78C9             LDRB     R1,[R1, #+3]
   \   000004AC   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   000004B0   0xF1D0 0x00C8      RSBS     R0,R0,#+200
   \   000004B4   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000004B8   0xF8B1 0x166A      LDRH     R1,[R1, #+1642]
   \   000004BC   0x1808             ADDS     R0,R1,R0
   \   000004BE   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1016              //计算最终中心坐标变化率，1000为变化率0，小于1000向左变化，大于1000向右变化
   1017              tempCenRate2 = 1000 + Trk.cen2[Trk.currentCen2] - Trk.cen2[lastDcen2];
   \                     ??DirSpeedGive_21: (+1)
   \   000004C2   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000004C6   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000004CA   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000004CE   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000004D2   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000004D6   0xF510 0x707A      ADDS     R0,R0,#+1000
   \   000004DA   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   000004DE   0x.... 0x....      LDR.W    R2,??DataTable6
   \   000004E2   0xEB12 0x0141      ADDS     R1,R2,R1, LSL #+1
   \   000004E6   0xF8B1 0x14DA      LDRH     R1,[R1, #+1242]
   \   000004EA   0x1A40             SUBS     R0,R0,R1
   \   000004EC   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   1018              Give.CenRate2 = tempCenRate2;
   \   000004F0   0x.... 0x....      LDR.W    R0,??DataTable5
   \   000004F4   0xF8BD 0x1002      LDRH     R1,[SP, #+2]
   \   000004F8   0x8201             STRH     R1,[R0, #+16]
   1019              //计算微分之后的舵机中心坐标
   1020              tempSerCen2 = Trk.cen2[Trk.currentCen2] + (uint16)(Give.D_server*tempCenRate2) - (uint16)(Give.D_server*1000);
   \   000004FA   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000004FE   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000502   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000506   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000050A   0xF8B0 0x44DA      LDRH     R4,[R0, #+1242]
   \   0000050E   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000512   0x.... 0x....      BL       __aeabi_ui2f
   \   00000516   0x....             LDR.N    R1,??DataTable5
   \   00000518   0x6949             LDR      R1,[R1, #+20]
   \   0000051A   0x.... 0x....      BL       __aeabi_fmul
   \   0000051E   0x.... 0x....      BL       __aeabi_f2iz
   \   00000522   0x1904             ADDS     R4,R0,R4
   \   00000524   0x....             LDR.N    R0,??DataTable5
   \   00000526   0x6941             LDR      R1,[R0, #+20]
   \   00000528   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x447a0000
   \   0000052C   0x.... 0x....      BL       __aeabi_fmul
   \   00000530   0x.... 0x....      BL       __aeabi_f2iz
   \   00000534   0x1A20             SUBS     R0,R4,R0
   \   00000536   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1021              if(tempSerCen2 > 1200){tempSerCen2 = 1200;}else if(tempSerCen2 < 800){tempSerCen2 = 800;}//防止越界
   \   0000053A   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000053E   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000542   0xDD04             BLE.N    ??DirSpeedGive_22
   \   00000544   0xF44F 0x6096      MOV      R0,#+1200
   \   00000548   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   \   0000054C   0xE008             B.N      ??DirSpeedGive_23
   \                     ??DirSpeedGive_22: (+1)
   \   0000054E   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   00000552   0xF5B0 0x7F48      CMP      R0,#+800
   \   00000556   0xDA03             BGE.N    ??DirSpeedGive_23
   \   00000558   0xF44F 0x7048      MOV      R0,#+800
   \   0000055C   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1022              if(Trk.cen2[Trk.currentCen2] <= 1000 && tempSerCen2 >1000){tempSerCen2 = 1000;}//防止微分之后与之前中线方向相反
   \                     ??DirSpeedGive_23: (+1)
   \   00000560   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000564   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000568   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000056C   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000570   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000574   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000578   0xDC08             BGT.N    ??DirSpeedGive_24
   \   0000057A   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   0000057E   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000582   0xDD03             BLE.N    ??DirSpeedGive_24
   \   00000584   0xF44F 0x707A      MOV      R0,#+1000
   \   00000588   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1023              if(Trk.cen2[Trk.currentCen2] >= 1000 && tempSerCen2 <1000){tempSerCen2 = 1000;}//防止微分之后与之前中线方向相反
   \                     ??DirSpeedGive_24: (+1)
   \   0000058C   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000590   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   00000594   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000598   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   0000059C   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000005A0   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000005A4   0xDB08             BLT.N    ??DirSpeedGive_25
   \   000005A6   0xF8BD 0x0004      LDRH     R0,[SP, #+4]
   \   000005AA   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000005AE   0xDA03             BGE.N    ??DirSpeedGive_25
   \   000005B0   0xF44F 0x707A      MOV      R0,#+1000
   \   000005B4   0xF8AD 0x0004      STRH     R0,[SP, #+4]
   1024              //存储微分之后的舵机中心坐标
   1025              Give.serverDCen = tempSerCen2;
   \                     ??DirSpeedGive_25: (+1)
   \   000005B8   0x....             LDR.N    R0,??DataTable5
   \   000005BA   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   000005BE   0x8301             STRH     R1,[R0, #+24]
   1026              //计算微分之后的电机中心坐标
   1027              tempMotorcen2 = Trk.cen2[Trk.currentCen2] + (uint16)(Give.D_motor*tempCenRate2) - (uint16)(Give.D_motor*1000);
   \   000005C0   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000005C4   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000005C8   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000005CC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000005D0   0xF8B0 0x44DA      LDRH     R4,[R0, #+1242]
   \   000005D4   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000005D8   0x.... 0x....      BL       __aeabi_ui2f
   \   000005DC   0x....             LDR.N    R1,??DataTable5
   \   000005DE   0x69C9             LDR      R1,[R1, #+28]
   \   000005E0   0x.... 0x....      BL       __aeabi_fmul
   \   000005E4   0x.... 0x....      BL       __aeabi_f2iz
   \   000005E8   0x1904             ADDS     R4,R0,R4
   \   000005EA   0x....             LDR.N    R0,??DataTable5
   \   000005EC   0x69C1             LDR      R1,[R0, #+28]
   \   000005EE   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x447a0000
   \   000005F2   0x.... 0x....      BL       __aeabi_fmul
   \   000005F6   0x.... 0x....      BL       __aeabi_f2iz
   \   000005FA   0x1A20             SUBS     R0,R4,R0
   \   000005FC   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1028              if(tempMotorcen2 > 1200){tempMotorcen2 = 1200;}else if(tempMotorcen2 < 800){tempMotorcen2 = 800;}//防止越界
   \   00000600   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000604   0xF5B0 0x6F96      CMP      R0,#+1200
   \   00000608   0xDD04             BLE.N    ??DirSpeedGive_26
   \   0000060A   0xF44F 0x6096      MOV      R0,#+1200
   \   0000060E   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   \   00000612   0xE008             B.N      ??DirSpeedGive_27
   \                     ??DirSpeedGive_26: (+1)
   \   00000614   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000618   0xF5B0 0x7F48      CMP      R0,#+800
   \   0000061C   0xDA03             BGE.N    ??DirSpeedGive_27
   \   0000061E   0xF44F 0x7048      MOV      R0,#+800
   \   00000622   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1029              if(Trk.cen2[Trk.currentCen2] <= 1000 && tempMotorcen2 >1000){tempMotorcen2 = 1000;}//防止微分之后与之前中线方向相反
   \                     ??DirSpeedGive_27: (+1)
   \   00000626   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000062A   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000062E   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000632   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000636   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000063A   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000063E   0xDC08             BGT.N    ??DirSpeedGive_28
   \   00000640   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000644   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000648   0xDD03             BLE.N    ??DirSpeedGive_28
   \   0000064A   0xF44F 0x707A      MOV      R0,#+1000
   \   0000064E   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1030              if(Trk.cen2[Trk.currentCen2] >= 1000 && tempMotorcen2 <1000){tempMotorcen2 = 1000;}//防止微分之后与之前中线方向相反
   \                     ??DirSpeedGive_28: (+1)
   \   00000652   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000656   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000065A   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000065E   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000662   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000666   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000066A   0xDB08             BLT.N    ??DirSpeedGive_29
   \   0000066C   0xF8BD 0x0000      LDRH     R0,[SP, #+0]
   \   00000670   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000674   0xDA03             BGE.N    ??DirSpeedGive_29
   \   00000676   0xF44F 0x707A      MOV      R0,#+1000
   \   0000067A   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1031              //存储微分之后的电机中心坐标
   1032              Give.motorDCen = tempSerCen2;
   \                     ??DirSpeedGive_29: (+1)
   \   0000067E   0x....             LDR.N    R0,??DataTable5
   \   00000680   0xF8BD 0x1004      LDRH     R1,[SP, #+4]
   \   00000684   0x8401             STRH     R1,[R0, #+32]
   1033              
   1034              //临时存储舵机原始给定PWM,微分给定PWM
   1035              volatile uint16 temp_ServerOrgPWM2,temp_ServerDPWM2;
   1036              //临时存储原始给定速度、微分给定速度
   1037              volatile uint16 temp_MotorOrgSpeed2,temp_MotorDSpeed2;
   1038              //查表得出原始舵机给定PWM和原始电机给定速度和弯道半径
   1039              if(Trk.cen2[Trk.currentCen2] >= 1000)
   \   00000686   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000068A   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000068E   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000692   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000696   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000069A   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000069E   0xDB26             BLT.N    ??DirSpeedGive_30
   1040              {temp_ServerOrgPWM2 = GR_ServerPWM2[Trk.cen2[Trk.currentCen2]-1000] + 100;
   \   000006A0   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000006A4   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000006A8   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000006AC   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000006B0   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000006B4   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000006B8   0x1840             ADDS     R0,R0,R1
   \   000006BA   0xF5B0 0x707A      SUBS     R0,R0,#+1000
   \   000006BE   0x7800             LDRB     R0,[R0, #+0]
   \   000006C0   0x3064             ADDS     R0,R0,#+100
   \   000006C2   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1041               temp_MotorOrgSpeed2 = GR_SpeedGive2[Trk.cen2[Trk.currentCen2]-1000];
   \   000006C6   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000006CA   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000006CE   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000006D2   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000006D6   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   000006DA   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000006DE   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   000006E2   0xF5B0 0x607A      SUBS     R0,R0,#+4000
   \   000006E6   0x6800             LDR      R0,[R0, #+0]
   \   000006E8   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   000006EC   0xE026             B.N      ??DirSpeedGive_31
   1042              }
   1043              else 
   1044              {temp_ServerOrgPWM2 = 100 - GR_ServerPWM2[1000-Trk.cen2[Trk.currentCen2]];
   \                     ??DirSpeedGive_30: (+1)
   \   000006EE   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000006F2   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   000006F6   0x.... 0x....      LDR.W    R1,??DataTable6
   \   000006FA   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   000006FE   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   00000702   0x4240             RSBS     R0,R0,#+0
   \   00000704   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000708   0x1840             ADDS     R0,R0,R1
   \   0000070A   0xF890 0x03E8      LDRB     R0,[R0, #+1000]
   \   0000070E   0xF1D0 0x0064      RSBS     R0,R0,#+100
   \   00000712   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1045               temp_MotorOrgSpeed2 = GR_SpeedGive2[1000-Trk.cen2[Trk.currentCen2]];
   \   00000716   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000071A   0xF8B0 0x066A      LDRH     R0,[R0, #+1642]
   \   0000071E   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000722   0xEB11 0x0040      ADDS     R0,R1,R0, LSL #+1
   \   00000726   0xF8B0 0x04DA      LDRH     R0,[R0, #+1242]
   \   0000072A   0x4240             RSBS     R0,R0,#+0
   \   0000072C   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000730   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   00000734   0xF8D0 0x0FA0      LDR      R0,[R0, #+4000]
   \   00000738   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   1046              }
   1047              Give.serverOrgPWM = temp_ServerOrgPWM2;
   \                     ??DirSpeedGive_31: (+1)
   \   0000073C   0x....             LDR.N    R0,??DataTable5
   \   0000073E   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   00000742   0x7681             STRB     R1,[R0, #+26]
   1048              Give.motorOrgSpeed = (uint16)(temp_MotorOrgSpeed2*Give.SpeedCoef);//乘以速度给定系数
   \   00000744   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   00000748   0x.... 0x....      BL       __aeabi_ui2f
   \   0000074C   0x....             LDR.N    R1,??DataTable5
   \   0000074E   0x6A89             LDR      R1,[R1, #+40]
   \   00000750   0x.... 0x....      BL       __aeabi_fmul
   \   00000754   0x.... 0x....      BL       __aeabi_f2iz
   \   00000758   0x....             LDR.N    R1,??DataTable5
   \   0000075A   0x8448             STRH     R0,[R1, #+34]
   1049              Give.lastmotorDSpeed = Give.motorDSpeed;//计算微分给定速度之前先存储上一次的微分给定速度
   \   0000075C   0x....             LDR.N    R0,??DataTable5
   \   0000075E   0x....             LDR.N    R1,??DataTable5
   \   00000760   0x8C89             LDRH     R1,[R1, #+36]
   \   00000762   0x84C1             STRH     R1,[R0, #+38]
   1050              //查表得出微分舵机给定PWM和微分电机给定速度
   1051              if(Give.serverDCen >= 1000)
   \   00000764   0x....             LDR.N    R0,??DataTable5
   \   00000766   0x8B00             LDRH     R0,[R0, #+24]
   \   00000768   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   0000076C   0xDB16             BLT.N    ??DirSpeedGive_32
   1052              {temp_ServerDPWM2 = GR_ServerPWM2[Give.serverDCen-1000] + 100;
   \   0000076E   0x....             LDR.N    R0,??DataTable5
   \   00000770   0x8B00             LDRH     R0,[R0, #+24]
   \   00000772   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   00000776   0x1840             ADDS     R0,R0,R1
   \   00000778   0xF5B0 0x707A      SUBS     R0,R0,#+1000
   \   0000077C   0x7800             LDRB     R0,[R0, #+0]
   \   0000077E   0x3064             ADDS     R0,R0,#+100
   \   00000780   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1053               temp_MotorDSpeed2 = GR_SpeedGive2[Give.motorDCen-1000];
   \   00000784   0x....             LDR.N    R0,??DataTable5
   \   00000786   0x8C00             LDRH     R0,[R0, #+32]
   \   00000788   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   0000078C   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   00000790   0xF5B0 0x607A      SUBS     R0,R0,#+4000
   \   00000794   0x6800             LDR      R0,[R0, #+0]
   \   00000796   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   \   0000079A   0xE016             B.N      ??DirSpeedGive_33
   1054              }
   1055              else 
   1056              {temp_ServerDPWM2 = 100 - GR_ServerPWM2[1000-Give.serverDCen];
   \                     ??DirSpeedGive_32: (+1)
   \   0000079C   0x....             LDR.N    R0,??DataTable5
   \   0000079E   0x8B00             LDRH     R0,[R0, #+24]
   \   000007A0   0x4240             RSBS     R0,R0,#+0
   \   000007A2   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   000007A6   0x1840             ADDS     R0,R0,R1
   \   000007A8   0xF890 0x03E8      LDRB     R0,[R0, #+1000]
   \   000007AC   0xF1D0 0x0064      RSBS     R0,R0,#+100
   \   000007B0   0xF8AD 0x0000      STRH     R0,[SP, #+0]
   1057               temp_MotorDSpeed2 = GR_SpeedGive2[1000-Give.motorDCen];
   \   000007B4   0x....             LDR.N    R0,??DataTable5
   \   000007B6   0x8C00             LDRH     R0,[R0, #+32]
   \   000007B8   0x4240             RSBS     R0,R0,#+0
   \   000007BA   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   000007BE   0xEB11 0x0080      ADDS     R0,R1,R0, LSL #+2
   \   000007C2   0xF8D0 0x0FA0      LDR      R0,[R0, #+4000]
   \   000007C6   0xF8AD 0x0002      STRH     R0,[SP, #+2]
   1058              }
   1059              Give.serverDPWM = temp_ServerDPWM2;
   \                     ??DirSpeedGive_33: (+1)
   \   000007CA   0x....             LDR.N    R0,??DataTable5
   \   000007CC   0xF8BD 0x1000      LDRH     R1,[SP, #+0]
   \   000007D0   0x76C1             STRB     R1,[R0, #+27]
   1060              Give.motorDSpeed = (uint16)(temp_MotorDSpeed2*Give.SpeedCoef);//乘以速度给定系数
   \   000007D2   0xF8BD 0x0002      LDRH     R0,[SP, #+2]
   \   000007D6   0x.... 0x....      BL       __aeabi_ui2f
   \   000007DA   0x....             LDR.N    R1,??DataTable5
   \   000007DC   0x6A89             LDR      R1,[R1, #+40]
   \   000007DE   0x.... 0x....      BL       __aeabi_fmul
   \   000007E2   0x.... 0x....      BL       __aeabi_f2iz
   \   000007E6   0x....             LDR.N    R1,??DataTable5
   \   000007E8   0x8488             STRH     R0,[R1, #+36]
   1061            }
   1062            
   1063            Give.motorDSpeed = 180;
   \                     ??DirSpeedGive_19: (+1)
   \   000007EA   0x....             LDR.N    R0,??DataTable5
   \   000007EC   0x21B4             MOVS     R1,#+180
   \   000007EE   0x8481             STRH     R1,[R0, #+36]
   1064            
   1065            if(Give.forceDir == 1){Give.serverDPWM = Give.SerHerringPWM;}//人字强制打角
   \   000007F0   0x....             LDR.N    R0,??DataTable5
   \   000007F2   0x7840             LDRB     R0,[R0, #+1]
   \   000007F4   0x2801             CMP      R0,#+1
   \   000007F6   0xD104             BNE.N    ??DirSpeedGive_34
   \   000007F8   0x....             LDR.N    R0,??DataTable5
   \   000007FA   0x....             LDR.N    R1,??DataTable5
   \   000007FC   0x7909             LDRB     R1,[R1, #+4]
   \   000007FE   0x76C1             STRB     R1,[R0, #+27]
   \   00000800   0xE007             B.N      ??DirSpeedGive_35
   1066            else if(Give.forceDir == 2){Give.serverDPWM = Give.ServerTestPWM;}//舵机测试强制打角
   \                     ??DirSpeedGive_34: (+1)
   \   00000802   0x....             LDR.N    R0,??DataTable5
   \   00000804   0x7840             LDRB     R0,[R0, #+1]
   \   00000806   0x2802             CMP      R0,#+2
   \   00000808   0xD103             BNE.N    ??DirSpeedGive_35
   \   0000080A   0x....             LDR.N    R0,??DataTable5
   \   0000080C   0x....             LDR.N    R1,??DataTable5
   \   0000080E   0x7949             LDRB     R1,[R1, #+5]
   \   00000810   0x76C1             STRB     R1,[R0, #+27]
   1067            
   1068            if(Give.forceSpeed == 1){Give.motorDSpeed = Give.MotorHerringSpeed;}//人字给定速度
   \                     ??DirSpeedGive_35: (+1)
   \   00000812   0x....             LDR.N    R0,??DataTable5
   \   00000814   0x8840             LDRH     R0,[R0, #+2]
   \   00000816   0x2801             CMP      R0,#+1
   \   00000818   0xD104             BNE.N    ??DirSpeedGive_36
   \   0000081A   0x....             LDR.N    R0,??DataTable5
   \   0000081C   0x....             LDR.N    R1,??DataTable5
   \   0000081E   0x88C9             LDRH     R1,[R1, #+6]
   \   00000820   0x8481             STRH     R1,[R0, #+36]
   \   00000822   0xE01D             B.N      ??DirSpeedGive_37
   1069            else if(Give.forceSpeed == 2){Give.motorDSpeed = Give.MotorRoadBlockSpeed;}//路障给定速度
   \                     ??DirSpeedGive_36: (+1)
   \   00000824   0x....             LDR.N    R0,??DataTable5
   \   00000826   0x8840             LDRH     R0,[R0, #+2]
   \   00000828   0x2802             CMP      R0,#+2
   \   0000082A   0xD104             BNE.N    ??DirSpeedGive_38
   \   0000082C   0x....             LDR.N    R0,??DataTable5
   \   0000082E   0x....             LDR.N    R1,??DataTable5
   \   00000830   0x8909             LDRH     R1,[R1, #+8]
   \   00000832   0x8481             STRH     R1,[R0, #+36]
   \   00000834   0xE014             B.N      ??DirSpeedGive_37
   1070            else if(Give.forceSpeed == 3){Give.motorDSpeed = Give.MotorRampSpeed;}//坡道给定速度
   \                     ??DirSpeedGive_38: (+1)
   \   00000836   0x....             LDR.N    R0,??DataTable5
   \   00000838   0x8840             LDRH     R0,[R0, #+2]
   \   0000083A   0x2803             CMP      R0,#+3
   \   0000083C   0xD104             BNE.N    ??DirSpeedGive_39
   \   0000083E   0x....             LDR.N    R0,??DataTable5
   \   00000840   0x....             LDR.N    R1,??DataTable5
   \   00000842   0x8949             LDRH     R1,[R1, #+10]
   \   00000844   0x8481             STRH     R1,[R0, #+36]
   \   00000846   0xE00B             B.N      ??DirSpeedGive_37
   1071            else if(Give.forceSpeed == 10 || Con.Run >=3){Give.motorDSpeed = 0;}//停止给定速度
   \                     ??DirSpeedGive_39: (+1)
   \   00000848   0x....             LDR.N    R0,??DataTable5
   \   0000084A   0x8840             LDRH     R0,[R0, #+2]
   \   0000084C   0x280A             CMP      R0,#+10
   \   0000084E   0xD004             BEQ.N    ??DirSpeedGive_40
   \   00000850   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000854   0x7B00             LDRB     R0,[R0, #+12]
   \   00000856   0x2803             CMP      R0,#+3
   \   00000858   0xDB02             BLT.N    ??DirSpeedGive_37
   \                     ??DirSpeedGive_40: (+1)
   \   0000085A   0x....             LDR.N    R0,??DataTable5
   \   0000085C   0x2100             MOVS     R1,#+0
   \   0000085E   0x8481             STRH     R1,[R0, #+36]
   1072          }
   \                     ??DirSpeedGive_37: (+1)
   \   00000860   0xBD13             POP      {R0,R1,R4,PC}    ;; return
   1073          

   \                                 In section .text, align 2, keep-with-next
   1074          void SpeedContral(void)//速度控制
   1075          { //临时存储当前速度
   \                     SpeedContral: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   1076            uint16 temp_currentSpeed,temp_motorPWM; 
   1077            //用于计算的实际速度必须能屏蔽电机控制周期的变化
   1078            temp_currentSpeed = Encoder.encoder[Encoder.currentEnc]*(5/Con.SpeedContralPeriod);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000006   0xF8B0 0x0190      LDRH     R0,[R0, #+400]
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   0000000E   0xF831 0x0010      LDRH     R0,[R1, R0, LSL #+1]
   \   00000012   0x2105             MOVS     R1,#+5
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable6_1
   \   00000018   0x7852             LDRB     R2,[R2, #+1]
   \   0000001A   0xFB91 0xF1F2      SDIV     R1,R1,R2
   \   0000001E   0xFB10 0xF601      SMULBB   R6,R0,R1
   1079            //*****************************************************************************************
   1080            //-----------------------------------------------------------------------------------------
   1081            //------------------------------------判断反转减速条件-------------------------------------
   1082            //-----------------------------------------------------------------------------------------
   1083            //*****************************************************************************************  
   1084            //若当前给定速度小于上次给定速度 并且 当前实际速度低于当前给定速度
   1085            if(Give.motorDSpeed < Give.lastmotorDSpeed && temp_currentSpeed < Give.motorDSpeed)
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000026   0x8C80             LDRH     R0,[R0, #+36]
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000002C   0x8CC9             LDRH     R1,[R1, #+38]
   \   0000002E   0x4288             CMP      R0,R1
   \   00000030   0xD210             BCS.N    ??SpeedContral_0
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000036   0x8C80             LDRH     R0,[R0, #+36]
   \   00000038   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000003A   0x4286             CMP      R6,R0
   \   0000003C   0xD20A             BCS.N    ??SpeedContral_0
   1086            { Give.motorRowback = 1;//电机反转减速标志置1
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000042   0x2101             MOVS     R1,#+1
   \   00000044   0xF880 0x102F      STRB     R1,[R0, #+47]
   1087              Give.motorRowbackRoad = Con.TotalRoad;//记录开始减速时的脉冲数
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000050   0x6849             LDR      R1,[R1, #+4]
   \   00000052   0x6301             STR      R1,[R0, #+48]
   1088            }
   1089            //若当前速度低于给定速度并且超过最短减速路程
   1090            if(temp_currentSpeed >= Give.motorDSpeed && Con.TotalRoad - Give.motorRowbackRoad > 10000)
   \                     ??SpeedContral_0: (+1)
   \   00000054   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000058   0x8C80             LDRH     R0,[R0, #+36]
   \   0000005A   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000005C   0x4286             CMP      R6,R0
   \   0000005E   0xD30F             BCC.N    ??SpeedContral_1
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000064   0x6840             LDR      R0,[R0, #+4]
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   0000006A   0x6B09             LDR      R1,[R1, #+48]
   \   0000006C   0x1A40             SUBS     R0,R0,R1
   \   0000006E   0xF242 0x7111      MOVW     R1,#+10001
   \   00000072   0x4288             CMP      R0,R1
   \   00000074   0xD304             BCC.N    ??SpeedContral_1
   1091            { Give.motorRowback = 0;//电机反转减速标志清0
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000007A   0x2100             MOVS     R1,#+0
   \   0000007C   0xF880 0x102F      STRB     R1,[R0, #+47]
   1092            }
   1093            //*****************************************************************************************
   1094            //-----------------------------------------------------------------------------------------
   1095            //------------------------------------计算电机输出占空比-------------------------------------
   1096            //-----------------------------------------------------------------------------------------
   1097            //*****************************************************************************************  
   1098          
   1099            //若当前速度小于给定速度，按恒定最大加速度给占空比
   1100            if(temp_currentSpeed < Give.motorDSpeed)
   \                     ??SpeedContral_1: (+1)
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000084   0x8C80             LDRH     R0,[R0, #+36]
   \   00000086   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000088   0x4286             CMP      R6,R0
   \   0000008A   0xD21E             BCS.N    ??SpeedContral_2
   1101            { //电机给定正转PWM(等效电机电压)=恒定最大加速度(已转换成相同量纲)+电机反电动势
   1102              temp_motorPWM = (uint16)(a_max + Con.Ce_ *temp_currentSpeed);
   \   0000008C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000008E   0x0030             MOVS     R0,R6
   \   00000090   0x.... 0x....      BL       __aeabi_ui2f
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000098   0x6C09             LDR      R1,[R1, #+64]
   \   0000009A   0x.... 0x....      BL       __aeabi_fmul
   \   0000009E   0x.... 0x....      LDR.W    R1,??DataTable6_9  ;; 0x43af0000
   \   000000A2   0x.... 0x....      BL       __aeabi_fadd
   \   000000A6   0x.... 0x....      BL       __aeabi_f2iz
   1103              if(temp_motorPWM > MotorMaxZhengZhuanPWM){temp_motorPWM = MotorMaxZhengZhuanPWM;}//PWM限幅
   \   000000AA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000AC   0xF240 0x31DF      MOVW     R1,#+991
   \   000000B0   0x4288             CMP      R0,R1
   \   000000B2   0xDB01             BLT.N    ??SpeedContral_3
   \   000000B4   0xF240 0x30DE      MOVW     R0,#+990
   1104              Give.motorPWM = temp_motorPWM;
   \                     ??SpeedContral_3: (+1)
   \   000000B8   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   000000BC   0x8588             STRH     R0,[R1, #+44]
   1105              Give.motorDir = 1;//电机方向：正转
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000C2   0x2101             MOVS     R1,#+1
   \   000000C4   0xF880 0x102E      STRB     R1,[R0, #+46]
   \   000000C8   0xE089             B.N      ??SpeedContral_4
   1106            }
   1107            //若当前速度大于给定速度，根据反转减速标志决定是否进行反转减速
   1108            else if(temp_currentSpeed >= Give.motorDSpeed && Give.motorDSpeed!=0)
   \                     ??SpeedContral_2: (+1)
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000CE   0x8C80             LDRH     R0,[R0, #+36]
   \   000000D0   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000000D2   0x4286             CMP      R6,R0
   \   000000D4   0xD34D             BCC.N    ??SpeedContral_5
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000DA   0x8C80             LDRH     R0,[R0, #+36]
   \   000000DC   0x2800             CMP      R0,#+0
   \   000000DE   0xD048             BEQ.N    ??SpeedContral_5
   1109            { //若反转减速标志为1或者处于坡道
   1110              if(Give.motorRowback == 1 || Trk.SpecialStatus == 42 
   1111                 && temp_currentSpeed > Give.motorDSpeed)
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000E4   0xF890 0x002F      LDRB     R0,[R0, #+47]
   \   000000E8   0x2801             CMP      R0,#+1
   \   000000EA   0xD00B             BEQ.N    ??SpeedContral_6
   \   000000EC   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000000F0   0xF890 0x069C      LDRB     R0,[R0, #+1692]
   \   000000F4   0x282A             CMP      R0,#+42
   \   000000F6   0xD132             BNE.N    ??SpeedContral_7
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   000000FC   0x8C80             LDRH     R0,[R0, #+36]
   \   000000FE   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000100   0x42B0             CMP      R0,R6
   \   00000102   0xD22C             BCS.N    ??SpeedContral_7
   1112              { //电机给定反转PWM=恒定最大加速度(已转换成相同量纲)-电机反电动势
   1113                if(a_max - Con.Ce_ *temp_currentSpeed >= 0){temp_motorPWM = (uint16)(a_max - Con.Ce_ *temp_currentSpeed);}
   \                     ??SpeedContral_6: (+1)
   \   00000104   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000106   0x0030             MOVS     R0,R6
   \   00000108   0x.... 0x....      BL       __aeabi_ui2f
   \   0000010C   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000110   0x6C09             LDR      R1,[R1, #+64]
   \   00000112   0x.... 0x....      BL       __aeabi_fmul
   \   00000116   0x0001             MOVS     R1,R0
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable6_9  ;; 0x43af0000
   \   0000011C   0x.... 0x....      BL       __aeabi_fsub
   \   00000120   0x2100             MOVS     R1,#+0
   \   00000122   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000126   0xD810             BHI.N    ??SpeedContral_8
   \   00000128   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000012A   0x0030             MOVS     R0,R6
   \   0000012C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000130   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000134   0x6C09             LDR      R1,[R1, #+64]
   \   00000136   0x.... 0x....      BL       __aeabi_fmul
   \   0000013A   0x0001             MOVS     R1,R0
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable6_9  ;; 0x43af0000
   \   00000140   0x.... 0x....      BL       __aeabi_fsub
   \   00000144   0x.... 0x....      BL       __aeabi_f2iz
   \   00000148   0xE000             B.N      ??SpeedContral_9
   1114                else {temp_motorPWM = 0;}
   \                     ??SpeedContral_8: (+1)
   \   0000014A   0x2000             MOVS     R0,#+0
   1115                Give.motorPWM = temp_motorPWM;
   \                     ??SpeedContral_9: (+1)
   \   0000014C   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   00000150   0x8588             STRH     R0,[R1, #+44]
   1116                Give.motorDir = 2;
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000156   0x2102             MOVS     R1,#+2
   \   00000158   0xF880 0x102E      STRB     R1,[R0, #+46]
   \   0000015C   0xE03F             B.N      ??SpeedContral_4
   1117              }
   1118              else//若反转减速标志为0或者给定速度等于实际速度，按0加速度给定正转占空比
   1119              { //temp_motorPWM = (uint16)(Ce*temp_currentSpeed);
   1120                temp_motorPWM = 0;
   \                     ??SpeedContral_7: (+1)
   \   0000015E   0x2000             MOVS     R0,#+0
   1121                Give.motorPWM = temp_motorPWM;
   \   00000160   0x.... 0x....      LDR.W    R1,??DataTable6_8
   \   00000164   0x8588             STRH     R0,[R1, #+44]
   1122                Give.motorDir = 1;
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000016A   0x2101             MOVS     R1,#+1
   \   0000016C   0xF880 0x102E      STRB     R1,[R0, #+46]
   \   00000170   0xE035             B.N      ??SpeedContral_4
   1123              }
   1124            }
   1125            //若当前给定速度为0
   1126            else if(Give.motorDSpeed == 0)
   \                     ??SpeedContral_5: (+1)
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000176   0x8C80             LDRH     R0,[R0, #+36]
   \   00000178   0x2800             CMP      R0,#+0
   \   0000017A   0xD130             BNE.N    ??SpeedContral_4
   1127            { if(temp_currentSpeed >=15)
   \   0000017C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000017E   0x2E0F             CMP      R6,#+15
   \   00000180   0xDB26             BLT.N    ??SpeedContral_10
   1128              {  //电机给定反转PWM=恒定最大加速度(已转换成相同量纲)-电机反电动势
   1129                if(a_max - Con.Ce_ *temp_currentSpeed >= 0){temp_motorPWM = (uint16)(a_max - Con.Ce_ *temp_currentSpeed);}
   \   00000182   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000184   0x0030             MOVS     R0,R6
   \   00000186   0x.... 0x....      BL       __aeabi_ui2f
   \   0000018A   0x....             LDR.N    R1,??DataTable6_1
   \   0000018C   0x6C09             LDR      R1,[R1, #+64]
   \   0000018E   0x.... 0x....      BL       __aeabi_fmul
   \   00000192   0x0001             MOVS     R1,R0
   \   00000194   0x....             LDR.N    R0,??DataTable6_9  ;; 0x43af0000
   \   00000196   0x.... 0x....      BL       __aeabi_fsub
   \   0000019A   0x2100             MOVS     R1,#+0
   \   0000019C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001A0   0xD80E             BHI.N    ??SpeedContral_11
   \   000001A2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000001A4   0x0030             MOVS     R0,R6
   \   000001A6   0x.... 0x....      BL       __aeabi_ui2f
   \   000001AA   0x....             LDR.N    R1,??DataTable6_1
   \   000001AC   0x6C09             LDR      R1,[R1, #+64]
   \   000001AE   0x.... 0x....      BL       __aeabi_fmul
   \   000001B2   0x0001             MOVS     R1,R0
   \   000001B4   0x....             LDR.N    R0,??DataTable6_9  ;; 0x43af0000
   \   000001B6   0x.... 0x....      BL       __aeabi_fsub
   \   000001BA   0x.... 0x....      BL       __aeabi_f2iz
   \   000001BE   0xE000             B.N      ??SpeedContral_12
   1130                else {temp_motorPWM = 0;}
   \                     ??SpeedContral_11: (+1)
   \   000001C0   0x2000             MOVS     R0,#+0
   1131                Give.motorPWM = temp_motorPWM;
   \                     ??SpeedContral_12: (+1)
   \   000001C2   0x....             LDR.N    R1,??DataTable6_8
   \   000001C4   0x8588             STRH     R0,[R1, #+44]
   1132                Give.motorDir = 2; 
   \   000001C6   0x....             LDR.N    R0,??DataTable6_8
   \   000001C8   0x2102             MOVS     R1,#+2
   \   000001CA   0xF880 0x102E      STRB     R1,[R0, #+46]
   \   000001CE   0xE006             B.N      ??SpeedContral_4
   1133              }
   1134              else
   1135              { Give.motorPWM = 0;
   \                     ??SpeedContral_10: (+1)
   \   000001D0   0x....             LDR.N    R0,??DataTable6_8
   \   000001D2   0x2100             MOVS     R1,#+0
   \   000001D4   0x8581             STRH     R1,[R0, #+44]
   1136                Give.motorDir = 1; 
   \   000001D6   0x....             LDR.N    R0,??DataTable6_8
   \   000001D8   0x2101             MOVS     R1,#+1
   \   000001DA   0xF880 0x102E      STRB     R1,[R0, #+46]
   1137              }
   1138            }
   1139            //*****************************************************************************************
   1140            //-----------------------------------------------------------------------------------------
   1141            //------------------------------------------PI算法-----------------------------------------
   1142            //-----------------------------------------------------------------------------------------
   1143            //***************************************************************************************** 
   1144            float temp_SpeedOffset,tempfloat_motorPWM;//临时记录速度偏差和电机PWM
   1145            float temp_i_;//临时记录当前积分项I
   1146            Give.lastSpeedOffset = Give.SpeedOffset;//记录上一次的偏差
   \                     ??SpeedContral_4: (+1)
   \   000001DE   0x....             LDR.N    R0,??DataTable6_8
   \   000001E0   0x....             LDR.N    R1,??DataTable6_8
   \   000001E2   0x6B89             LDR      R1,[R1, #+56]
   \   000001E4   0x6341             STR      R1,[R0, #+52]
   1147            temp_SpeedOffset = (float)Give.motorDSpeed - (float)temp_currentSpeed;//计算当前速度偏差
   \   000001E6   0x....             LDR.N    R0,??DataTable6_8
   \   000001E8   0x8C80             LDRH     R0,[R0, #+36]
   \   000001EA   0x.... 0x....      BL       __aeabi_ui2f
   \   000001EE   0x0004             MOVS     R4,R0
   \   000001F0   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000001F2   0x0030             MOVS     R0,R6
   \   000001F4   0x.... 0x....      BL       __aeabi_ui2f
   \   000001F8   0x0001             MOVS     R1,R0
   \   000001FA   0x0020             MOVS     R0,R4
   \   000001FC   0x.... 0x....      BL       __aeabi_fsub
   \   00000200   0x0007             MOVS     R7,R0
   1148            Give.SpeedOffset = temp_SpeedOffset;
   \   00000202   0x....             LDR.N    R0,??DataTable6_8
   \   00000204   0x6387             STR      R7,[R0, #+56]
   1149            
   1150            if(temp_SpeedOffset > 0 && (float)temp_currentSpeed < 0.9*(float)Give.motorDSpeed )
   \   00000206   0x0038             MOVS     R0,R7
   \   00000208   0x2100             MOVS     R1,#+0
   \   0000020A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000020E   0xD25B             BCS.N    ??SpeedContral_13
   \   00000210   0x....             LDR.N    R0,??DataTable6_8
   \   00000212   0x8C80             LDRH     R0,[R0, #+36]
   \   00000214   0x.... 0x....      BL       __aeabi_ui2f
   \   00000218   0x.... 0x....      BL       __aeabi_f2d
   \   0000021C   0x....             LDR.N    R2,??DataTable6_10  ;; 0xcccccccd
   \   0000021E   0x....             LDR.N    R3,??DataTable6_11  ;; 0x3feccccc
   \   00000220   0x.... 0x....      BL       __aeabi_dmul
   \   00000224   0x0002             MOVS     R2,R0
   \   00000226   0x000B             MOVS     R3,R1
   \   00000228   0x0014             MOVS     R4,R2
   \   0000022A   0x001D             MOVS     R5,R3
   \   0000022C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000022E   0x0030             MOVS     R0,R6
   \   00000230   0x.... 0x....      BL       __aeabi_ui2f
   \   00000234   0x.... 0x....      BL       __aeabi_f2d
   \   00000238   0x0022             MOVS     R2,R4
   \   0000023A   0x002B             MOVS     R3,R5
   \   0000023C   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000240   0xD242             BCS.N    ??SpeedContral_13
   1151            {
   1152              temp_i_ = Give._I_ + 0.08*temp_SpeedOffset;//计算当前积分项
   \   00000242   0x....             LDR.N    R0,??DataTable6_8
   \   00000244   0x6BC0             LDR      R0,[R0, #+60]
   \   00000246   0x.... 0x....      BL       __aeabi_f2d
   \   0000024A   0x0004             MOVS     R4,R0
   \   0000024C   0x000D             MOVS     R5,R1
   \   0000024E   0x0038             MOVS     R0,R7
   \   00000250   0x.... 0x....      BL       __aeabi_f2d
   \   00000254   0x....             LDR.N    R2,??DataTable6_12  ;; 0x47ae147b
   \   00000256   0x....             LDR.N    R3,??DataTable6_13  ;; 0x3fb47ae1
   \   00000258   0x.... 0x....      BL       __aeabi_dmul
   \   0000025C   0x0022             MOVS     R2,R4
   \   0000025E   0x002B             MOVS     R3,R5
   \   00000260   0x.... 0x....      BL       __aeabi_dadd
   \   00000264   0x.... 0x....      BL       __aeabi_d2f
   \   00000268   0x0004             MOVS     R4,R0
   1153              if(temp_i_>0 && temp_i_>a_max + Con.Ce_ *temp_currentSpeed){temp_i_ = a_max + Con.Ce_ *temp_currentSpeed;}//积分项限幅
   \   0000026A   0x0020             MOVS     R0,R4
   \   0000026C   0x2100             MOVS     R1,#+0
   \   0000026E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000272   0xD21B             BCS.N    ??SpeedContral_14
   \   00000274   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000276   0x0030             MOVS     R0,R6
   \   00000278   0x.... 0x....      BL       __aeabi_ui2f
   \   0000027C   0x....             LDR.N    R1,??DataTable6_1
   \   0000027E   0x6C09             LDR      R1,[R1, #+64]
   \   00000280   0x.... 0x....      BL       __aeabi_fmul
   \   00000284   0x....             LDR.N    R1,??DataTable6_9  ;; 0x43af0000
   \   00000286   0x.... 0x....      BL       __aeabi_fadd
   \   0000028A   0x0021             MOVS     R1,R4
   \   0000028C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000290   0xD20C             BCS.N    ??SpeedContral_14
   \   00000292   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000294   0x0030             MOVS     R0,R6
   \   00000296   0x.... 0x....      BL       __aeabi_ui2f
   \   0000029A   0x....             LDR.N    R1,??DataTable6_1
   \   0000029C   0x6C09             LDR      R1,[R1, #+64]
   \   0000029E   0x.... 0x....      BL       __aeabi_fmul
   \   000002A2   0x....             LDR.N    R1,??DataTable6_9  ;; 0x43af0000
   \   000002A4   0x.... 0x....      BL       __aeabi_fadd
   \   000002A8   0x0004             MOVS     R4,R0
   \   000002AA   0xE071             B.N      ??SpeedContral_15
   1154              else if(temp_i_<0 && (0-temp_i_)>400){temp_i_ = -400;}
   \                     ??SpeedContral_14: (+1)
   \   000002AC   0x0020             MOVS     R0,R4
   \   000002AE   0x2100             MOVS     R1,#+0
   \   000002B0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000002B4   0xD26C             BCS.N    ??SpeedContral_15
   \   000002B6   0x0020             MOVS     R0,R4
   \   000002B8   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   000002BC   0x....             LDR.N    R1,??DataTable6_14  ;; 0x43c80001
   \   000002BE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000002C2   0xD865             BHI.N    ??SpeedContral_15
   \   000002C4   0x....             LDR.N    R4,??DataTable6_15  ;; 0xc3c80000
   \   000002C6   0xE063             B.N      ??SpeedContral_15
   1155            }
   1156            //若当前速度小于给定速度并且当前速度已经达到给定速度的0.95倍以上，不再增加积分项，防止超调
   1157            else if(temp_SpeedOffset > 0 && (float)temp_currentSpeed > 0.95*(float)Give.motorDSpeed )
   \                     ??SpeedContral_13: (+1)
   \   000002C8   0x0038             MOVS     R0,R7
   \   000002CA   0x2100             MOVS     R1,#+0
   \   000002CC   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000002D0   0xD21C             BCS.N    ??SpeedContral_16
   \   000002D2   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   000002D4   0x0030             MOVS     R0,R6
   \   000002D6   0x.... 0x....      BL       __aeabi_ui2f
   \   000002DA   0x.... 0x....      BL       __aeabi_f2d
   \   000002DE   0x0002             MOVS     R2,R0
   \   000002E0   0x000B             MOVS     R3,R1
   \   000002E2   0x0014             MOVS     R4,R2
   \   000002E4   0x001D             MOVS     R5,R3
   \   000002E6   0x....             LDR.N    R0,??DataTable6_8
   \   000002E8   0x8C80             LDRH     R0,[R0, #+36]
   \   000002EA   0x.... 0x....      BL       __aeabi_ui2f
   \   000002EE   0x.... 0x....      BL       __aeabi_f2d
   \   000002F2   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000002F6   0x....             LDR.N    R3,??DataTable6_16  ;; 0x3fee6666
   \   000002F8   0x.... 0x....      BL       __aeabi_dmul
   \   000002FC   0x0022             MOVS     R2,R4
   \   000002FE   0x002B             MOVS     R3,R5
   \   00000300   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000304   0xD202             BCS.N    ??SpeedContral_16
   1158            {temp_i_ =  Give._I_;}//积分项保持不变 
   \   00000306   0x....             LDR.N    R0,??DataTable6_8
   \   00000308   0x6BC4             LDR      R4,[R0, #+60]
   \   0000030A   0xE041             B.N      ??SpeedContral_15
   1159            else 
   1160            { temp_i_ = Give._I_ + 0.09*temp_SpeedOffset;//计算当前积分项
   \                     ??SpeedContral_16: (+1)
   \   0000030C   0x....             LDR.N    R0,??DataTable6_8
   \   0000030E   0x6BC0             LDR      R0,[R0, #+60]
   \   00000310   0x.... 0x....      BL       __aeabi_f2d
   \   00000314   0x0004             MOVS     R4,R0
   \   00000316   0x000D             MOVS     R5,R1
   \   00000318   0x0038             MOVS     R0,R7
   \   0000031A   0x.... 0x....      BL       __aeabi_f2d
   \   0000031E   0x....             LDR.N    R2,??DataTable6_17  ;; 0x70a3d70a
   \   00000320   0x....             LDR.N    R3,??DataTable6_18  ;; 0x3fb70a3d
   \   00000322   0x.... 0x....      BL       __aeabi_dmul
   \   00000326   0x0022             MOVS     R2,R4
   \   00000328   0x002B             MOVS     R3,R5
   \   0000032A   0x.... 0x....      BL       __aeabi_dadd
   \   0000032E   0x.... 0x....      BL       __aeabi_d2f
   \   00000332   0x0004             MOVS     R4,R0
   1161              if(temp_i_>0 && temp_i_>a_max + Con.Ce_ *temp_currentSpeed){temp_i_ = a_max + Con.Ce_ *temp_currentSpeed;}//积分项限幅
   \   00000334   0x0020             MOVS     R0,R4
   \   00000336   0x2100             MOVS     R1,#+0
   \   00000338   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000033C   0xD21B             BCS.N    ??SpeedContral_17
   \   0000033E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000340   0x0030             MOVS     R0,R6
   \   00000342   0x.... 0x....      BL       __aeabi_ui2f
   \   00000346   0x....             LDR.N    R1,??DataTable6_1
   \   00000348   0x6C09             LDR      R1,[R1, #+64]
   \   0000034A   0x.... 0x....      BL       __aeabi_fmul
   \   0000034E   0x....             LDR.N    R1,??DataTable6_9  ;; 0x43af0000
   \   00000350   0x.... 0x....      BL       __aeabi_fadd
   \   00000354   0x0021             MOVS     R1,R4
   \   00000356   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000035A   0xD20C             BCS.N    ??SpeedContral_17
   \   0000035C   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000035E   0x0030             MOVS     R0,R6
   \   00000360   0x.... 0x....      BL       __aeabi_ui2f
   \   00000364   0x....             LDR.N    R1,??DataTable6_1
   \   00000366   0x6C09             LDR      R1,[R1, #+64]
   \   00000368   0x.... 0x....      BL       __aeabi_fmul
   \   0000036C   0x....             LDR.N    R1,??DataTable6_9  ;; 0x43af0000
   \   0000036E   0x.... 0x....      BL       __aeabi_fadd
   \   00000372   0x0004             MOVS     R4,R0
   \   00000374   0xE00C             B.N      ??SpeedContral_15
   1162              else if(temp_i_<0 && (0-temp_i_)>400){temp_i_ = -400;}
   \                     ??SpeedContral_17: (+1)
   \   00000376   0x0020             MOVS     R0,R4
   \   00000378   0x2100             MOVS     R1,#+0
   \   0000037A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000037E   0xD207             BCS.N    ??SpeedContral_15
   \   00000380   0x0020             MOVS     R0,R4
   \   00000382   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000386   0x....             LDR.N    R1,??DataTable6_14  ;; 0x43c80001
   \   00000388   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000038C   0xD800             BHI.N    ??SpeedContral_15
   \   0000038E   0x....             LDR.N    R4,??DataTable6_15  ;; 0xc3c80000
   1163            }
   1164            Give._I_ = temp_i_;
   \                     ??SpeedContral_15: (+1)
   \   00000390   0x....             LDR.N    R0,??DataTable6_8
   \   00000392   0x63C4             STR      R4,[R0, #+60]
   1165            tempfloat_motorPWM = 0*temp_SpeedOffset + temp_i_;//计算出最终的电机给定PWM
   \   00000394   0x2000             MOVS     R0,#+0
   \   00000396   0x0039             MOVS     R1,R7
   \   00000398   0x.... 0x....      BL       __aeabi_fmul
   \   0000039C   0x0021             MOVS     R1,R4
   \   0000039E   0x.... 0x....      BL       __aeabi_fadd
   \   000003A2   0x0002             MOVS     R2,R0
   1166            //最终输出限幅
   1167            if(tempfloat_motorPWM > 0 && tempfloat_motorPWM > MotorMaxZhengZhuanPWM){tempfloat_motorPWM = MotorMaxZhengZhuanPWM;}
   \   000003A4   0x0010             MOVS     R0,R2
   \   000003A6   0x2100             MOVS     R1,#+0
   \   000003A8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000003AC   0xD206             BCS.N    ??SpeedContral_18
   \   000003AE   0x0010             MOVS     R0,R2
   \   000003B0   0x....             LDR.N    R1,??DataTable6_19  ;; 0x44778001
   \   000003B2   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000003B6   0xD801             BHI.N    ??SpeedContral_18
   \   000003B8   0x....             LDR.N    R2,??DataTable6_20  ;; 0x44778000
   \   000003BA   0xE00C             B.N      ??SpeedContral_19
   1168            else if(tempfloat_motorPWM < 0 && (0-tempfloat_motorPWM) > MotorMaxFanZhuanPWM ){tempfloat_motorPWM = 0-MotorMaxFanZhuanPWM;}
   \                     ??SpeedContral_18: (+1)
   \   000003BC   0x0010             MOVS     R0,R2
   \   000003BE   0x2100             MOVS     R1,#+0
   \   000003C0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003C4   0xD207             BCS.N    ??SpeedContral_19
   \   000003C6   0x0010             MOVS     R0,R2
   \   000003C8   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   000003CC   0x....             LDR.N    R1,??DataTable6_19  ;; 0x44778001
   \   000003CE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000003D2   0xD800             BHI.N    ??SpeedContral_19
   \   000003D4   0x....             LDR.N    R2,??DataTable6_21  ;; 0xc4778000
   1169            
   1170            if(tempfloat_motorPWM >=0 ){Give.motorPWM = (uint16)tempfloat_motorPWM;Give.motorDir = 1;}
   \                     ??SpeedContral_19: (+1)
   \   000003D6   0x0010             MOVS     R0,R2
   \   000003D8   0x2100             MOVS     R1,#+0
   \   000003DA   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000003DE   0xD809             BHI.N    ??SpeedContral_20
   \   000003E0   0x0010             MOVS     R0,R2
   \   000003E2   0x.... 0x....      BL       __aeabi_f2iz
   \   000003E6   0x....             LDR.N    R1,??DataTable6_8
   \   000003E8   0x8588             STRH     R0,[R1, #+44]
   \   000003EA   0x....             LDR.N    R0,??DataTable6_8
   \   000003EC   0x2101             MOVS     R1,#+1
   \   000003EE   0xF880 0x102E      STRB     R1,[R0, #+46]
   \   000003F2   0xE00A             B.N      ??SpeedContral_21
   1171            else {Give.motorPWM = (uint16)(0-tempfloat_motorPWM);Give.motorDir = 2;}
   \                     ??SpeedContral_20: (+1)
   \   000003F4   0xF092 0x4200      EORS     R2,R2,#0x80000000
   \   000003F8   0x0010             MOVS     R0,R2
   \   000003FA   0x.... 0x....      BL       __aeabi_f2iz
   \   000003FE   0x....             LDR.N    R1,??DataTable6_8
   \   00000400   0x8588             STRH     R0,[R1, #+44]
   \   00000402   0x....             LDR.N    R0,??DataTable6_8
   \   00000404   0x2102             MOVS     R1,#+2
   \   00000406   0xF880 0x102E      STRB     R1,[R0, #+46]
   1172            
   1173            //若当前给定速度为0
   1174            if(Give.motorDSpeed == 0)
   \                     ??SpeedContral_21: (+1)
   \   0000040A   0x....             LDR.N    R0,??DataTable6_8
   \   0000040C   0x8C80             LDRH     R0,[R0, #+36]
   \   0000040E   0x2800             CMP      R0,#+0
   \   00000410   0xD130             BNE.N    ??SpeedContral_22
   1175            { if(temp_currentSpeed >=15)
   \   00000412   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000414   0x2E0F             CMP      R6,#+15
   \   00000416   0xDB26             BLT.N    ??SpeedContral_23
   1176              {  //电机给定反转PWM=恒定最大加速度(已转换成相同量纲)-电机反电动势
   1177                if(a_max - Con.Ce_ *temp_currentSpeed >= 0){temp_motorPWM = (uint16)(a_max - Con.Ce_ *temp_currentSpeed);}
   \   00000418   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000041A   0x0030             MOVS     R0,R6
   \   0000041C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000420   0x....             LDR.N    R1,??DataTable6_1
   \   00000422   0x6C09             LDR      R1,[R1, #+64]
   \   00000424   0x.... 0x....      BL       __aeabi_fmul
   \   00000428   0x0001             MOVS     R1,R0
   \   0000042A   0x....             LDR.N    R0,??DataTable6_9  ;; 0x43af0000
   \   0000042C   0x.... 0x....      BL       __aeabi_fsub
   \   00000430   0x2100             MOVS     R1,#+0
   \   00000432   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000436   0xD80E             BHI.N    ??SpeedContral_24
   \   00000438   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   0000043A   0x0030             MOVS     R0,R6
   \   0000043C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000440   0x....             LDR.N    R1,??DataTable6_1
   \   00000442   0x6C09             LDR      R1,[R1, #+64]
   \   00000444   0x.... 0x....      BL       __aeabi_fmul
   \   00000448   0x0001             MOVS     R1,R0
   \   0000044A   0x....             LDR.N    R0,??DataTable6_9  ;; 0x43af0000
   \   0000044C   0x.... 0x....      BL       __aeabi_fsub
   \   00000450   0x.... 0x....      BL       __aeabi_f2iz
   \   00000454   0xE000             B.N      ??SpeedContral_25
   1178                else {temp_motorPWM = 0;}
   \                     ??SpeedContral_24: (+1)
   \   00000456   0x2000             MOVS     R0,#+0
   1179                Give.motorPWM = temp_motorPWM;
   \                     ??SpeedContral_25: (+1)
   \   00000458   0x....             LDR.N    R1,??DataTable6_8
   \   0000045A   0x8588             STRH     R0,[R1, #+44]
   1180                Give.motorDir = 2; 
   \   0000045C   0x....             LDR.N    R0,??DataTable6_8
   \   0000045E   0x2102             MOVS     R1,#+2
   \   00000460   0xF880 0x102E      STRB     R1,[R0, #+46]
   \   00000464   0xE006             B.N      ??SpeedContral_22
   1181              }
   1182              else
   1183              { Give.motorPWM = 0;
   \                     ??SpeedContral_23: (+1)
   \   00000466   0x....             LDR.N    R0,??DataTable6_8
   \   00000468   0x2100             MOVS     R1,#+0
   \   0000046A   0x8581             STRH     R1,[R0, #+44]
   1184                Give.motorDir = 1; 
   \   0000046C   0x....             LDR.N    R0,??DataTable6_8
   \   0000046E   0x2101             MOVS     R1,#+1
   \   00000470   0xF880 0x102E      STRB     R1,[R0, #+46]
   1185              }
   1186            }
   1187          
   1188            if(Con.Run <=1 || Con.Run == 4 || Con.EnableMotor == 0){Give.motorPWM = 0;Give.motorDir = 1;}//停止后2秒或电机被禁止，电机PWM给0
   \                     ??SpeedContral_22: (+1)
   \   00000474   0x....             LDR.N    R0,??DataTable6_1
   \   00000476   0x7B00             LDRB     R0,[R0, #+12]
   \   00000478   0x2802             CMP      R0,#+2
   \   0000047A   0xDB08             BLT.N    ??SpeedContral_26
   \   0000047C   0x....             LDR.N    R0,??DataTable6_1
   \   0000047E   0x7B00             LDRB     R0,[R0, #+12]
   \   00000480   0x2804             CMP      R0,#+4
   \   00000482   0xD004             BEQ.N    ??SpeedContral_26
   \   00000484   0x....             LDR.N    R0,??DataTable6_1
   \   00000486   0xF890 0x0032      LDRB     R0,[R0, #+50]
   \   0000048A   0x2800             CMP      R0,#+0
   \   0000048C   0xD106             BNE.N    ??SpeedContral_27
   \                     ??SpeedContral_26: (+1)
   \   0000048E   0x....             LDR.N    R0,??DataTable6_8
   \   00000490   0x2100             MOVS     R1,#+0
   \   00000492   0x8581             STRH     R1,[R0, #+44]
   \   00000494   0x....             LDR.N    R0,??DataTable6_8
   \   00000496   0x2101             MOVS     R1,#+1
   \   00000498   0xF880 0x102E      STRB     R1,[R0, #+46]
   1189          }
   \                     ??SpeedContral_27: (+1)
   \   0000049C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     Encoder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     Trk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Con

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x3FC8F5C3         DC32     0x3fc8f5c3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     Give

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x3E99999A         DC32     0x3e99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     CCD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x3FD33333         DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     CCD2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     Trk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     CCD1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x3FC99999         DC32     0x3fc99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     Con

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x457A0001         DC32     0x457a0001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x457A0000         DC32     0x457a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     CCD2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x459C4001         DC32     0x459c4001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x459C4000         DC32     0x459c4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     Gyroscope

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     Trk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     Con

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     Infrared

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     Give

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     Encoder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     Trk

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     Con

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     GR_ServerPWM1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     GR_SpeedGive1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     GR_ServerPWM2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     GR_SpeedGive2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     Encoder

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     Give

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x43AF0000         DC32     0x43af0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0xCCCCCCCD         DC32     0xcccccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x3FECCCCC         DC32     0x3feccccc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x3FB47AE1         DC32     0x3fb47ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x43C80001         DC32     0x43c80001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0xC3C80000         DC32     0xc3c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x3FEE6666         DC32     0x3fee6666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x70A3D70A         DC32     0x70a3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x3FB70A3D         DC32     0x3fb70a3d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x44778001         DC32     0x44778001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x44778000         DC32     0x44778000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0xC4778000         DC32     0xc4778000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CCD1ImageAbstract
         8   -> __aeabi_d2iz
         8   -> __aeabi_dmul
         8   -> __aeabi_f2d
         8   -> __aeabi_i2f
       8   CCD2ImageAbstract
         8   -> __aeabi_d2iz
         8   -> __aeabi_dmul
         8   -> __aeabi_f2d
         8   -> __aeabi_i2f
      16   DirSpeedGive
        16   -> __aeabi_f2iz
        16   -> __aeabi_fmul
        16   -> __aeabi_ui2f
      24   FindCentralLine
        24   -> __aeabi_cdrcmple
        24   -> __aeabi_cfrcmple
        24   -> __aeabi_dmul
        24   -> __aeabi_f2iz
        24   -> __aeabi_fadd
        24   -> __aeabi_fdiv
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_i2d
        24   -> __aeabi_i2f
        24   -> __aeabi_ui2d
        24   -> __aeabi_ui2f
       0   GodRecognitionInit
       0   SpecialStatus
      24   SpeedContral
        24   -> __aeabi_cdcmple
        24   -> __aeabi_cfcmple
        24   -> __aeabi_cfrcmple
        24   -> __aeabi_d2f
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> __aeabi_f2iz
        24   -> __aeabi_fadd
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_ui2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
     136  CCD1
     178  CCD1ImageAbstract
     136  CCD2
     176  CCD2ImageAbstract
      68  Con
    2146  DirSpeedGive
     404  Encoder
    3580  FindCentralLine
     204  GR_ServerPWM1
     204  GR_ServerPWM2
     804  GR_SpeedGive1
     804  GR_SpeedGive2
      64  Give
     206  GodRecognitionInit
     404  Gyroscope
     404  Infrared
    5136  SpecialStatus
    1182  SpeedContral
    1784  Trk

 
  3 400 bytes in section .bss
  2 016 bytes in section .rodata
 12 796 bytes in section .text
 
 12 796 bytes of CODE  memory
  2 016 bytes of CONST memory
  3 400 bytes of DATA  memory

Errors: none
Warnings: none
