###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      26/Nov/2014  20:35:13 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    ShunAn_Panel\BIOS.c                                      #
#    Command line =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    ShunAn_Panel\BIOS.c -D IAR -D TWR_K60F120M -lCN          #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    FLASH_1MB\List\ -lB D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\ #
#                    ´úÂë\MK60FX512VLQ15\FLASH_1MB\List\ -o                   #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    FLASH_1MB\Obj\ --no_cse --no_unroll --no_inline          #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60F #
#                    X512VLQ15\ -I D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\M #
#                    K60FX512VLQ15\Library\ -I D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³° #
#                    µÈýºÅ\´úÂë\MK60FX512VLQ15\Library\BlessedAlien\ -I       #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    ShunAn_Panel\ -Ol --use_c++_inline                       #
#    List file    =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    FLASH_1MB\List\BIOS.lst                                  #
#    Object file  =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    FLASH_1MB\Obj\BIOS.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ShunAn_Panel\BIOS.c
      1          #include "arm_cm4.h"
      2          #include "MK60F15.h"
      3          #include "ShunAn_Lib.h"
      4          #include "start_ShunAn.h"
      5          #include "BlessedAlien.h"
      6          #include "TFT.h"
      7          #include "BIOS.h"
      8          

   \                                 In section .text, align 2, keep-with-next
      9          void v_Init_BIOS (void) // ³õÊ¼»¯BIOSÊä³öÒÔÓÒÏÂÎªÕýÍ³
     10          {
     11              
     12          }
   \                     v_Init_BIOS: (+1)
   \   00000000   0x4770             BX       LR               ;; return
     13          

   \                                 In section .text, align 2, keep-with-next
     14          void v_BIOS_6x8str_Ascii (uint16 X,uint16 Y,uint16 color,uint16 Backcolor,uint8 ch[])
     15          {
   \                     v_BIOS_6x8str_Ascii: (+1)
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0x4683             MOV      R11,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x0015             MOVS     R5,R2
   \   0000000A   0x001E             MOVS     R6,R3
     16              uint8 char_Num = 0; // ÏÔÊ¾¸öÊýÊýÁ¿
   \   0000000C   0x2700             MOVS     R7,#+0
     17              LCD_SetPath(4); // ÏÈÏÂºóÓÒ
   \   0000000E   0x2004             MOVS     R0,#+4
   \   00000010   0x.... 0x....      BL       LCD_SetPath
     18              for(uint8 Line_show = 0;Line_show < 8;Line_show++) // ÐÐÏÔÊ¾ - 8
   \   00000014   0xF05F 0x0800      MOVS     R8,#+0
   \   00000018   0xF8DD 0x9028      LDR      R9,[SP, #+40]
   \   0000001C   0xE002             B.N      ??v_BIOS_6x8str_Ascii_0
     19              {
     20                  LCD_SetCursor(X,Y+Line_show); // ÐÐÏÔÊ¾¿ØÖÆ
     21                  while('\0' != ch[char_Num]) // ¼ì²âÊÇ·ñµ½×îºó
     22                  {
     23                      for(uint8 loop = 0;loop < 6;loop++) // ÁÐ¿ØÖÆ - 6
     24                      {
     25                          uint8 c = ch[char_Num] - 32;
     26                          if(0 != (C6x8[c][loop]&(1<<(7-Line_show)))) // ÈôÎªÕæÔòÎª¿Õ£¬ÈôÎª¼ÙÔòÎªÊµÔÚ
     27                          {
     28                              LCD_DrawPoint(color);
     29                          }
     30                          else
     31                          {
     32                              LCD_DrawPoint(Backcolor);
     33                          }
     34                      }
     35                      char_Num ++; // ×Ö·ûÒÆ¶¯
     36                  }
     37                  char_Num = 0; // »Ø¸´×îÔç×Ö·û
   \                     ??v_BIOS_6x8str_Ascii_1: (+1)
   \   0000001E   0x2700             MOVS     R7,#+0
   \   00000020   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??v_BIOS_6x8str_Ascii_0: (+1)
   \   00000024   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000028   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000002C   0xDA36             BGE.N    ??v_BIOS_6x8str_Ascii_2
   \   0000002E   0xFA54 0xF188      UXTAB    R1,R4,R8
   \   00000032   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000034   0x4658             MOV      R0,R11
   \   00000036   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000038   0x.... 0x....      BL       LCD_SetCursor
   \   0000003C   0xE000             B.N      ??v_BIOS_6x8str_Ascii_3
   \                     ??v_BIOS_6x8str_Ascii_4: (+1)
   \   0000003E   0x1C7F             ADDS     R7,R7,#+1
   \                     ??v_BIOS_6x8str_Ascii_3: (+1)
   \   00000040   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000042   0xF817 0x0009      LDRB     R0,[R7, R9]
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD0E9             BEQ.N    ??v_BIOS_6x8str_Ascii_1
   \   0000004A   0xF05F 0x0A00      MOVS     R10,#+0
   \   0000004E   0xE006             B.N      ??v_BIOS_6x8str_Ascii_5
   \                     ??v_BIOS_6x8str_Ascii_6: (+1)
   \   00000050   0x0031             MOVS     R1,R6
   \   00000052   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000054   0x2022             MOVS     R0,#+34
   \   00000056   0x.... 0x....      BL       LCD_writeReg
   \                     ??v_BIOS_6x8str_Ascii_7: (+1)
   \   0000005A   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??v_BIOS_6x8str_Ascii_5: (+1)
   \   0000005E   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000062   0xF1BA 0x0F06      CMP      R10,#+6
   \   00000066   0xDAEA             BGE.N    ??v_BIOS_6x8str_Ascii_4
   \   00000068   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000006A   0xF817 0x0009      LDRB     R0,[R7, R9]
   \   0000006E   0x3820             SUBS     R0,R0,#+32
   \   00000070   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x2106             MOVS     R1,#+6
   \   00000078   0x.... 0x....      LDR.W    R2,??DataTable3
   \   0000007C   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   00000080   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   00000084   0x2101             MOVS     R1,#+1
   \   00000086   0xF1D8 0x0207      RSBS     R2,R8,#+7
   \   0000008A   0x4091             LSLS     R1,R1,R2
   \   0000008C   0x4208             TST      R0,R1
   \   0000008E   0xD0DF             BEQ.N    ??v_BIOS_6x8str_Ascii_6
   \   00000090   0x0029             MOVS     R1,R5
   \   00000092   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000094   0x2022             MOVS     R0,#+34
   \   00000096   0x.... 0x....      BL       LCD_writeReg
   \   0000009A   0xE7DE             B.N      ??v_BIOS_6x8str_Ascii_7
     38              }
     39          }
   \                     ??v_BIOS_6x8str_Ascii_2: (+1)
   \   0000009C   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
     40          
     41          
     42          

   \                                 In section .text, align 2, keep-with-next
     43          void v_BIOS_6x8Num (uint16 X,uint16 Y,uint16 color,uint16 Backcolor,double num)
     44          {
   \                     v_BIOS_6x8Num: (+1)
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB089             SUB      SP,SP,#+36
   \   00000006   0x4683             MOV      R11,R0
   \   00000008   0x468A             MOV      R10,R1
   \   0000000A   0x0017             MOVS     R7,R2
   \   0000000C   0x001E             MOVS     R6,R3
     45              uint8 ch[] = "-0000000000.000000"; // 10+6+2 = 18 * 6 = 108
   \   0000000E   0xA804             ADD      R0,SP,#+16
   \   00000010   0x.... 0x....      LDR.W    R1,??DataTable3_1
   \   00000014   0x2213             MOVS     R2,#+19
   \   00000016   0x.... 0x....      BL       __aeabi_memcpy4
     46              uint8 ch_show[] = "xxxxxxxxxx"; // ×Ö·ûÏÔÊ¾
   \   0000001A   0xA801             ADD      R0,SP,#+4
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable3_2
   \   00000020   0x220B             MOVS     R2,#+11
   \   00000022   0x.... 0x....      BL       __aeabi_memcpy4
     47              uint8 Gaia_Div = 0;
   \   00000026   0xF05F 0x0800      MOVS     R8,#+0
   \   0000002A   0xE9DD 0x4512      LDRD     R4,R5,[SP, #+72]
     48              //             1000000000
     49              // sint32
     50              // float
     51              // double
     52              // Ò»´ÎÏÔÊ¾Ê®¸ö×Ö·û -0.
     53              // ·Ö¸îÖ¸Êý²¿·ÖÓëÐ¡Êý²¿·Ö
     54              sint32 num_Integer = (sint32)(num);
   \   0000002E   0x0020             MOVS     R0,R4
   \   00000030   0x0029             MOVS     R1,R5
   \   00000032   0x.... 0x....      BL       __aeabi_d2iz
   \   00000036   0x4681             MOV      R9,R0
     55              if(num >= 0.0){ch[0] = '+';}
   \   00000038   0x0020             MOVS     R0,R4
   \   0000003A   0x0029             MOVS     R1,R5
   \   0000003C   0x2200             MOVS     R2,#+0
   \   0000003E   0x2300             MOVS     R3,#+0
   \   00000040   0x.... 0x....      BL       __aeabi_cdrcmple
   \   00000044   0xD803             BHI.N    ??v_BIOS_6x8Num_0
   \   00000046   0x202B             MOVS     R0,#+43
   \   00000048   0xF88D 0x0010      STRB     R0,[SP, #+16]
   \   0000004C   0xE002             B.N      ??v_BIOS_6x8Num_1
     56              else{ch[0] = '-';}
   \                     ??v_BIOS_6x8Num_0: (+1)
   \   0000004E   0x202D             MOVS     R0,#+45
   \   00000050   0xF88D 0x0010      STRB     R0,[SP, #+16]
     57              num_Integer = __ABS(num_Integer);
   \                     ??v_BIOS_6x8Num_1: (+1)
   \   00000054   0xF1B9 0x0F00      CMP      R9,#+0
   \   00000058   0xD502             BPL.N    ??v_BIOS_6x8Num_2
   \   0000005A   0xF1D9 0x0900      RSBS     R9,R9,#+0
   \   0000005E   0xE7FF             B.N      ??v_BIOS_6x8Num_3
     58              // Ö¸Êý²¿·Ö
     59              if(num_Integer >= 1000000000){Gaia_Div = 9;}else
   \                     ??v_BIOS_6x8Num_2: (+1)
   \                     ??v_BIOS_6x8Num_3: (+1)
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x3b9aca00
   \   00000064   0x4581             CMP      R9,R0
   \   00000066   0xDB02             BLT.N    ??v_BIOS_6x8Num_4
   \   00000068   0xF05F 0x0809      MOVS     R8,#+9
   \   0000006C   0xE036             B.N      ??v_BIOS_6x8Num_5
     60              if(num_Integer >=  100000000){Gaia_Div = 8;}else
   \                     ??v_BIOS_6x8Num_4: (+1)
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable3_4  ;; 0x5f5e100
   \   00000072   0x4581             CMP      R9,R0
   \   00000074   0xDB02             BLT.N    ??v_BIOS_6x8Num_6
   \   00000076   0xF05F 0x0808      MOVS     R8,#+8
   \   0000007A   0xE02F             B.N      ??v_BIOS_6x8Num_5
     61              if(num_Integer >=   10000000){Gaia_Div = 7;}else
   \                     ??v_BIOS_6x8Num_6: (+1)
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable3_5  ;; 0x989680
   \   00000080   0x4581             CMP      R9,R0
   \   00000082   0xDB02             BLT.N    ??v_BIOS_6x8Num_7
   \   00000084   0xF05F 0x0807      MOVS     R8,#+7
   \   00000088   0xE028             B.N      ??v_BIOS_6x8Num_5
     62              if(num_Integer >=    1000000){Gaia_Div = 6;}else
   \                     ??v_BIOS_6x8Num_7: (+1)
   \   0000008A   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0xf4240
   \   0000008E   0x4581             CMP      R9,R0
   \   00000090   0xDB02             BLT.N    ??v_BIOS_6x8Num_8
   \   00000092   0xF05F 0x0806      MOVS     R8,#+6
   \   00000096   0xE021             B.N      ??v_BIOS_6x8Num_5
     63              if(num_Integer >=     100000){Gaia_Div = 5;}else
   \                     ??v_BIOS_6x8Num_8: (+1)
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable3_7  ;; 0x186a0
   \   0000009C   0x4581             CMP      R9,R0
   \   0000009E   0xDB02             BLT.N    ??v_BIOS_6x8Num_9
   \   000000A0   0xF05F 0x0805      MOVS     R8,#+5
   \   000000A4   0xE01A             B.N      ??v_BIOS_6x8Num_5
     64              if(num_Integer >=      10000){Gaia_Div = 4;}else
   \                     ??v_BIOS_6x8Num_9: (+1)
   \   000000A6   0xF242 0x7010      MOVW     R0,#+10000
   \   000000AA   0x4581             CMP      R9,R0
   \   000000AC   0xDB02             BLT.N    ??v_BIOS_6x8Num_10
   \   000000AE   0xF05F 0x0804      MOVS     R8,#+4
   \   000000B2   0xE013             B.N      ??v_BIOS_6x8Num_5
     65              if(num_Integer >=       1000){Gaia_Div = 3;}else
   \                     ??v_BIOS_6x8Num_10: (+1)
   \   000000B4   0xF5B9 0x7F7A      CMP      R9,#+1000
   \   000000B8   0xDB02             BLT.N    ??v_BIOS_6x8Num_11
   \   000000BA   0xF05F 0x0803      MOVS     R8,#+3
   \   000000BE   0xE00D             B.N      ??v_BIOS_6x8Num_5
     66              if(num_Integer >=        100){Gaia_Div = 2;}else
   \                     ??v_BIOS_6x8Num_11: (+1)
   \   000000C0   0xF1B9 0x0F64      CMP      R9,#+100
   \   000000C4   0xDB02             BLT.N    ??v_BIOS_6x8Num_12
   \   000000C6   0xF05F 0x0802      MOVS     R8,#+2
   \   000000CA   0xE007             B.N      ??v_BIOS_6x8Num_5
     67              if(num_Integer >=         10){Gaia_Div = 1;}else // num_Integer >= 0
   \                     ??v_BIOS_6x8Num_12: (+1)
   \   000000CC   0xF1B9 0x0F0A      CMP      R9,#+10
   \   000000D0   0xDB02             BLT.N    ??v_BIOS_6x8Num_13
   \   000000D2   0xF05F 0x0801      MOVS     R8,#+1
   \   000000D6   0xE001             B.N      ??v_BIOS_6x8Num_5
     68                                           {Gaia_Div = 0;}
   \                     ??v_BIOS_6x8Num_13: (+1)
   \   000000D8   0xF05F 0x0800      MOVS     R8,#+0
     69              switch(Gaia_Div)
   \                     ??v_BIOS_6x8Num_5: (+1)
   \   000000DC   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000E0   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000E4   0xF000 0x8081      BEQ.W    ??v_BIOS_6x8Num_14
   \   000000E8   0xF1B8 0x0F02      CMP      R8,#+2
   \   000000EC   0xD067             BEQ.N    ??v_BIOS_6x8Num_15
   \   000000EE   0xD371             BCC.N    ??v_BIOS_6x8Num_16
   \   000000F0   0xF1B8 0x0F04      CMP      R8,#+4
   \   000000F4   0xD049             BEQ.N    ??v_BIOS_6x8Num_17
   \   000000F6   0xD355             BCC.N    ??v_BIOS_6x8Num_18
   \   000000F8   0xF1B8 0x0F06      CMP      R8,#+6
   \   000000FC   0xD02E             BEQ.N    ??v_BIOS_6x8Num_19
   \   000000FE   0xD339             BCC.N    ??v_BIOS_6x8Num_20
   \   00000100   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000104   0xD010             BEQ.N    ??v_BIOS_6x8Num_21
   \   00000106   0xD31C             BCC.N    ??v_BIOS_6x8Num_22
   \   00000108   0xF1B8 0x0F09      CMP      R8,#+9
   \   0000010C   0xD171             BNE.N    ??v_BIOS_6x8Num_23
     70              {
     71                  case 9:ch[1] = num_Integer/1000000000 + '0';
   \                     ??v_BIOS_6x8Num_24: (+1)
   \   0000010E   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x3b9aca00
   \   00000112   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000116   0x3030             ADDS     R0,R0,#+48
   \   00000118   0xF88D 0x0011      STRB     R0,[SP, #+17]
     72                   num_Integer = num_Integer%1000000000;
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable3_3  ;; 0x3b9aca00
   \   00000120   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000124   0xFB00 0x9911      MLS      R9,R0,R1,R9
     73                 // break;
     74                  case 8:ch[2] = num_Integer/100000000 + '0';
   \                     ??v_BIOS_6x8Num_21: (+1)
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable3_4  ;; 0x5f5e100
   \   0000012C   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000130   0x3030             ADDS     R0,R0,#+48
   \   00000132   0xF88D 0x0012      STRB     R0,[SP, #+18]
     75                   num_Integer = num_Integer%100000000;
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable3_4  ;; 0x5f5e100
   \   0000013A   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   0000013E   0xFB00 0x9911      MLS      R9,R0,R1,R9
     76                 // break;
     77                  case 7:ch[3] = num_Integer/10000000 + '0';
   \                     ??v_BIOS_6x8Num_22: (+1)
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable3_5  ;; 0x989680
   \   00000146   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   0000014A   0x3030             ADDS     R0,R0,#+48
   \   0000014C   0xF88D 0x0013      STRB     R0,[SP, #+19]
     78                   num_Integer = num_Integer%10000000;
   \   00000150   0x.... 0x....      LDR.W    R0,??DataTable3_5  ;; 0x989680
   \   00000154   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000158   0xFB00 0x9911      MLS      R9,R0,R1,R9
     79                 // break;
     80                  case 6:ch[4] = num_Integer/1000000 + '0';
   \                     ??v_BIOS_6x8Num_19: (+1)
   \   0000015C   0x.... 0x....      LDR.W    R0,??DataTable3_6  ;; 0xf4240
   \   00000160   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000164   0x3030             ADDS     R0,R0,#+48
   \   00000166   0xF88D 0x0014      STRB     R0,[SP, #+20]
     81                   num_Integer = num_Integer%1000000;
   \   0000016A   0x....             LDR.N    R0,??DataTable3_6  ;; 0xf4240
   \   0000016C   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000170   0xFB00 0x9911      MLS      R9,R0,R1,R9
     82                 // break;
     83                  case 5:ch[5] = num_Integer/100000 + '0';
   \                     ??v_BIOS_6x8Num_20: (+1)
   \   00000174   0x....             LDR.N    R0,??DataTable3_7  ;; 0x186a0
   \   00000176   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   0000017A   0x3030             ADDS     R0,R0,#+48
   \   0000017C   0xF88D 0x0015      STRB     R0,[SP, #+21]
     84                   num_Integer = num_Integer%100000;
   \   00000180   0x....             LDR.N    R0,??DataTable3_7  ;; 0x186a0
   \   00000182   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000186   0xFB00 0x9911      MLS      R9,R0,R1,R9
     85                 // break;
     86                  case 4:ch[6] = num_Integer/10000 + '0';
   \                     ??v_BIOS_6x8Num_17: (+1)
   \   0000018A   0xF242 0x7010      MOVW     R0,#+10000
   \   0000018E   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000192   0x3030             ADDS     R0,R0,#+48
   \   00000194   0xF88D 0x0016      STRB     R0,[SP, #+22]
     87                   num_Integer = num_Integer%10000;
   \   00000198   0xF242 0x7010      MOVW     R0,#+10000
   \   0000019C   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000001A0   0xFB00 0x9911      MLS      R9,R0,R1,R9
     88                 // break;
     89                  case 3:ch[7] = num_Integer/1000 + '0';
   \                     ??v_BIOS_6x8Num_18: (+1)
   \   000001A4   0xF44F 0x707A      MOV      R0,#+1000
   \   000001A8   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000001AC   0x3030             ADDS     R0,R0,#+48
   \   000001AE   0xF88D 0x0017      STRB     R0,[SP, #+23]
     90                   num_Integer = num_Integer%1000;
   \   000001B2   0xF44F 0x707A      MOV      R0,#+1000
   \   000001B6   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000001BA   0xFB00 0x9911      MLS      R9,R0,R1,R9
     91                 // break;
     92                  case 2:ch[8] = num_Integer/100 + '0';
   \                     ??v_BIOS_6x8Num_15: (+1)
   \   000001BE   0x2064             MOVS     R0,#+100
   \   000001C0   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000001C4   0x3030             ADDS     R0,R0,#+48
   \   000001C6   0xF88D 0x0018      STRB     R0,[SP, #+24]
     93                   num_Integer = num_Integer%100;
   \   000001CA   0x2064             MOVS     R0,#+100
   \   000001CC   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000001D0   0xFB00 0x9911      MLS      R9,R0,R1,R9
     94                 // break;
     95                  case 1:ch[9] = num_Integer/10 + '0';
   \                     ??v_BIOS_6x8Num_16: (+1)
   \   000001D4   0x200A             MOVS     R0,#+10
   \   000001D6   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000001DA   0x3030             ADDS     R0,R0,#+48
   \   000001DC   0xF88D 0x0019      STRB     R0,[SP, #+25]
     96                   num_Integer = num_Integer%10;
   \   000001E0   0x200A             MOVS     R0,#+10
   \   000001E2   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000001E6   0xFB00 0x9911      MLS      R9,R0,R1,R9
     97                 // break;
     98                  case 0:ch[10] = num_Integer + '0';
   \                     ??v_BIOS_6x8Num_14: (+1)
   \   000001EA   0xF119 0x0030      ADDS     R0,R9,#+48
   \   000001EE   0xF88D 0x001A      STRB     R0,[SP, #+26]
     99                  break;
    100              }
    101              num_Integer = __ABS((sint32)(num));
   \                     ??v_BIOS_6x8Num_23: (+1)
   \   000001F2   0x0020             MOVS     R0,R4
   \   000001F4   0x0029             MOVS     R1,R5
   \   000001F6   0x.... 0x....      BL       __aeabi_d2iz
   \   000001FA   0x2800             CMP      R0,#+0
   \   000001FC   0xD506             BPL.N    ??v_BIOS_6x8Num_25
   \   000001FE   0x0020             MOVS     R0,R4
   \   00000200   0x0029             MOVS     R1,R5
   \   00000202   0x.... 0x....      BL       __aeabi_d2iz
   \   00000206   0xF1D0 0x0900      RSBS     R9,R0,#+0
   \   0000020A   0xE004             B.N      ??v_BIOS_6x8Num_26
   \                     ??v_BIOS_6x8Num_25: (+1)
   \   0000020C   0x0020             MOVS     R0,R4
   \   0000020E   0x0029             MOVS     R1,R5
   \   00000210   0x.... 0x....      BL       __aeabi_d2iz
   \   00000214   0x4681             MOV      R9,R0
    102              float num_Decimal = __ABS(num) - num_Integer;
   \                     ??v_BIOS_6x8Num_26: (+1)
   \   00000216   0x0020             MOVS     R0,R4
   \   00000218   0x0029             MOVS     R1,R5
   \   0000021A   0x2200             MOVS     R2,#+0
   \   0000021C   0x2300             MOVS     R3,#+0
   \   0000021E   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000222   0xD202             BCS.N    ??v_BIOS_6x8Num_27
   \   00000224   0xF095 0x4500      EORS     R5,R5,#0x80000000
   \   00000228   0xE7FF             B.N      ??v_BIOS_6x8Num_28
   \                     ??v_BIOS_6x8Num_27: (+1)
   \                     ??v_BIOS_6x8Num_28: (+1)
   \   0000022A   0x4648             MOV      R0,R9
   \   0000022C   0x.... 0x....      BL       __aeabi_i2d
   \   00000230   0x0002             MOVS     R2,R0
   \   00000232   0x000B             MOVS     R3,R1
   \   00000234   0x0020             MOVS     R0,R4
   \   00000236   0x0029             MOVS     R1,R5
   \   00000238   0x.... 0x....      BL       __aeabi_dsub
   \   0000023C   0x.... 0x....      BL       __aeabi_d2f
    103              // Ð¡Êý²¿·Ö´¦Àí
    104              num_Integer = (sint32)(num_Decimal * 1000000);
   \   00000240   0x....             LDR.N    R1,??DataTable3_8  ;; 0x49742400
   \   00000242   0x.... 0x....      BL       __aeabi_fmul
   \   00000246   0x.... 0x....      BL       __aeabi_f2iz
   \   0000024A   0x4681             MOV      R9,R0
    105              if(num_Integer >=     100000){Gaia_Div = 5;}else
   \   0000024C   0x....             LDR.N    R0,??DataTable3_7  ;; 0x186a0
   \   0000024E   0x4581             CMP      R9,R0
   \   00000250   0xDB02             BLT.N    ??v_BIOS_6x8Num_29
   \   00000252   0xF05F 0x0805      MOVS     R8,#+5
   \   00000256   0xE01A             B.N      ??v_BIOS_6x8Num_30
    106              if(num_Integer >=      10000){Gaia_Div = 4;}else
   \                     ??v_BIOS_6x8Num_29: (+1)
   \   00000258   0xF242 0x7010      MOVW     R0,#+10000
   \   0000025C   0x4581             CMP      R9,R0
   \   0000025E   0xDB02             BLT.N    ??v_BIOS_6x8Num_31
   \   00000260   0xF05F 0x0804      MOVS     R8,#+4
   \   00000264   0xE013             B.N      ??v_BIOS_6x8Num_30
    107              if(num_Integer >=       1000){Gaia_Div = 3;}else
   \                     ??v_BIOS_6x8Num_31: (+1)
   \   00000266   0xF5B9 0x7F7A      CMP      R9,#+1000
   \   0000026A   0xDB02             BLT.N    ??v_BIOS_6x8Num_32
   \   0000026C   0xF05F 0x0803      MOVS     R8,#+3
   \   00000270   0xE00D             B.N      ??v_BIOS_6x8Num_30
    108              if(num_Integer >=        100){Gaia_Div = 2;}else
   \                     ??v_BIOS_6x8Num_32: (+1)
   \   00000272   0xF1B9 0x0F64      CMP      R9,#+100
   \   00000276   0xDB02             BLT.N    ??v_BIOS_6x8Num_33
   \   00000278   0xF05F 0x0802      MOVS     R8,#+2
   \   0000027C   0xE007             B.N      ??v_BIOS_6x8Num_30
    109              if(num_Integer >=         10){Gaia_Div = 1;}else // num_Integer >= 0
   \                     ??v_BIOS_6x8Num_33: (+1)
   \   0000027E   0xF1B9 0x0F0A      CMP      R9,#+10
   \   00000282   0xDB02             BLT.N    ??v_BIOS_6x8Num_34
   \   00000284   0xF05F 0x0801      MOVS     R8,#+1
   \   00000288   0xE001             B.N      ??v_BIOS_6x8Num_30
    110                                           {Gaia_Div = 0;}
   \                     ??v_BIOS_6x8Num_34: (+1)
   \   0000028A   0xF05F 0x0800      MOVS     R8,#+0
    111              switch(Gaia_Div)
   \                     ??v_BIOS_6x8Num_30: (+1)
   \   0000028E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000292   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000296   0xD045             BEQ.N    ??v_BIOS_6x8Num_35
   \   00000298   0xF1B8 0x0F02      CMP      R8,#+2
   \   0000029C   0xD02C             BEQ.N    ??v_BIOS_6x8Num_36
   \   0000029E   0xD336             BCC.N    ??v_BIOS_6x8Num_37
   \   000002A0   0xF1B8 0x0F04      CMP      R8,#+4
   \   000002A4   0xD00E             BEQ.N    ??v_BIOS_6x8Num_38
   \   000002A6   0xD31A             BCC.N    ??v_BIOS_6x8Num_39
   \   000002A8   0xF1B8 0x0F05      CMP      R8,#+5
   \   000002AC   0xD13E             BNE.N    ??v_BIOS_6x8Num_40
    112              {
    113                  case 5:ch[12] = num_Integer/100000 + '0';
   \                     ??v_BIOS_6x8Num_41: (+1)
   \   000002AE   0x....             LDR.N    R0,??DataTable3_7  ;; 0x186a0
   \   000002B0   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000002B4   0x3030             ADDS     R0,R0,#+48
   \   000002B6   0xF88D 0x001C      STRB     R0,[SP, #+28]
    114                   num_Integer = num_Integer%100000;
   \   000002BA   0x....             LDR.N    R0,??DataTable3_7  ;; 0x186a0
   \   000002BC   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000002C0   0xFB00 0x9911      MLS      R9,R0,R1,R9
    115                 // break;
    116                  case 4:ch[13] = num_Integer/10000 + '0';
   \                     ??v_BIOS_6x8Num_38: (+1)
   \   000002C4   0xF242 0x7010      MOVW     R0,#+10000
   \   000002C8   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000002CC   0x3030             ADDS     R0,R0,#+48
   \   000002CE   0xF88D 0x001D      STRB     R0,[SP, #+29]
    117                   num_Integer = num_Integer%10000;
   \   000002D2   0xF242 0x7010      MOVW     R0,#+10000
   \   000002D6   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000002DA   0xFB00 0x9911      MLS      R9,R0,R1,R9
    118                 // break;
    119                  case 3:ch[14] = num_Integer/1000 + '0';
   \                     ??v_BIOS_6x8Num_39: (+1)
   \   000002DE   0xF44F 0x707A      MOV      R0,#+1000
   \   000002E2   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000002E6   0x3030             ADDS     R0,R0,#+48
   \   000002E8   0xF88D 0x001E      STRB     R0,[SP, #+30]
    120                   num_Integer = num_Integer%1000;
   \   000002EC   0xF44F 0x707A      MOV      R0,#+1000
   \   000002F0   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000002F4   0xFB00 0x9911      MLS      R9,R0,R1,R9
    121                 // break;
    122                  case 2:ch[15] = num_Integer/100 + '0';
   \                     ??v_BIOS_6x8Num_36: (+1)
   \   000002F8   0x2064             MOVS     R0,#+100
   \   000002FA   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000002FE   0x3030             ADDS     R0,R0,#+48
   \   00000300   0xF88D 0x001F      STRB     R0,[SP, #+31]
    123                   num_Integer = num_Integer%100;
   \   00000304   0x2064             MOVS     R0,#+100
   \   00000306   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   0000030A   0xFB00 0x9911      MLS      R9,R0,R1,R9
    124                 // break;
    125                  case 1:ch[16] = num_Integer/10 + '0';
   \                     ??v_BIOS_6x8Num_37: (+1)
   \   0000030E   0x200A             MOVS     R0,#+10
   \   00000310   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000314   0x3030             ADDS     R0,R0,#+48
   \   00000316   0xF88D 0x0020      STRB     R0,[SP, #+32]
    126                   num_Integer = num_Integer%10;
   \   0000031A   0x200A             MOVS     R0,#+10
   \   0000031C   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000320   0xFB00 0x9911      MLS      R9,R0,R1,R9
    127                 // break;
    128                  case 0:ch[17] = num_Integer + '0';
   \                     ??v_BIOS_6x8Num_35: (+1)
   \   00000324   0xF119 0x0030      ADDS     R0,R9,#+48
   \   00000328   0xF88D 0x0021      STRB     R0,[SP, #+33]
    129                  break;
    130              }
    131              // ¼ò»¯Ä£ÐÍÈçÏÂ
    132              uint8 show_new = 0;
   \                     ??v_BIOS_6x8Num_40: (+1)
   \   0000032C   0x2000             MOVS     R0,#+0
    133              if('-' == ch[0]){ch_show[0] = '-';show_new = 1;}
   \   0000032E   0xF89D 0x1010      LDRB     R1,[SP, #+16]
   \   00000332   0x292D             CMP      R1,#+45
   \   00000334   0xD103             BNE.N    ??v_BIOS_6x8Num_42
   \   00000336   0x202D             MOVS     R0,#+45
   \   00000338   0xF88D 0x0004      STRB     R0,[SP, #+4]
   \   0000033C   0x2001             MOVS     R0,#+1
    134              uint8 cut_zero = 0xFF;
   \                     ??v_BIOS_6x8Num_42: (+1)
   \   0000033E   0x21FF             MOVS     R1,#+255
    135              for(uint8 loop= 1;loop <= 10;loop++) // ±éÀúÊý×é
   \   00000340   0x2201             MOVS     R2,#+1
   \   00000342   0xE000             B.N      ??v_BIOS_6x8Num_43
   \                     ??v_BIOS_6x8Num_44: (+1)
   \   00000344   0x1C52             ADDS     R2,R2,#+1
   \                     ??v_BIOS_6x8Num_43: (+1)
   \   00000346   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000348   0x2A0B             CMP      R2,#+11
   \   0000034A   0xDA05             BGE.N    ??v_BIOS_6x8Num_45
    136              {
    137                  if('0' != ch[loop])
   \   0000034C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000034E   0xAB04             ADD      R3,SP,#+16
   \   00000350   0x5CD3             LDRB     R3,[R2, R3]
   \   00000352   0x2B30             CMP      R3,#+48
   \   00000354   0xD0F6             BEQ.N    ??v_BIOS_6x8Num_44
    138                  {
    139                      cut_zero = loop;
   \   00000356   0x0011             MOVS     R1,R2
    140                      break;
    141                  }
    142              }
    143              switch( cut_zero ) // 
   \                     ??v_BIOS_6x8Num_45: (+1)
   \   00000358   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000035A   0x000A             MOVS     R2,R1
   \   0000035C   0x2A00             CMP      R2,#+0
   \   0000035E   0xD009             BEQ.N    ??v_BIOS_6x8Num_46
   \   00000360   0x1E52             SUBS     R2,R2,#+1
   \   00000362   0xD00D             BEQ.N    ??v_BIOS_6x8Num_47
   \   00000364   0x1E52             SUBS     R2,R2,#+1
   \   00000366   0xD008             BEQ.N    ??v_BIOS_6x8Num_48
   \   00000368   0x1E52             SUBS     R2,R2,#+1
   \   0000036A   0x2A07             CMP      R2,#+7
   \   0000036C   0xD908             BLS.N    ??v_BIOS_6x8Num_47
   \   0000036E   0x3AFC             SUBS     R2,R2,#+252
   \   00000370   0xD01A             BEQ.N    ??v_BIOS_6x8Num_49
   \   00000372   0xE046             B.N      ??v_BIOS_6x8Num_50
    144              {
    145                  case 0:v_error_number();break;
   \                     ??v_BIOS_6x8Num_46: (+1)
   \   00000374   0x.... 0x....      BL       v_error_number
   \   00000378   0xE043             B.N      ??v_BIOS_6x8Num_50
    146                  case 2:ch[11] = '\0';// ÌØÊâÇé¿ö£ºÓÐÐ¡Êýµã
   \                     ??v_BIOS_6x8Num_48: (+1)
   \   0000037A   0x2200             MOVS     R2,#+0
   \   0000037C   0xF88D 0x201B      STRB     R2,[SP, #+27]
    147                  case 1:
    148                  case 3:// ¿ÉÒÔÏÔÊ¾Ð¡ÊýµãºóÒ»Î»
    149                  case 4:
    150                  case 5:
    151                  case 6:
    152                  case 7:
    153                  case 8: // ÖÁ´Ë¿ÉÒÔÏÔÊ¾È«²¿Ð¡Êý
    154                  case 9: // ÖÁ´ËÏÔÊ¾½«²»»áÍêÈ«
    155                  case 10:
    156                      for(uint8 loop = cut_zero;(loop < cut_zero+10)||(loop <= 17);loop++)
   \                     ??v_BIOS_6x8Num_47: (+1)
   \   00000380   0x000A             MOVS     R2,R1
   \   00000382   0xE007             B.N      ??v_BIOS_6x8Num_51
    157                      {
    158                          ch_show[show_new] = ch[loop];
   \                     ??v_BIOS_6x8Num_52: (+1)
   \   00000384   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000386   0xAB01             ADD      R3,SP,#+4
   \   00000388   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000038A   0xAC04             ADD      R4,SP,#+16
   \   0000038C   0x5D14             LDRB     R4,[R2, R4]
   \   0000038E   0x54C4             STRB     R4,[R0, R3]
    159                          show_new++;
   \   00000390   0x1C40             ADDS     R0,R0,#+1
    160                      }
   \   00000392   0x1C52             ADDS     R2,R2,#+1
   \                     ??v_BIOS_6x8Num_51: (+1)
   \   00000394   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000396   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000398   0xF111 0x030A      ADDS     R3,R1,#+10
   \   0000039C   0x429A             CMP      R2,R3
   \   0000039E   0xDBF1             BLT.N    ??v_BIOS_6x8Num_52
   \   000003A0   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000003A2   0x2A12             CMP      R2,#+18
   \   000003A4   0xDBEE             BLT.N    ??v_BIOS_6x8Num_52
    161                  break;
   \   000003A6   0xE02C             B.N      ??v_BIOS_6x8Num_50
    162                  case 0xFF: // ÎÞÕûÊý²¿·Ö
    163                      ch_show[0 + show_new] = '0';
   \                     ??v_BIOS_6x8Num_49: (+1)
   \   000003A8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003AA   0xA901             ADD      R1,SP,#+4
   \   000003AC   0x2230             MOVS     R2,#+48
   \   000003AE   0x5442             STRB     R2,[R0, R1]
    164                      ch_show[1 + show_new] = '.';
   \   000003B0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003B2   0xA901             ADD      R1,SP,#+4
   \   000003B4   0x1841             ADDS     R1,R0,R1
   \   000003B6   0x222E             MOVS     R2,#+46
   \   000003B8   0x704A             STRB     R2,[R1, #+1]
    165                      // Êý×ÖÏÔÊ¾
    166                      ch_show[2 + show_new] = ch[12];
   \   000003BA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003BC   0xA901             ADD      R1,SP,#+4
   \   000003BE   0x1841             ADDS     R1,R0,R1
   \   000003C0   0xF89D 0x201C      LDRB     R2,[SP, #+28]
   \   000003C4   0x708A             STRB     R2,[R1, #+2]
    167                      ch_show[3 + show_new] = ch[13];
   \   000003C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003C8   0xA901             ADD      R1,SP,#+4
   \   000003CA   0x1841             ADDS     R1,R0,R1
   \   000003CC   0xF89D 0x201D      LDRB     R2,[SP, #+29]
   \   000003D0   0x70CA             STRB     R2,[R1, #+3]
    168                      ch_show[4 + show_new] = ch[14];
   \   000003D2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003D4   0xA901             ADD      R1,SP,#+4
   \   000003D6   0x1841             ADDS     R1,R0,R1
   \   000003D8   0xF89D 0x201E      LDRB     R2,[SP, #+30]
   \   000003DC   0x710A             STRB     R2,[R1, #+4]
    169                      ch_show[5 + show_new] = ch[15];
   \   000003DE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003E0   0xA901             ADD      R1,SP,#+4
   \   000003E2   0x1841             ADDS     R1,R0,R1
   \   000003E4   0xF89D 0x201F      LDRB     R2,[SP, #+31]
   \   000003E8   0x714A             STRB     R2,[R1, #+5]
    170                      ch_show[6 + show_new] = ch[16];
   \   000003EA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003EC   0xA901             ADD      R1,SP,#+4
   \   000003EE   0x1841             ADDS     R1,R0,R1
   \   000003F0   0xF89D 0x2020      LDRB     R2,[SP, #+32]
   \   000003F4   0x718A             STRB     R2,[R1, #+6]
    171                      ch_show[7 + show_new] = ch[17];
   \   000003F6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003F8   0xA901             ADD      R1,SP,#+4
   \   000003FA   0x1840             ADDS     R0,R0,R1
   \   000003FC   0xF89D 0x1021      LDRB     R1,[SP, #+33]
   \   00000400   0x71C1             STRB     R1,[R0, #+7]
    172                  break;
    173              }
    174              for(uint8 loop = 0;loop<=10;loop++)
   \                     ??v_BIOS_6x8Num_50: (+1)
   \   00000402   0x2000             MOVS     R0,#+0
   \   00000404   0xE009             B.N      ??v_BIOS_6x8Num_53
    175              {
    176                  if('x' == ch_show[loop]) // Ìæ»»ÎÞÐ§×Ö·û
   \                     ??v_BIOS_6x8Num_54: (+1)
   \   00000406   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000408   0xA901             ADD      R1,SP,#+4
   \   0000040A   0x5C41             LDRB     R1,[R0, R1]
   \   0000040C   0x2978             CMP      R1,#+120
   \   0000040E   0xD103             BNE.N    ??v_BIOS_6x8Num_55
    177                  {ch_show[loop] = '\0';}
   \   00000410   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000412   0xA901             ADD      R1,SP,#+4
   \   00000414   0x2200             MOVS     R2,#+0
   \   00000416   0x5442             STRB     R2,[R0, R1]
    178              }
   \                     ??v_BIOS_6x8Num_55: (+1)
   \   00000418   0x1C40             ADDS     R0,R0,#+1
   \                     ??v_BIOS_6x8Num_53: (+1)
   \   0000041A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000041C   0x280B             CMP      R0,#+11
   \   0000041E   0xDBF2             BLT.N    ??v_BIOS_6x8Num_54
    179              for(uint8 loop = 0;loop<=10;loop++)
   \   00000420   0x2000             MOVS     R0,#+0
   \   00000422   0xE00F             B.N      ??v_BIOS_6x8Num_56
    180              {
    181                  if('.' == ch_show[loop])
    182                  {
    183                      for(uint8 inter = 9;inter >= loop;inter--)
    184                      {
    185                          if('.' == ch_show[inter]){ch_show[loop] = '\0';break;}
    186                          if('0' != ch_show[inter])
   \                     ??v_BIOS_6x8Num_57: (+1)
   \   00000424   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000426   0xAA01             ADD      R2,SP,#+4
   \   00000428   0x5C8A             LDRB     R2,[R1, R2]
   \   0000042A   0x2A30             CMP      R2,#+48
   \   0000042C   0xD014             BEQ.N    ??v_BIOS_6x8Num_58
    187                          {
    188                              ch_show[inter+1] = '\0';
   \   0000042E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000430   0xAA01             ADD      R2,SP,#+4
   \   00000432   0x188A             ADDS     R2,R1,R2
   \   00000434   0x2300             MOVS     R3,#+0
   \   00000436   0x7053             STRB     R3,[R2, #+1]
    189                              if('\0' != ch_show[inter])
   \   00000438   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000043A   0xAA01             ADD      R2,SP,#+4
   \   0000043C   0x5C8A             LDRB     R2,[R1, R2]
   \   0000043E   0x2A00             CMP      R2,#+0
   \   00000440   0xD00A             BEQ.N    ??v_BIOS_6x8Num_58
    190                              {break;}
    191                          }
   \                     ??v_BIOS_6x8Num_59: (+1)
   \   00000442   0x1C40             ADDS     R0,R0,#+1
   \                     ??v_BIOS_6x8Num_56: (+1)
   \   00000444   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000446   0x280B             CMP      R0,#+11
   \   00000448   0xDA15             BGE.N    ??v_BIOS_6x8Num_60
   \   0000044A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000044C   0xA901             ADD      R1,SP,#+4
   \   0000044E   0x5C41             LDRB     R1,[R0, R1]
   \   00000450   0x292E             CMP      R1,#+46
   \   00000452   0xD1F6             BNE.N    ??v_BIOS_6x8Num_59
   \   00000454   0x2109             MOVS     R1,#+9
   \   00000456   0xE000             B.N      ??v_BIOS_6x8Num_61
   \                     ??v_BIOS_6x8Num_58: (+1)
   \   00000458   0x1E49             SUBS     R1,R1,#+1
   \                     ??v_BIOS_6x8Num_61: (+1)
   \   0000045A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000045C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000045E   0x4281             CMP      R1,R0
   \   00000460   0xD3EF             BCC.N    ??v_BIOS_6x8Num_59
   \   00000462   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000464   0xAA01             ADD      R2,SP,#+4
   \   00000466   0x5C8A             LDRB     R2,[R1, R2]
   \   00000468   0x2A2E             CMP      R2,#+46
   \   0000046A   0xD1DB             BNE.N    ??v_BIOS_6x8Num_57
   \   0000046C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000046E   0xA901             ADD      R1,SP,#+4
   \   00000470   0x2200             MOVS     R2,#+0
   \   00000472   0x5442             STRB     R2,[R0, R1]
   \   00000474   0xE7E5             B.N      ??v_BIOS_6x8Num_59
    192                      }
    193                  }
    194              }
    195              v_BIOS_6x8str_Ascii(X,Y,color,Backcolor,ch_show);
   \                     ??v_BIOS_6x8Num_60: (+1)
   \   00000476   0xA801             ADD      R0,SP,#+4
   \   00000478   0x9000             STR      R0,[SP, #+0]
   \   0000047A   0x0033             MOVS     R3,R6
   \   0000047C   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \   0000047E   0x003A             MOVS     R2,R7
   \   00000480   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   00000482   0x4651             MOV      R1,R10
   \   00000484   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \   00000486   0x4658             MOV      R0,R11
   \   00000488   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000048A   0x.... 0x....      BL       v_BIOS_6x8str_Ascii
    196          }
   \   0000048E   0xB009             ADD      SP,SP,#+36
   \   00000490   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    197          
    198          
    199          /******************************************************************************/
    200          // ¾¯±¨

   \                                 In section .text, align 2, keep-with-next
    201          void* (v_error_axis)(void)
    202          {
   \                     v_error_axis: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    203              v_BIOS_6x8str_Ascii(0,232,Black,Blue,"error : axis set");
   \   00000002   0x....             LDR.N    R0,??DataTable3_9
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x231F             MOVS     R3,#+31
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x21E8             MOVS     R1,#+232
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       v_BIOS_6x8str_Ascii
    204              return 0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xBD02             POP      {R1,PC}          ;; return
    205          }
    206          

   \                                 In section .text, align 2, keep-with-next
    207          void* (v_error_number)(void)
    208          {
   \                     v_error_number: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    209              v_BIOS_6x8str_Ascii(0,232,Black,Blue,"error : Big Number");
   \   00000002   0x....             LDR.N    R0,??DataTable3_10
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x231F             MOVS     R3,#+31
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x21E8             MOVS     R1,#+232
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x.... 0x....      BL       v_BIOS_6x8str_Ascii
    210              return 0;
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0xBD02             POP      {R1,PC}          ;; return
    211          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     C6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     `?<Constant "-0000000000.000000">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     `?<Constant "xxxxxxxxxx">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x3B9ACA00         DC32     0x3b9aca00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x05F5E100         DC32     0x5f5e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x00989680         DC32     0x989680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x000186A0         DC32     0x186a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x49742400         DC32     0x49742400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     `?<Constant "error : axis set">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     `?<Constant "error : Big Number">`

   \                                 In section .rodata, align 4
   \                     `?<Constant "-0000000000.000000">`:
   \   00000000   0x2D 0x30          DC8 "-0000000000.000000"
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x2E    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "xxxxxxxxxx">`:
   \   00000000   0x78 0x78          DC8 "xxxxxxxxxx"
   \              0x78 0x78    
   \              0x78 0x78    
   \              0x78 0x78    
   \              0x78 0x78    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "error : axis set">`:
   \   00000000   0x65 0x72          DC8 "error : axis set"
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x3A 0x20    
   \              0x61 0x78    
   \              0x69 0x73    
   \              0x20 0x73    
   \              0x65 0x74    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "error : Big Number">`:
   \   00000000   0x65 0x72          DC8 "error : Big Number"
   \              0x72 0x6F    
   \              0x72 0x20    
   \              0x3A 0x20    
   \              0x42 0x69    
   \              0x67 0x20    
   \              0x4E 0x75    
   \              0x6D 0x62    
   \              0x65 0x72    
   \              0x00         
   \   00000013   0x00               DC8 0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      72   v_BIOS_6x8Num
        72   -> __aeabi_cdcmple
        72   -> __aeabi_cdrcmple
        72   -> __aeabi_d2f
        72   -> __aeabi_d2iz
        72   -> __aeabi_dsub
        72   -> __aeabi_f2iz
        72   -> __aeabi_fmul
        72   -> __aeabi_i2d
        72   -> __aeabi_memcpy4
        72   -> v_BIOS_6x8str_Ascii
        72   -> v_error_number
      40   v_BIOS_6x8str_Ascii
        40   -> LCD_SetCursor
        40   -> LCD_SetPath
        40   -> LCD_writeReg
       0   v_Init_BIOS
       8   v_error_axis
         8   -> v_BIOS_6x8str_Ascii
       8   v_error_number
         8   -> v_BIOS_6x8str_Ascii


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      20  ?<Constant "-0000000000.000000">
      20  ?<Constant "error : Big Number">
      20  ?<Constant "error : axis set">
      12  ?<Constant "xxxxxxxxxx">
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
    1172  v_BIOS_6x8Num
     160  v_BIOS_6x8str_Ascii
       2  v_Init_BIOS
      22  v_error_axis
      22  v_error_number

 
    72 bytes in section .rodata
 1 422 bytes in section .text
 
 1 422 bytes of CODE  memory
    72 bytes of CONST memory

Errors: none
Warnings: none
