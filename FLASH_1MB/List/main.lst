###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      20/Jul/2015  17:20:54 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\ShunAn_Panel\main.c                        #
#    Command line =  D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\ShunAn_Panel\main.c -D IAR -D              #
#                    TWR_K60F120M -lCN D:\创作室\飞思卡尔智能小车\顺暗三号\代 #
#                    码\顺暗三号-华南赛最后七天-7.11\FLASH_1MB\List\ -lB      #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\FLASH_1MB\List\ -o                         #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\FLASH_1MB\Obj\ --no_cse --no_unroll        #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=VFPv4_sp --dlib_config "C:\Program Files        #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.5\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\ -I D:\创作室\飞思卡尔智能小车\顺暗三号\代 #
#                    码\顺暗三号-华南赛最后七天-7.11\Library\ -I              #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\Library\BlessedAlien\ -I                   #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\ShunAn_Panel\ -Ol --use_c++_inline         #
#    List file    =  D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\FLASH_1MB\List\main.lst                    #
#    Object file  =  D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\FLASH_1MB\Obj\main.o                       #
#                                                                             #
#                                                                             #
###############################################################################

D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛最后七天-7.11\ShunAn_Panel\main.c
      1          /*
      2          *文件名：              main.c
      3          *说明：                顺暗main文件
      4          *所用芯片型号：        MK60FX512VQL15
      5          *创建时间：            2014/11/29
      6          *作者：                中南大学朱葛峻
      7          */
      8          #include "arm_cm4.h"
      9          #include "start_ShunAn.h"
     10          //#include "Bluetooth.h"
     11          //============================================================================//
     12          // 以下包含为数学库 2014.12.19
     13          #include "ShunAn_Lib.h"
     14          //#include <math.h>
     15          //============================================================================//
     16          // 以下包含为外部硬件库 2015.1.12
     17          #include "Poet_Revelation.h" // 显示屏
     18          #include "Poet_Servo.h" // 舵机
     19          #include "Poet_Navigation.h" // 导航
     20          #include "Poet_Motor.h" // 电机
     21          #include "Poet_ImageBeholder.h" // 摄像头
     22          #include "Poet_Bluetooth.h" // 串口
     23          //#include "Poet_Scourage.h" // Flash
     24          #include "Poet_Buzzer.h" // 蜂鸣器初始化
     25          #include "Poet_InputInterface.h" // 按键
     26          //#include <stdlib.h>
     27          #include <stdio.h>
     28          
     29          #include "ThePoet_ThePendulum.h"//
     30          #include "Pendulum_EndlessFormsMostBeautiful.h"//
     31          //
     32          //============================================================================//
     33          //#include <math.h>
     34          //#include "IIC.h"//0x1FFF0410//0x1FFFFFFF
     35          //s_selftest m_selftest = {.error_occur = 0,.b_imageBeholder_status = 0};//定义外部变量，原变量在ShunAn_Lib.h

   \                                 In section .bss, align 4
     36          s_system m_system = {.timer = 0,.BuzzerBeep_time = 0,.BuzzerBeep_LastingTime = 0,.control_isDone = 0
   \                     m_system:
   \   00000000                      DS8 24
     37                              ,.uarttx_timer = 0};//系统初始化
     38          
     39          //uint8 view_BeholderDataArray[Beholder_LineY_MAX][Beholder_PixNum_MAX];
     40          //uint8 Open_flag = 0;
     41          
     42          //uint16 Servo_Var = 0;
     43          //char tx11[21];
     44          

   \                                 In section .bss, align 2
     45          uint16 MonoColor = 0;
   \                     MonoColor:
   \   00000000                      DS8 2

   \                                 In section .text, align 4, keep-with-next
     46          void main()
     47          {
   \                     main: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     48              m_CarRunningMode.isCloseTheLightingStop = 0;
   \   00000002   0x....             LDR.N    R0,??DataTable0_1
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x7301             STRB     R1,[R0, #+12]
     49              
     50              m_CarRunningMode.isUsedDoubleServoPID = 0;
   \   00000008   0x....             LDR.N    R0,??DataTable0_1
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
     51              m_CarRunningMode.DoubleServoPIDRatio = 1.5f;
   \   0000000E   0x....             LDR.N    R0,??DataTable0_1
   \   00000010   0xF05F 0x517F      MOVS     R1,#+1069547520
   \   00000014   0x6041             STR      R1,[R0, #+4]
     52              
     53              m_ImageAbstract.RampExist = 0;
   \   00000016   0x....             LDR.N    R0,??DataTable0_2
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x7041             STRB     R1,[R0, #+1]
     54              
     55              m_ImageAbstract.openTheRamp = 1;
   \   0000001C   0x....             LDR.N    R0,??DataTable0_2
   \   0000001E   0x2101             MOVS     R1,#+1
   \   00000020   0x7001             STRB     R1,[R0, #+0]
     56              
     57              m_ImageTesting.Back2Angel_LineCounter = 10;
   \   00000022   0x....             LDR.N    R0,??DataTable0_3
   \   00000024   0x210A             MOVS     R1,#+10
   \   00000026   0xF880 0x1086      STRB     R1,[R0, #+134]
     58              
     59              vPtr_CheckLightingChaser = 0;
   \   0000002A   0x....             LDR.N    R0,??DataTable0_4
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x6001             STR      R1,[R0, #+0]
     60              
     61              m_ImageAbstract.LonlyLine_VeryStraightGetCorner_AboutDeadLine_Val_Y = 255;
   \   00000030   0x....             LDR.N    R0,??DataTable0_2
   \   00000032   0x21FF             MOVS     R1,#+255
   \   00000034   0xF880 0x122C      STRB     R1,[R0, #+556]
     62              m_ImageAbstract.LonlyLine_VeryStraightGetCorner_AboutDeadLine_Var_x = 255;
   \   00000038   0x....             LDR.N    R0,??DataTable0_2
   \   0000003A   0x21FF             MOVS     R1,#+255
   \   0000003C   0xF880 0x122B      STRB     R1,[R0, #+555]
     63              m_Control.LightChaserLogic = 0;
   \   00000040   0x....             LDR.N    R0,??DataTable0_5
   \   00000042   0x2100             MOVS     R1,#+0
   \   00000044   0x71C1             STRB     R1,[R0, #+7]
     64              v_LightingChaser_Init();//灯塔初始化
   \   00000046   0x.... 0x....      BL       v_LightingChaser_Init
     65              m_ImageAbstract.LonlyLine_Status = LLT_NaN;
   \   0000004A   0x....             LDR.N    R0,??DataTable0_2
   \   0000004C   0x2103             MOVS     R1,#+3
   \   0000004E   0xF880 0x1220      STRB     R1,[R0, #+544]
     66              v_Uart_GetPicture_InRunning(0,0);
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x2000             MOVS     R0,#+0
   \   00000056   0x.... 0x....      BL       v_Uart_GetPicture_InRunning
     67              m_Control.v_MotorControlSpeed = v_speed_Give;//n_getSteerMiddleLine_UsedAverage;//使用
   \   0000005A   0x....             LDR.N    R0,??DataTable0_5
   \   0000005C   0x....             LDR.N    R1,??DataTable0_6
   \   0000005E   0xF8C0 0x10DC      STR      R1,[R0, #+220]
     68              EnableInterrupts;//
   \   00000062   0xB662             CPSIE i
     69              //测试脚E6 E7
     70              //OLED
     71              //D2 D5
     72              //m_ImageAbstract.LonlyLine_1isLasting2isBacking0isNot = 0;
     73              m_Control.Motor_ControlPara_P_Number = 41.f;//15//25大了//22.f
   \   00000064   0x....             LDR.N    R0,??DataTable0_5
   \   00000066   0x....             LDR.N    R1,??DataTable0_7  ;; 0x42240000
   \   00000068   0xF8C0 0x1094      STR      R1,[R0, #+148]
     74              m_Control.Motor_ControlPara_I_Number = 1.2f;//1//5大了
   \   0000006C   0x....             LDR.N    R0,??DataTable0_5
   \   0000006E   0x....             LDR.N    R1,??DataTable0_8  ;; 0x3f99999a
   \   00000070   0xF8C0 0x1098      STR      R1,[R0, #+152]
     75              m_Control.Motor_ControlPara_D_Number = 0;
   \   00000074   0x....             LDR.N    R0,??DataTable0_5
   \   00000076   0x2100             MOVS     R1,#+0
   \   00000078   0xF8C0 0x109C      STR      R1,[R0, #+156]
     76              m_Control.P_Curve = 4.08f;////
   \   0000007C   0x....             LDR.N    R0,??DataTable0_5
   \   0000007E   0x....             LDR.N    R1,??DataTable0_9  ;; 0x40828f5c
   \   00000080   0xF8C0 0x1088      STR      R1,[R0, #+136]
     77              m_Control.K_Curve = 2.f;
   \   00000084   0x....             LDR.N    R0,??DataTable0_5
   \   00000086   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000008A   0xF8C0 0x108C      STR      R1,[R0, #+140]
     78              m_Control.ServoDiff = 1.7f;//1.6f为出弯正好，入弯慢//1.9f//不加舵机微分将会有100ms的延迟
   \   0000008E   0x....             LDR.N    R0,??DataTable0_5
   \   00000090   0x....             LDR.N    R1,??DataTable0_10  ;; 0x3fd9999a
   \   00000092   0x6241             STR      R1,[R0, #+36]
     79              m_Control.servo_imageYstopLine = 40;//35;
   \   00000094   0x....             LDR.N    R0,??DataTable0_5
   \   00000096   0x2128             MOVS     R1,#+40
   \   00000098   0xF880 0x1084      STRB     R1,[R0, #+132]
     80              //2.3f=>大约有90~120ms的舵机超前作用，但相对中线仍滞后100ms
     81              //3.2f=>剧烈振荡在转角之前
     82              v_systemPara_Init();//参数初始化
   \   0000009C   0x.... 0x....      BL       v_systemPara_Init
     83              /*----------------------系统时间初始化------------------------*/
     84              pit_init_ms(PIT0,100); // 设定PIT中断周期 100ms
   \   000000A0   0x....             LDR.N    R0,??DataTable0_11
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x2164             MOVS     R1,#+100
   \   000000A6   0xFB01 0xF100      MUL      R1,R1,R0
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x.... 0x....      BL       pit_init
     85              m_system.time_ratio = 100;
   \   000000B0   0x....             LDR.N    R0,??DataTable0_12
   \   000000B2   0x2164             MOVS     R1,#+100
   \   000000B4   0x6041             STR      R1,[R0, #+4]
     86              set_vector_handler(PIT0_VECTORn,v_system_clocked); // 设定PIT中断函数指针 v_system_clocked
   \   000000B6   0x....             LDR.N    R1,??DataTable0_13
   \   000000B8   0x2054             MOVS     R0,#+84
   \   000000BA   0x.... 0x....      BL       set_vector_handler
     87              //enable_irq(PIT0_IRQn);//使能PIT中断
     88              //系统时钟初始化
     89              //
     90              v_shudderBeforeReve_Init();//屏幕初始化
   \   000000BE   0x.... 0x....      BL       v_shudderBeforeReve_Init
     91              v_ExInterface_Init();//按键初始化
   \   000000C2   0x.... 0x....      BL       v_ExInterface_Init
     92              m_Control.ServoDeg = 100;//2603
   \   000000C6   0x....             LDR.N    R0,??DataTable0_5
   \   000000C8   0x2164             MOVS     R1,#+100
   \   000000CA   0x8401             STRH     R1,[R0, #+32]
     93              
     94              m_Control.GiveSpeed = 180;//速度设定//200 => 速度大约是2m左右
   \   000000CC   0x....             LDR.N    R0,??DataTable0_5
   \   000000CE   0x21B4             MOVS     R1,#+180
   \   000000D0   0xF8A0 0x106C      STRH     R1,[R0, #+108]
     95              
     96              m_Control.speed_max = 190;
   \   000000D4   0x....             LDR.N    R0,??DataTable0_5
   \   000000D6   0x21BE             MOVS     R1,#+190
   \   000000D8   0x8001             STRH     R1,[R0, #+0]
     97              m_Control.speed_min = 175;
   \   000000DA   0x....             LDR.N    R0,??DataTable0_5
   \   000000DC   0x21AF             MOVS     R1,#+175
   \   000000DE   0x8081             STRH     R1,[R0, #+4]
     98              m_Control.speed_cut = 185;
   \   000000E0   0x....             LDR.N    R0,??DataTable0_5
   \   000000E2   0x21B9             MOVS     R1,#+185
   \   000000E4   0x8041             STRH     R1,[R0, #+2]
     99              
    100              m_Control.speedCut = 80.f;
   \   000000E6   0x....             LDR.N    R0,??DataTable0_5
   \   000000E8   0x....             LDR.N    R1,??DataTable0_14  ;; 0x42a00000
   \   000000EA   0x6701             STR      R1,[R0, #+112]
    101              m_Control.speedCutRatio = 4.f;
   \   000000EC   0x....             LDR.N    R0,??DataTable0_5
   \   000000EE   0xF05F 0x4181      MOVS     R1,#+1082130432
   \   000000F2   0x6741             STR      R1,[R0, #+116]
    102              m_Control.changeSpeedRatio = 100.f;
   \   000000F4   0x....             LDR.N    R0,??DataTable0_5
   \   000000F6   0x....             LDR.N    R1,??DataTable0_15  ;; 0x42c80000
   \   000000F8   0x6781             STR      R1,[R0, #+120]
    103              
    104              m_Control.motor_control_time = 0;
   \   000000FA   0x....             LDR.N    R0,??DataTable0_5
   \   000000FC   0x2100             MOVS     R1,#+0
   \   000000FE   0x67C1             STR      R1,[R0, #+124]
    105              m_Control.image_Be2control_time = 0;
   \   00000100   0x....             LDR.N    R0,??DataTable0_5
   \   00000102   0x2100             MOVS     R1,#+0
   \   00000104   0xF8C0 0x1080      STR      R1,[R0, #+128]
    106              
    107              v_Buzzer_Init();//音响初始化
   \   00000108   0x.... 0x....      BL       v_Buzzer_Init
    108              
    109              v_Servo_Init();//舵机初始化
   \   0000010C   0x.... 0x....      BL       v_Servo_Init
    110              v_Servo_Out(m_Control.ServoDeg);
   \   00000110   0x....             LDR.N    R0,??DataTable0_5
   \   00000112   0xF9B0 0x0020      LDRSH    R0,[R0, #+32]
   \   00000116   0x.... 0x....      BL       v_Servo_Out
    111              
    112              v_motor_Init();//电机初始化
   \   0000011A   0x.... 0x....      BL       v_motor_Init
    113              v_UartInit(115200);//蓝牙初始化
   \   0000011E   0xF45F 0x30E1      MOVS     R0,#+115200
   \   00000122   0x.... 0x....      BL       v_UartInit
    114              DEBUG_INFORMATION("Someting Done.");//提示进程
   \   00000126   0x....             LDR.N    R0,??DataTable0_16
   \   00000128   0x.... 0x....      BL       DEBUG_INFORMATION
    115              if('F' == b_Beholder_Init()){DEBUG_INFORMATION("It's image init.");}//摄像头引脚及寄存器初始化
   \   0000012C   0x.... 0x....      BL       b_Beholder_Init
   \   00000130   0x2846             CMP      R0,#+70
   \   00000132   0xD102             BNE.N    ??main_0
   \   00000134   0x....             LDR.N    R0,??DataTable0_17
   \   00000136   0x.... 0x....      BL       DEBUG_INFORMATION
    116              if('F' == b_Beholder_InteruptInit()){DEBUG_INFORMATION("It's image int init.");}////摄像头中断进行初始化
   \                     ??main_0: (+1)
   \   0000013A   0x.... 0x....      BL       b_Beholder_InteruptInit
   \   0000013E   0x2846             CMP      R0,#+70
   \   00000140   0xD102             BNE.N    ??main_1
   \   00000142   0x....             LDR.N    R0,??DataTable0_18
   \   00000144   0x.... 0x....      BL       DEBUG_INFORMATION
    117              if('F' == b_Navigation_Init()){DEBUG_INFORMATION("It's navigation init.");}////惯性导航初始化
   \                     ??main_1: (+1)
   \   00000148   0x.... 0x....      BL       b_Navigation_Init
   \   0000014C   0x2846             CMP      R0,#+70
   \   0000014E   0xD102             BNE.N    ??main_2
   \   00000150   0x....             LDR.N    R0,??DataTable0_19
   \   00000152   0x.... 0x....      BL       DEBUG_INFORMATION
    118              
    119              m_system.time_ratio = 20;//50Hz//200Hz
   \                     ??main_2: (+1)
   \   00000156   0x....             LDR.N    R0,??DataTable0_12
   \   00000158   0x2114             MOVS     R1,#+20
   \   0000015A   0x6041             STR      R1,[R0, #+4]
    120              
    121              pit_init_ms(PIT1,2);//500us间隔时间
   \   0000015C   0x....             LDR.N    R0,??DataTable0_11
   \   0000015E   0x6800             LDR      R0,[R0, #+0]
   \   00000160   0x0041             LSLS     R1,R0,#+1
   \   00000162   0x2001             MOVS     R0,#+1
   \   00000164   0x.... 0x....      BL       pit_init
    122              set_vector_handler(PIT1_VECTORn,v_motor_doneFunc);//控制周期更换
   \   00000168   0x....             LDR.N    R1,??DataTable0_20
   \   0000016A   0x2055             MOVS     R0,#+85
   \   0000016C   0x.... 0x....      BL       set_vector_handler
    123              
    124              set_irq_priority(PORTD_IRQn,3);//设置摄像头中断优先级
   \   00000170   0x2103             MOVS     R1,#+3
   \   00000172   0x205A             MOVS     R0,#+90
   \   00000174   0x.... 0x....      BL       set_irq_priority
    125              set_irq_priority(PIT1_IRQn,4);//设置中断优先级
   \   00000178   0x2104             MOVS     R1,#+4
   \   0000017A   0x2045             MOVS     R0,#+69
   \   0000017C   0x.... 0x....      BL       set_irq_priority
    126              
    127              ENABLE_BEHOLDER_WORK;//开启摄像头工作
   \   00000180   0x....             LDR.N    R0,??DataTable0_12
   \   00000182   0x2100             MOVS     R1,#+0
   \   00000184   0x7441             STRB     R1,[R0, #+17]
   \   00000186   0x2044             MOVS     R0,#+68
   \   00000188   0x.... 0x....      BL       disable_irq
   \   0000018C   0x205A             MOVS     R0,#+90
   \   0000018E   0x.... 0x....      BL       enable_irq
    128              
    129              modeMachine_Testing_TurnOnMode();//设定当前状态机情况
   \   00000192   0x.... 0x....      BL       modeMachine_Testing_TurnOnMode
    130              
    131              if(1 != DEBUG_INFORMATION("")){for(;;);}//死循环控制//有错误信息
   \   00000196   0x....             ADR.N    R0,??DataTable0  ;; ""
   \   00000198   0x.... 0x....      BL       DEBUG_INFORMATION
   \   0000019C   0x2801             CMP      R0,#+1
   \   0000019E   0xD000             BEQ.N    ??main_3
   \                     ??main_4: (+1)
   \   000001A0   0xE7FE             B.N      ??main_4
    132              
    133              v_LoadingControlPara(&m_Control,&m_ImageAbstract);//更新参数表
   \                     ??main_3: (+1)
   \   000001A2   0x....             LDR.N    R1,??DataTable0_2
   \   000001A4   0x....             LDR.N    R0,??DataTable0_5
   \   000001A6   0x.... 0x....      BL       v_LoadingControlPara
   \   000001AA   0xE039             B.N      ??main_5
    134              
    135              
    136              
    137              while(1)//死循环
    138              {
    139                  BuzzerBeep_Process();
   \                     ??main_6: (+1)
   \   000001AC   0x2000             MOVS     R0,#+0
   \   000001AE   0x.... 0x....      BL       v_Buzzer_OutPut
    140                  
    141                  v_ModeMachine_KeyInput_TurnCut();//按键事件驱动
   \                     ??main_7: (+1)
   \   000001B2   0x.... 0x....      BL       v_ModeMachine_KeyInput_TurnCut
    142                  if(0 != m_ModeMachine.always_done){m_ModeMachine.always_done();}
   \   000001B6   0x....             LDR.N    R0,??DataTable0_21
   \   000001B8   0x69C0             LDR      R0,[R0, #+28]
   \   000001BA   0x2800             CMP      R0,#+0
   \   000001BC   0xD002             BEQ.N    ??main_8
   \   000001BE   0x....             LDR.N    R0,??DataTable0_21
   \   000001C0   0x69C0             LDR      R0,[R0, #+28]
   \   000001C2   0x4780             BLX      R0
    143                  
    144                  v_MonoShow_BlackRtAngle(m_ModeMachine.showRtBlackAngle);
   \                     ??main_8: (+1)
   \   000001C4   0x....             LDR.N    R0,??DataTable0_21
   \   000001C6   0xF890 0x0023      LDRB     R0,[R0, #+35]
   \   000001CA   0x.... 0x....      BL       v_MonoShow_BlackRtAngle
    145                  v_MonoShow_Buzzer(m_ModeMachine.showBuzzerInformation);
   \   000001CE   0x....             LDR.N    R0,??DataTable0_21
   \   000001D0   0xF890 0x0020      LDRB     R0,[R0, #+32]
   \   000001D4   0x.... 0x....      BL       v_MonoShow_Buzzer
    146                  v_MonoShow_isLonly(m_ModeMachine.showLonlyInformation);
   \   000001D8   0x....             LDR.N    R0,??DataTable0_21
   \   000001DA   0xF890 0x0021      LDRB     R0,[R0, #+33]
   \   000001DE   0x.... 0x....      BL       v_MonoShow_isLonly
    147                  v_MonoShow_BlackBar(m_ModeMachine.showBlackBar);
   \   000001E2   0x....             LDR.N    R0,??DataTable0_21
   \   000001E4   0xF890 0x0022      LDRB     R0,[R0, #+34]
   \   000001E8   0x.... 0x....      BL       v_MonoShow_BlackBar
    148                  v_MonoShow_BlackTurning(m_ModeMachine.showYcutDown);
   \   000001EC   0x....             LDR.N    R0,??DataTable0_21
   \   000001EE   0xF890 0x0024      LDRB     R0,[R0, #+36]
   \   000001F2   0x.... 0x....      BL       v_MonoShow_BlackTurning
    149                  v_MonoShow_BlackCutBar(m_ModeMachine.showBlackCutBar);
   \   000001F6   0x....             LDR.N    R0,??DataTable0_21
   \   000001F8   0xF890 0x0025      LDRB     R0,[R0, #+37]
   \   000001FC   0x.... 0x....      BL       v_MonoShow_BlackCutBar
    150                  v_MonoShow_OutOfTheRtAngle(m_ModeMachine.becauseThisOutOfTheBlackRtAngle);
   \   00000200   0x....             LDR.N    R0,??DataTable0_21
   \   00000202   0xF890 0x0026      LDRB     R0,[R0, #+38]
   \   00000206   0x.... 0x....      BL       v_MonoShow_OutOfTheRtAngle
    151                  //v_MonoShow_BlackRtAngle(m_ModeMachine.showRtBlackAngle);
    152                  char ch = (m_Control.LightChaserLogic) + '0';
   \   0000020A   0x....             LDR.N    R0,??DataTable0_5
   \   0000020C   0x79C0             LDRB     R0,[R0, #+7]
   \   0000020E   0x3030             ADDS     R0,R0,#+48
   \   00000210   0xF88D 0x0000      STRB     R0,[SP, #+0]
    153                  v_MonoRev_6x8Str(80,7,&ch,0);
   \   00000214   0x2300             MOVS     R3,#+0
   \   00000216   0xAA00             ADD      R2,SP,#+0
   \   00000218   0x2107             MOVS     R1,#+7
   \   0000021A   0x2050             MOVS     R0,#+80
   \   0000021C   0x.... 0x....      BL       v_MonoRev_6x8Str
   \                     ??main_5: (+1)
   \   00000220   0x....             LDR.N    R0,??DataTable0_12
   \   00000222   0x6800             LDR      R0,[R0, #+0]
   \   00000224   0x....             LDR.N    R1,??DataTable0_12
   \   00000226   0x6889             LDR      R1,[R1, #+8]
   \   00000228   0x1A40             SUBS     R0,R0,R1
   \   0000022A   0x....             LDR.N    R1,??DataTable0_12
   \   0000022C   0x68C9             LDR      R1,[R1, #+12]
   \   0000022E   0x4288             CMP      R0,R1
   \   00000230   0xD2BC             BCS.N    ??main_6
   \   00000232   0x2001             MOVS     R0,#+1
   \   00000234   0x.... 0x....      BL       v_Buzzer_OutPut
   \   00000238   0xE7BB             B.N      ??main_7
    154                  //v_MonoRev_Number(98,7,m_ImageAbstract.Rt_Var,10);
    155              }
    156          }
    157          
    158          /*
    159          void v_user_done_after_ImageCut()
    160          {
    161              return;
    162          }
    163          */
    164          /*
    165          uint16 Angle = 0;
    166          uint16 counter = 240;
    167          uint16 AngleArray[800];
    168          uint16 ServoCounter[800];
    169          uint16 ArrayCounter = 0;
    170          sint16 delta = 1;
    171          */
    172          

   \                                 In section .text, align 2, keep-with-next
    173          void v_system_clocker_user_done()//用户执行部分
    174          {
    175              /*
    176              m_Control.ServoAngle = n_GetServoAngle();//获取当前的角度信息
    177              m_Control.LeftMotorSpeed = n_GetMotor_speed(FTM1_BASE_PTR);
    178              m_Control.RightMotorSpeed = n_GetMotor_speed(FTM2_BASE_PTR);
    179              v_Servo_Out(m_Control.ServoDeg);//输出角度
    180              */
    181          }
   \                     v_system_clocker_user_done: (+1)
   \   00000000   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x00 0x00          DC8      "",0x0,0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     m_CarRunningMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     m_ImageAbstract

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     m_ImageTesting

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x........         DC32     vPtr_CheckLightingChaser

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     m_Control

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_6:
   \   00000000   0x........         DC32     v_speed_Give

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_7:
   \   00000000   0x42240000         DC32     0x42240000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_8:
   \   00000000   0x3F99999A         DC32     0x3f99999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_9:
   \   00000000   0x40828F5C         DC32     0x40828f5c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_10:
   \   00000000   0x3FD9999A         DC32     0x3fd9999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_11:
   \   00000000   0x........         DC32     bus_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_12:
   \   00000000   0x........         DC32     m_system

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_13:
   \   00000000   0x........         DC32     v_system_clocked

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_14:
   \   00000000   0x42A00000         DC32     0x42a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_15:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_16:
   \   00000000   0x........         DC32     `?<Constant "Someting Done.">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_17:
   \   00000000   0x........         DC32     `?<Constant "It\\'s image init.">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_18:
   \   00000000   0x........         DC32     `?<Constant "It\\'s image int init.">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_19:
   \   00000000   0x........         DC32     `?<Constant "It\\'s navigation init.">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_20:
   \   00000000   0x........         DC32     v_motor_doneFunc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_21:
   \   00000000   0x........         DC32     m_ModeMachine

   \                                 In section .rodata, align 4
   \                     `?<Constant "Someting Done.">`:
   \   00000000   0x53 0x6F          DC8 "Someting Done."
   \              0x6D 0x65    
   \              0x74 0x69    
   \              0x6E 0x67    
   \              0x20 0x44    
   \              0x6F 0x6E    
   \              0x65 0x2E    
   \              0x00         
   \   0000000F   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "It\\'s image init.">`:
   \   00000000   0x49 0x74          DC8 "It's image init."
   \              0x27 0x73    
   \              0x20 0x69    
   \              0x6D 0x61    
   \              0x67 0x65    
   \              0x20 0x69    
   \              0x6E 0x69    
   \              0x74 0x2E    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "It\\'s image int init.">`:
   \   00000000   0x49 0x74          DC8 "It's image int init."
   \              0x27 0x73    
   \              0x20 0x69    
   \              0x6D 0x61    
   \              0x67 0x65    
   \              0x20 0x69    
   \              0x6E 0x74    
   \              0x20 0x69    
   \              0x6E 0x69    
   \              0x74 0x2E    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     `?<Constant "It\\'s navigation init.">`:
   \   00000000   0x49 0x74          DC8 "It's navigation init."
   \              0x27 0x73    
   \              0x20 0x6E    
   \              0x61 0x76    
   \              0x69 0x67    
   \              0x61 0x74    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x69 0x6E    
   \              0x69 0x74    
   \              0x2E 0x00    
   \   00000016   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 1
   \   00000000   0x00               DC8 ""
    182          /*
    183          The deepest solace lies in understanding
    184          This ancient unseen stream
    185          A shudder before the beautiful
    186          
    187          Awake Oceanborn
    188          Behold this force
    189          Bring the outside in
    190          Explore the self to epiphany
    191          
    192          The very core of life
    193          Is soaring higher of truth and light
    194          
    195          The music of this awe
    196          Deep silence between the notes
    197          Deafens me with endless love
    198          This vagrant island Earth
    199          A pilgrim shining bright
    200          We are shuddering
    201          Before the beautiful
    202          Before the plentiful
    203          We're the voyagers
    204          
    205          Tales from the seas
    206          Cathedral of greed
    207          
    208          The very core of life
    209          Is soaring higher of truth and light
    210          
    211          The music of this awe
    212          Deep silence between the notes
    213          Deafens me with endless love
    214          This vagrant island Earth
    215          A pilgrim shining bright
    216          We are shuddering
    217          Before the beautiful
    218          Before the plentiful
    219          We're the voyagers
    220          
    221          The unkown
    222          The grand show
    223          The choir of the stars
    224          Interstellar
    225          Theatre play
    226          The nebula curtain falls
    227          Imagination
    228          Evolution
    229          A species from the veil
    230          As we wander
    231          In search of
    232          The source of the tale
    233          
    234          The music of this awe
    235          Deep silence between the notes
    236          Deafens me with endless love
    237          This vagrant island Earth
    238          A pilgrim shining bright
    239          We are shuddering
    240          Before the beautiful
    241          Before the plentiful
    242          We're the voyagers
    243          */

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   main
         8   -- Indirect call
         8   -> DEBUG_INFORMATION
         8   -> b_Beholder_Init
         8   -> b_Beholder_InteruptInit
         8   -> b_Navigation_Init
         8   -> disable_irq
         8   -> enable_irq
         8   -> modeMachine_Testing_TurnOnMode
         8   -> pit_init
         8   -> set_irq_priority
         8   -> set_vector_handler
         8   -> v_Buzzer_Init
         8   -> v_Buzzer_OutPut
         8   -> v_ExInterface_Init
         8   -> v_LightingChaser_Init
         8   -> v_LoadingControlPara
         8   -> v_ModeMachine_KeyInput_TurnCut
         8   -> v_MonoRev_6x8Str
         8   -> v_MonoShow_BlackBar
         8   -> v_MonoShow_BlackCutBar
         8   -> v_MonoShow_BlackRtAngle
         8   -> v_MonoShow_BlackTurning
         8   -> v_MonoShow_Buzzer
         8   -> v_MonoShow_OutOfTheRtAngle
         8   -> v_MonoShow_isLonly
         8   -> v_Servo_Init
         8   -> v_Servo_Out
         8   -> v_UartInit
         8   -> v_Uart_GetPicture_InRunning
         8   -> v_motor_Init
         8   -> v_shudderBeforeReve_Init
         8   -> v_systemPara_Init
       0   v_system_clocker_user_done


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       1  ?<Constant "">
      20  ?<Constant "It\'s image init.">
      24  ?<Constant "It\'s image int init.">
      24  ?<Constant "It\'s navigation init.">
      16  ?<Constant "Someting Done.">
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_10
       4  ??DataTable0_11
       4  ??DataTable0_12
       4  ??DataTable0_13
       4  ??DataTable0_14
       4  ??DataTable0_15
       4  ??DataTable0_16
       4  ??DataTable0_17
       4  ??DataTable0_18
       4  ??DataTable0_19
       4  ??DataTable0_2
       4  ??DataTable0_20
       4  ??DataTable0_21
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable0_6
       4  ??DataTable0_7
       4  ??DataTable0_8
       4  ??DataTable0_9
       2  MonoColor
      24  m_system
     570  main
       2  v_system_clocker_user_done

 
  26 bytes in section .bss
  85 bytes in section .rodata
 660 bytes in section .text
 
 660 bytes of CODE  memory
  85 bytes of CONST memory
  26 bytes of DATA  memory

Errors: none
Warnings: none
