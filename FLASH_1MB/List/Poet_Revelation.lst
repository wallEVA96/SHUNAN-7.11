###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      11/Jul/2015  22:04:19 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\ShunAn_Panel\Poet_Revelation.c             #
#    Command line =  D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\ShunAn_Panel\Poet_Revelation.c -D IAR -D   #
#                    TWR_K60F120M -lCN D:\创作室\飞思卡尔智能小车\顺暗三号\代 #
#                    码\顺暗三号-华南赛最后七天-7.11\FLASH_1MB\List\ -lB      #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\FLASH_1MB\List\ -o                         #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\FLASH_1MB\Obj\ --no_cse --no_unroll        #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=VFPv4_sp --dlib_config "C:\Program Files        #
#                    (x86)\IAR Systems\Embedded Workbench                     #
#                    6.5\arm\INC\c\DLib_Config_Normal.h" -I                   #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\ -I D:\创作室\飞思卡尔智能小车\顺暗三号\代 #
#                    码\顺暗三号-华南赛最后七天-7.11\Library\ -I              #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\Library\BlessedAlien\ -I                   #
#                    D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\ShunAn_Panel\ -Ol --use_c++_inline         #
#    List file    =  D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\FLASH_1MB\List\Poet_Revelation.lst         #
#    Object file  =  D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛 #
#                    最后七天-7.11\FLASH_1MB\Obj\Poet_Revelation.o            #
#                                                                             #
#                                                                             #
###############################################################################

D:\创作室\飞思卡尔智能小车\顺暗三号\代码\顺暗三号-华南赛最后七天-7.11\ShunAn_Panel\Poet_Revelation.c
      1          #include "arm_cm4.h"
      2          #include "MK60F15.h"
      3          #include "ShunAn_Lib.h"
      4          #include "start_ShunAn.h"
      5          #include "BlessedAlien.h"
      6          
      7          #include "Poet_Revelation.h"
      8          
      9          #include "Poet_ImageBeholder.h"
     10          
     11          #include <stdio.h>
     12          

   \                                 In section .rodata, align 4
     13          const s_Revelation_PinSet m_MonoOLED_pins =//m_MonoOLED_pins
   \                     m_MonoOLED_pins:
   \   00000000   0x400FF000         DC32 400FF000H, 13, 400FF080H, 0, 400FF000H, 15, 400FF000H, 17
   \              0x0000000D   
   \              0x400FF080   
   \              0x00000000   
   \              0x400FF000   
   \              0x0000000F   
   \              0x400FF000   
   \              0x00000011   
   \   00000020   0x400FF000         DC32 400FF000H, 16
   \              0x00000010   
     14          {.RES_Port = PTA_BASE_PTR,
     15          .RES_Pin = 13,
     16          
     17          .CS_Port = PTC_BASE_PTR,
     18          .CS_Pin = 0,//C0
     19          
     20          .SCLK_Port = PTA_BASE_PTR,
     21          .SCLK_Pin = 15,
     22          .SDATA_Port = PTA_BASE_PTR,
     23          .SDATA_Pin = 17,
     24          .SDC_Port = PTA_BASE_PTR,
     25          .SDC_Pin = 16,};//

   \                                 In section .rodata, align 4
     26          const s_Revelation_PinSet m_ColorOLED_pins =//m_ColorOLED_pins
   \                     m_ColorOLED_pins:
   \   00000000   0x400FF000         DC32 400FF000H, 13, 400FF000H, 14, 400FF000H, 15, 400FF000H, 17
   \              0x0000000D   
   \              0x400FF000   
   \              0x0000000E   
   \              0x400FF000   
   \              0x0000000F   
   \              0x400FF000   
   \              0x00000011   
   \   00000020   0x400FF000         DC32 400FF000H, 16
   \              0x00000010   
     27          {.RES_Port = PTA_BASE_PTR,
     28          .RES_Pin = 13,
     29          
     30          .CS_Port = PTA_BASE_PTR,
     31          .CS_Pin = 14,//A14
     32          
     33          .SCLK_Port = PTA_BASE_PTR,
     34          .SCLK_Pin = 15,
     35          .SDATA_Port = PTA_BASE_PTR,
     36          .SDATA_Pin = 17,
     37          .SDC_Port = PTA_BASE_PTR,
     38          .SDC_Pin = 16,};//
     39          
     40          
     41          
     42          
     43          #define de_colorReve_ClearWindow()              do\
     44                                                          {\
     45                                                              color_OLED_WrCmd(0x25);\
     46                                                              color_OLED_WrCmd(0);\
     47                                                              color_OLED_WrCmd(0);\
     48                                                              color_OLED_WrCmd(95);\
     49                                                              color_OLED_WrCmd(63);\
     50                                                          }while(0)
     51                                                            
     52                                                            
     53          #define de_colorReve_ClearRect(x0,y0,xt,yt)     do\
     54                                                          {\
     55                                                              color_OLED_WrCmd(0x25);\
     56                                                              color_OLED_WrCmd(x0);\
     57                                                              color_OLED_WrCmd(y0);\
     58                                                              color_OLED_WrCmd(xt);\
     59                                                              color_OLED_WrCmd(yt);\
     60                                                          }while(0)
     61          

   \                                 In section .text, align 2, keep-with-next
     62          void v_shudderBeforeReve_Init(void)
     63          {
   \                     v_shudderBeforeReve_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     64              SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK | SIM_SCGC5_PORTC_MASK;
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x40048038
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x6020      ORRS     R0,R0,#0xA00
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable11  ;; 0x40048038
   \   00000010   0x6008             STR      R0,[R1, #+0]
     65              PORTA_PCR13  |= PORT_PCR_MUX(1);
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable11_1  ;; 0x40049034
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable11_1  ;; 0x40049034
   \   00000020   0x6008             STR      R0,[R1, #+0]
     66              PORTA_PCR15  |= PORT_PCR_MUX(1);
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable11_2  ;; 0x4004903c
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable11_2  ;; 0x4004903c
   \   00000030   0x6008             STR      R0,[R1, #+0]
     67              PORTA_PCR16  |= PORT_PCR_MUX(1);
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable11_3  ;; 0x40049040
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable11_3  ;; 0x40049040
   \   00000040   0x6008             STR      R0,[R1, #+0]
     68              PORTA_PCR17  |= PORT_PCR_MUX(1);
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable11_4  ;; 0x40049044
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable11_4  ;; 0x40049044
   \   00000050   0x6008             STR      R0,[R1, #+0]
     69              PORTA_PCR14  |= PORT_PCR_MUX(1);
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable11_5  ;; 0x40049038
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable11_5  ;; 0x40049038
   \   00000060   0x6008             STR      R0,[R1, #+0]
     70              PORTC_PCR0  |= PORT_PCR_MUX(1);
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable11_6  ;; 0x4004b000
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable11_6  ;; 0x4004b000
   \   00000070   0x6008             STR      R0,[R1, #+0]
     71          //    PORTB_PCR18  |= PORT_PCR_MUX(7);
     72          //    PORTB_PCR1   |= PORT_PCR_MUX(1);
     73              RevelationPortPin_Init(m_ColorOLED_pins.SDC_Port,m_ColorOLED_pins.SDC_Pin);
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000076   0x6A00             LDR      R0,[R0, #+32]
   \   00000078   0x6940             LDR      R0,[R0, #+20]
   \   0000007A   0x2101             MOVS     R1,#+1
   \   0000007C   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000080   0x6A52             LDR      R2,[R2, #+36]
   \   00000082   0x4091             LSLS     R1,R1,R2
   \   00000084   0x4308             ORRS     R0,R1,R0
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000008A   0x6A09             LDR      R1,[R1, #+32]
   \   0000008C   0x6148             STR      R0,[R1, #+20]
     74              RevelationPortPin_Init(m_ColorOLED_pins.SCLK_Port,m_ColorOLED_pins.SCLK_Pin);
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000092   0x6900             LDR      R0,[R0, #+16]
   \   00000094   0x6940             LDR      R0,[R0, #+20]
   \   00000096   0x2101             MOVS     R1,#+1
   \   00000098   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   0000009C   0x6952             LDR      R2,[R2, #+20]
   \   0000009E   0x4091             LSLS     R1,R1,R2
   \   000000A0   0x4308             ORRS     R0,R1,R0
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000A6   0x6909             LDR      R1,[R1, #+16]
   \   000000A8   0x6148             STR      R0,[R1, #+20]
     75              RevelationPortPin_Init(m_ColorOLED_pins.SDATA_Port,m_ColorOLED_pins.SDATA_Pin);
   \   000000AA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000AE   0x6980             LDR      R0,[R0, #+24]
   \   000000B0   0x6940             LDR      R0,[R0, #+20]
   \   000000B2   0x2101             MOVS     R1,#+1
   \   000000B4   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   000000B8   0x69D2             LDR      R2,[R2, #+28]
   \   000000BA   0x4091             LSLS     R1,R1,R2
   \   000000BC   0x4308             ORRS     R0,R1,R0
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000C2   0x6989             LDR      R1,[R1, #+24]
   \   000000C4   0x6148             STR      R0,[R1, #+20]
     76              RevelationPortPin_Init(m_ColorOLED_pins.RES_Port,m_ColorOLED_pins.RES_Pin);
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x6940             LDR      R0,[R0, #+20]
   \   000000CE   0x2101             MOVS     R1,#+1
   \   000000D0   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   000000D4   0x6852             LDR      R2,[R2, #+4]
   \   000000D6   0x4091             LSLS     R1,R1,R2
   \   000000D8   0x4308             ORRS     R0,R1,R0
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000DE   0x6809             LDR      R1,[R1, #+0]
   \   000000E0   0x6148             STR      R0,[R1, #+20]
     77              
     78              RevelationPortPin_Init(m_ColorOLED_pins.CS_Port,m_ColorOLED_pins.CS_Pin);
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000E6   0x6880             LDR      R0,[R0, #+8]
   \   000000E8   0x6940             LDR      R0,[R0, #+20]
   \   000000EA   0x2101             MOVS     R1,#+1
   \   000000EC   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   000000F0   0x68D2             LDR      R2,[R2, #+12]
   \   000000F2   0x4091             LSLS     R1,R1,R2
   \   000000F4   0x4308             ORRS     R0,R1,R0
   \   000000F6   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000FA   0x6889             LDR      R1,[R1, #+8]
   \   000000FC   0x6148             STR      R0,[R1, #+20]
     79              RevelationPortPin_Init(m_MonoOLED_pins.CS_Port,m_MonoOLED_pins.CS_Pin);
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000102   0x6880             LDR      R0,[R0, #+8]
   \   00000104   0x6940             LDR      R0,[R0, #+20]
   \   00000106   0x2101             MOVS     R1,#+1
   \   00000108   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   0000010C   0x68D2             LDR      R2,[R2, #+12]
   \   0000010E   0x4091             LSLS     R1,R1,R2
   \   00000110   0x4308             ORRS     R0,R1,R0
   \   00000112   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000116   0x6889             LDR      R1,[R1, #+8]
   \   00000118   0x6148             STR      R0,[R1, #+20]
     80          //    bin_CS_Init;
     81              // 配置信息
     82          //    bin_CS_turn_1;
     83              //CLK_turn_1;
     84              Revelation_CLK_1(m_ColorOLED_pins);
   \   0000011A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000011E   0x6900             LDR      R0,[R0, #+16]
   \   00000120   0x6800             LDR      R0,[R0, #+0]
   \   00000122   0x2101             MOVS     R1,#+1
   \   00000124   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000128   0x6952             LDR      R2,[R2, #+20]
   \   0000012A   0x4091             LSLS     R1,R1,R2
   \   0000012C   0x4308             ORRS     R0,R1,R0
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000132   0x6909             LDR      R1,[R1, #+16]
   \   00000134   0x6008             STR      R0,[R1, #+0]
     85              Revelation_DATA_1(m_ColorOLED_pins);
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000013A   0x6980             LDR      R0,[R0, #+24]
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0x2101             MOVS     R1,#+1
   \   00000140   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000144   0x69D2             LDR      R2,[R2, #+28]
   \   00000146   0x4091             LSLS     R1,R1,R2
   \   00000148   0x4308             ORRS     R0,R1,R0
   \   0000014A   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000014E   0x6989             LDR      R1,[R1, #+24]
   \   00000150   0x6008             STR      R0,[R1, #+0]
     86              Revelation_REST_0(m_ColorOLED_pins);
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000156   0x6800             LDR      R0,[R0, #+0]
   \   00000158   0x6800             LDR      R0,[R0, #+0]
   \   0000015A   0x2101             MOVS     R1,#+1
   \   0000015C   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000160   0x6852             LDR      R2,[R2, #+4]
   \   00000162   0x4091             LSLS     R1,R1,R2
   \   00000164   0x4388             BICS     R0,R0,R1
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000016A   0x6809             LDR      R1,[R1, #+0]
   \   0000016C   0x6008             STR      R0,[R1, #+0]
     87              Revelation_DC_1(m_ColorOLED_pins);
   \   0000016E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000172   0x6A00             LDR      R0,[R0, #+32]
   \   00000174   0x6800             LDR      R0,[R0, #+0]
   \   00000176   0x2101             MOVS     R1,#+1
   \   00000178   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   0000017C   0x6A52             LDR      R2,[R2, #+36]
   \   0000017E   0x4091             LSLS     R1,R1,R2
   \   00000180   0x4308             ORRS     R0,R1,R0
   \   00000182   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000186   0x6A09             LDR      R1,[R1, #+32]
   \   00000188   0x6008             STR      R0,[R1, #+0]
     88              
     89              Revelation_CS_1(m_ColorOLED_pins);
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000018E   0x6880             LDR      R0,[R0, #+8]
   \   00000190   0x6800             LDR      R0,[R0, #+0]
   \   00000192   0x2101             MOVS     R1,#+1
   \   00000194   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000198   0x68D2             LDR      R2,[R2, #+12]
   \   0000019A   0x4091             LSLS     R1,R1,R2
   \   0000019C   0x4308             ORRS     R0,R1,R0
   \   0000019E   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000001A2   0x6889             LDR      R1,[R1, #+8]
   \   000001A4   0x6008             STR      R0,[R1, #+0]
     90              Revelation_CS_1(m_MonoOLED_pins);
   \   000001A6   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000001AA   0x6880             LDR      R0,[R0, #+8]
   \   000001AC   0x6800             LDR      R0,[R0, #+0]
   \   000001AE   0x2101             MOVS     R1,#+1
   \   000001B0   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   000001B4   0x68D2             LDR      R2,[R2, #+12]
   \   000001B6   0x4091             LSLS     R1,R1,R2
   \   000001B8   0x4308             ORRS     R0,R1,R0
   \   000001BA   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   000001BE   0x6889             LDR      R1,[R1, #+8]
   \   000001C0   0x6008             STR      R0,[R1, #+0]
     91              
     92              for(unsigned short int i = 0;i<1000;i++);//延时
   \   000001C2   0x2000             MOVS     R0,#+0
   \   000001C4   0xE000             B.N      ??v_shudderBeforeReve_Init_0
   \                     ??v_shudderBeforeReve_Init_1: (+1)
   \   000001C6   0x1C40             ADDS     R0,R0,#+1
   \                     ??v_shudderBeforeReve_Init_0: (+1)
   \   000001C8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000001CA   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000001CE   0xDBFA             BLT.N    ??v_shudderBeforeReve_Init_1
     93              //DELAY_MS(50);
     94              Revelation_REST_1(m_ColorOLED_pins);
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000001D4   0x6800             LDR      R0,[R0, #+0]
   \   000001D6   0x6800             LDR      R0,[R0, #+0]
   \   000001D8   0x2101             MOVS     R1,#+1
   \   000001DA   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   000001DE   0x6852             LDR      R2,[R2, #+4]
   \   000001E0   0x4091             LSLS     R1,R1,R2
   \   000001E2   0x4308             ORRS     R0,R1,R0
   \   000001E4   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000001E8   0x6809             LDR      R1,[R1, #+0]
   \   000001EA   0x6008             STR      R0,[R1, #+0]
     95              
     96              //Revelation_CS_1(m_MonoOLED_pins);
     97          //    Revelation_CS_0(m_ColorOLED_pins);
     98              v_ColorRevelation_Init();
   \   000001EC   0x.... 0x....      BL       v_ColorRevelation_Init
     99              //Revelation_CS_1(m_MonoOLED_pins);
    100          //    Revelation_CS_1(m_ColorOLED_pins);
    101          //    Revelation_CS_0(m_MonoOLED_pins);
    102              v_MonoRevelation_Init();
   \   000001F0   0x.... 0x....      BL       v_MonoRevelation_Init
    103          //    Revelation_CS_1(m_MonoOLED_pins);
    104              
    105          }
   \   000001F4   0xBD01             POP      {R0,PC}          ;; return
    106          

   \                                 In section .text, align 2, keep-with-next
    107          void v_ColorRevelation_Init(void)
    108          {
   \                     v_ColorRevelation_Init: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    109              Revelation_CS_0(m_ColorOLED_pins);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000006   0x6880             LDR      R0,[R0, #+8]
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000010   0x68D2             LDR      R2,[R2, #+12]
   \   00000012   0x4091             LSLS     R1,R1,R2
   \   00000014   0x4388             BICS     R0,R0,R1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000001A   0x6889             LDR      R1,[R1, #+8]
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    110              color_OLED_WrCmd(0xAD);color_OLED_WrCmd(0x8E);//Select external VCC supply
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x21AD             MOVS     R1,#+173
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000026   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x218E             MOVS     R1,#+142
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000032   0x.... 0x....      BL       v_Revelation_WriteBytes
    111              
    112              color_OLED_WrCmd(0xAE);//Display OFF
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x21AE             MOVS     R1,#+174
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000003E   0x.... 0x....      BL       v_Revelation_WriteBytes
    113              
    114              color_OLED_WrCmd(0x81);color_OLED_WrCmd(255);//A
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2181             MOVS     R1,#+129
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000004A   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000004E   0x2200             MOVS     R2,#+0
   \   00000050   0x21FF             MOVS     R1,#+255
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000056   0x.... 0x....      BL       v_Revelation_WriteBytes
    115              color_OLED_WrCmd(0x82);color_OLED_WrCmd(255);//B
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x2182             MOVS     R1,#+130
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000062   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000066   0x2200             MOVS     R2,#+0
   \   00000068   0x21FF             MOVS     R1,#+255
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000006E   0x.... 0x....      BL       v_Revelation_WriteBytes
    116              color_OLED_WrCmd(0x83);color_OLED_WrCmd(255);//C
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x2183             MOVS     R1,#+131
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000007A   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000007E   0x2200             MOVS     R2,#+0
   \   00000080   0x21FF             MOVS     R1,#+255
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000086   0x.... 0x....      BL       v_Revelation_WriteBytes
    117              color_OLED_WrCmd(0x87);color_OLED_WrCmd(0x06);//Master Current Set
   \   0000008A   0x2200             MOVS     R2,#+0
   \   0000008C   0x2187             MOVS     R1,#+135
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000092   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000096   0x2200             MOVS     R2,#+0
   \   00000098   0x2106             MOVS     R1,#+6
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000009E   0x.... 0x....      BL       v_Revelation_WriteBytes
    118              color_OLED_WrCmd(0x8A);color_OLED_WrCmd(0xFF);//Pre-charge Speed
   \   000000A2   0x2200             MOVS     R2,#+0
   \   000000A4   0x218A             MOVS     R1,#+138
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000AA   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x21FF             MOVS     R1,#+255
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000B6   0x.... 0x....      BL       v_Revelation_WriteBytes
    119              color_OLED_WrCmd(0x8B);color_OLED_WrCmd(0xFF);//
   \   000000BA   0x2200             MOVS     R2,#+0
   \   000000BC   0x218B             MOVS     R1,#+139
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000C2   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000C6   0x2200             MOVS     R2,#+0
   \   000000C8   0x21FF             MOVS     R1,#+255
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000CE   0x.... 0x....      BL       v_Revelation_WriteBytes
    120              color_OLED_WrCmd(0x8C);color_OLED_WrCmd(0xFF);//
   \   000000D2   0x2200             MOVS     R2,#+0
   \   000000D4   0x218C             MOVS     R1,#+140
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000DA   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000DE   0x2200             MOVS     R2,#+0
   \   000000E0   0x21FF             MOVS     R1,#+255
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000E6   0x.... 0x....      BL       v_Revelation_WriteBytes
    121              
    122              color_OLED_WrCmd(0xA1);color_OLED_WrCmd(0);//Start Line
   \   000000EA   0x2200             MOVS     R2,#+0
   \   000000EC   0x21A1             MOVS     R1,#+161
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000F2   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000F6   0x2200             MOVS     R2,#+0
   \   000000F8   0x2100             MOVS     R1,#+0
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000FE   0x.... 0x....      BL       v_Revelation_WriteBytes
    123              color_OLED_WrCmd(0xA2);color_OLED_WrCmd(0);//vertical offset
   \   00000102   0x2200             MOVS     R2,#+0
   \   00000104   0x21A2             MOVS     R1,#+162
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000010A   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000010E   0x2200             MOVS     R2,#+0
   \   00000110   0x2100             MOVS     R1,#+0
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000116   0x.... 0x....      BL       v_Revelation_WriteBytes
    124              color_OLED_WrCmd(0xA8);color_OLED_WrCmd(0x3F);//Mutil Ratio
   \   0000011A   0x2200             MOVS     R2,#+0
   \   0000011C   0x21A8             MOVS     R1,#+168
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000122   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000126   0x2200             MOVS     R2,#+0
   \   00000128   0x213F             MOVS     R1,#+63
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000012E   0x.... 0x....      BL       v_Revelation_WriteBytes
    125              
    126              color_OLED_WrCmd(0xA0);color_OLED_WrCmd(0x62);//Set driver remap and color depth
   \   00000132   0x2200             MOVS     R2,#+0
   \   00000134   0x21A0             MOVS     R1,#+160
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000013A   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000013E   0x2200             MOVS     R2,#+0
   \   00000140   0x2162             MOVS     R1,#+98
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000146   0x.... 0x....      BL       v_Revelation_WriteBytes
    127              
    128              color_OLED_WrCmd(0xB9);//Enable Linear Gray Scale Table
   \   0000014A   0x2200             MOVS     R2,#+0
   \   0000014C   0x21B9             MOVS     R1,#+185
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000152   0x.... 0x....      BL       v_Revelation_WriteBytes
    129              
    130              color_OLED_WrCmd(0xB1);color_OLED_WrCmd(0xFF);//period adjustment
   \   00000156   0x2200             MOVS     R2,#+0
   \   00000158   0x21B1             MOVS     R1,#+177
   \   0000015A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000015E   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000162   0x2200             MOVS     R2,#+0
   \   00000164   0x21FF             MOVS     R1,#+255
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000016A   0x.... 0x....      BL       v_Revelation_WriteBytes
    131              color_OLED_WrCmd(0xB3);color_OLED_WrCmd(0xF0);//Display Clock Divider / Oscillator Frequency
   \   0000016E   0x2200             MOVS     R2,#+0
   \   00000170   0x21B3             MOVS     R1,#+179
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000176   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000017A   0x2200             MOVS     R2,#+0
   \   0000017C   0x21F0             MOVS     R1,#+240
   \   0000017E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000182   0x.... 0x....      BL       v_Revelation_WriteBytes
    132              color_OLED_WrCmd(0xBB);color_OLED_WrCmd(0x3E);//Set COM deselect voltage level
   \   00000186   0x2200             MOVS     R2,#+0
   \   00000188   0x21BB             MOVS     R1,#+187
   \   0000018A   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000018E   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000192   0x2200             MOVS     R2,#+0
   \   00000194   0x213E             MOVS     R1,#+62
   \   00000196   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000019A   0x.... 0x....      BL       v_Revelation_WriteBytes
    133              
    134              color_OLED_WrCmd(0xBE);color_OLED_WrCmd(0x3E);//Set COM deselect voltage level
   \   0000019E   0x2200             MOVS     R2,#+0
   \   000001A0   0x21BE             MOVS     R1,#+190
   \   000001A2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000001A6   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000001AA   0x2200             MOVS     R2,#+0
   \   000001AC   0x213E             MOVS     R1,#+62
   \   000001AE   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000001B2   0x.... 0x....      BL       v_Revelation_WriteBytes
    135              
    136              color_OLED_WrCmd(0xA4);//Normal 
   \   000001B6   0x2200             MOVS     R2,#+0
   \   000001B8   0x21A4             MOVS     R1,#+164
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000001BE   0x.... 0x....      BL       v_Revelation_WriteBytes
    137              //清除全屏
    138              
    139              color_OLED_WrCmd(0x2E);//Stop Scrolling
   \   000001C2   0x2200             MOVS     R2,#+0
   \   000001C4   0x212E             MOVS     R1,#+46
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000001CA   0x.... 0x....      BL       v_Revelation_WriteBytes
    140              color_OLED_WrCmd(0xAF);//Display On
   \   000001CE   0x2200             MOVS     R2,#+0
   \   000001D0   0x21AF             MOVS     R1,#+175
   \   000001D2   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000001D6   0x.... 0x....      BL       v_Revelation_WriteBytes
    141              
    142              /*------------------------Color-初始化结束--------------------------------*/
    143              s_color color_set;
    144              for(uint8 loop = 0;loop < 96;loop++)
   \   000001DA   0x2400             MOVS     R4,#+0
   \   000001DC   0xE014             B.N      ??v_ColorRevelation_Init_0
    145              {
    146                  for(uint8 inter = 0;inter < 64;inter++)
    147                  {
    148                      color_set.A_Blue_31 = 0;
   \                     ??v_ColorRevelation_Init_1: (+1)
   \   000001DE   0x2000             MOVS     R0,#+0
   \   000001E0   0xF88D 0x0002      STRB     R0,[SP, #+2]
    149                      color_set.B_Green_63 = 0;
   \   000001E4   0x2000             MOVS     R0,#+0
   \   000001E6   0xF88D 0x0001      STRB     R0,[SP, #+1]
    150                      color_set.C_Red_31 = 0;
   \   000001EA   0x2000             MOVS     R0,#+0
   \   000001EC   0xF88D 0x0000      STRB     R0,[SP, #+0]
    151                      v_ColorRev_PutPoint(loop,inter,&color_set);
   \   000001F0   0xAA00             ADD      R2,SP,#+0
   \   000001F2   0x0029             MOVS     R1,R5
   \   000001F4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000001F6   0x0020             MOVS     R0,R4
   \   000001F8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001FA   0x.... 0x....      BL       v_ColorRev_PutPoint
    152                  }
   \   000001FE   0x1C6D             ADDS     R5,R5,#+1
   \                     ??v_ColorRevelation_Init_2: (+1)
   \   00000200   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000202   0x2D40             CMP      R5,#+64
   \   00000204   0xDBEB             BLT.N    ??v_ColorRevelation_Init_1
   \   00000206   0x1C64             ADDS     R4,R4,#+1
   \                     ??v_ColorRevelation_Init_0: (+1)
   \   00000208   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000020A   0x2C60             CMP      R4,#+96
   \   0000020C   0xDA01             BGE.N    ??v_ColorRevelation_Init_3
   \   0000020E   0x2500             MOVS     R5,#+0
   \   00000210   0xE7F6             B.N      ??v_ColorRevelation_Init_2
    153              }
    154              Revelation_CS_1(m_ColorOLED_pins);
   \                     ??v_ColorRevelation_Init_3: (+1)
   \   00000212   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000216   0x6880             LDR      R0,[R0, #+8]
   \   00000218   0x6800             LDR      R0,[R0, #+0]
   \   0000021A   0x2101             MOVS     R1,#+1
   \   0000021C   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000220   0x68D2             LDR      R2,[R2, #+12]
   \   00000222   0x4091             LSLS     R1,R1,R2
   \   00000224   0x4308             ORRS     R0,R1,R0
   \   00000226   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   0000022A   0x6889             LDR      R1,[R1, #+8]
   \   0000022C   0x6008             STR      R0,[R1, #+0]
    155          }
   \   0000022E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    156          
    157          
    158          //============================================================================//

   \                                 In section .text, align 2, keep-with-next
    159          void v_MonoRevelation_Init(void)        
    160          {
   \                     v_MonoRevelation_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    161              Revelation_CS_0(m_MonoOLED_pins);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000006   0x6880             LDR      R0,[R0, #+8]
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   00000010   0x68D2             LDR      R2,[R2, #+12]
   \   00000012   0x4091             LSLS     R1,R1,R2
   \   00000014   0x4388             BICS     R0,R0,R1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000001A   0x6889             LDR      R1,[R1, #+8]
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    162              Mono_OLED_WrCmd(0xae);//--turn off oled panel
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x21AE             MOVS     R1,#+174
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000026   0x.... 0x....      BL       v_Revelation_WriteBytes
    163              Mono_OLED_WrCmd(0x00);//---set low column address
   \   0000002A   0x2200             MOVS     R2,#+0
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000032   0x.... 0x....      BL       v_Revelation_WriteBytes
    164              Mono_OLED_WrCmd(0x10);//---set high column address
   \   00000036   0x2200             MOVS     R2,#+0
   \   00000038   0x2110             MOVS     R1,#+16
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000003E   0x.... 0x....      BL       v_Revelation_WriteBytes
    165              Mono_OLED_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0x2140             MOVS     R1,#+64
   \   00000046   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000004A   0x.... 0x....      BL       v_Revelation_WriteBytes
    166              Mono_OLED_WrCmd(0x81);//--set contrast control register
   \   0000004E   0x2200             MOVS     R2,#+0
   \   00000050   0x2181             MOVS     R1,#+129
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000056   0x.... 0x....      BL       v_Revelation_WriteBytes
    167              Mono_OLED_WrCmd(0xcf); // Set SEG Output Current Brightness
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0x21CF             MOVS     R1,#+207
   \   0000005E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000062   0x.... 0x....      BL       v_Revelation_WriteBytes
    168              Mono_OLED_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
   \   00000066   0x2200             MOVS     R2,#+0
   \   00000068   0x21A1             MOVS     R1,#+161
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000006E   0x.... 0x....      BL       v_Revelation_WriteBytes
    169              Mono_OLED_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x21C8             MOVS     R1,#+200
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000007A   0x.... 0x....      BL       v_Revelation_WriteBytes
    170              Mono_OLED_WrCmd(0xa6);//--set normal display
   \   0000007E   0x2200             MOVS     R2,#+0
   \   00000080   0x21A6             MOVS     R1,#+166
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000086   0x.... 0x....      BL       v_Revelation_WriteBytes
    171              Mono_OLED_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
   \   0000008A   0x2200             MOVS     R2,#+0
   \   0000008C   0x21A8             MOVS     R1,#+168
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000092   0x.... 0x....      BL       v_Revelation_WriteBytes
    172              Mono_OLED_WrCmd(0x3f);//--1/64 duty
   \   00000096   0x2200             MOVS     R2,#+0
   \   00000098   0x213F             MOVS     R1,#+63
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000009E   0x.... 0x....      BL       v_Revelation_WriteBytes
    173              Mono_OLED_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   000000A2   0x2200             MOVS     R2,#+0
   \   000000A4   0x21D3             MOVS     R1,#+211
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000AA   0x.... 0x....      BL       v_Revelation_WriteBytes
    174              Mono_OLED_WrCmd(0x00);//-not offset
   \   000000AE   0x2200             MOVS     R2,#+0
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000B6   0x.... 0x....      BL       v_Revelation_WriteBytes
    175              Mono_OLED_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
   \   000000BA   0x2200             MOVS     R2,#+0
   \   000000BC   0x21D5             MOVS     R1,#+213
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000C2   0x.... 0x....      BL       v_Revelation_WriteBytes
    176              Mono_OLED_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   000000C6   0x2200             MOVS     R2,#+0
   \   000000C8   0x2180             MOVS     R1,#+128
   \   000000CA   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000CE   0x.... 0x....      BL       v_Revelation_WriteBytes
    177              Mono_OLED_WrCmd(0xd9);//--set pre-charge period
   \   000000D2   0x2200             MOVS     R2,#+0
   \   000000D4   0x21D9             MOVS     R1,#+217
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000DA   0x.... 0x....      BL       v_Revelation_WriteBytes
    178              Mono_OLED_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   000000DE   0x2200             MOVS     R2,#+0
   \   000000E0   0x21F1             MOVS     R1,#+241
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000E6   0x.... 0x....      BL       v_Revelation_WriteBytes
    179              Mono_OLED_WrCmd(0xda);//--set com pins hardware configuration
   \   000000EA   0x2200             MOVS     R2,#+0
   \   000000EC   0x21DA             MOVS     R1,#+218
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000F2   0x.... 0x....      BL       v_Revelation_WriteBytes
    180              Mono_OLED_WrCmd(0x12);
   \   000000F6   0x2200             MOVS     R2,#+0
   \   000000F8   0x2112             MOVS     R1,#+18
   \   000000FA   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000FE   0x.... 0x....      BL       v_Revelation_WriteBytes
    181              Mono_OLED_WrCmd(0xdb);//--set vcomh
   \   00000102   0x2200             MOVS     R2,#+0
   \   00000104   0x21DB             MOVS     R1,#+219
   \   00000106   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000010A   0x.... 0x....      BL       v_Revelation_WriteBytes
    182              Mono_OLED_WrCmd(0x40);//Set VCOM Deselect Level
   \   0000010E   0x2200             MOVS     R2,#+0
   \   00000110   0x2140             MOVS     R1,#+64
   \   00000112   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000116   0x.... 0x....      BL       v_Revelation_WriteBytes
    183              Mono_OLED_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   0000011A   0x2200             MOVS     R2,#+0
   \   0000011C   0x2120             MOVS     R1,#+32
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000122   0x.... 0x....      BL       v_Revelation_WriteBytes
    184              Mono_OLED_WrCmd(0x02);//
   \   00000126   0x2200             MOVS     R2,#+0
   \   00000128   0x2102             MOVS     R1,#+2
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000012E   0x.... 0x....      BL       v_Revelation_WriteBytes
    185              Mono_OLED_WrCmd(0x8d);//--set Charge Pump enable/disable
   \   00000132   0x2200             MOVS     R2,#+0
   \   00000134   0x218D             MOVS     R1,#+141
   \   00000136   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000013A   0x.... 0x....      BL       v_Revelation_WriteBytes
    186              Mono_OLED_WrCmd(0x14);//--set(0x10) disable
   \   0000013E   0x2200             MOVS     R2,#+0
   \   00000140   0x2114             MOVS     R1,#+20
   \   00000142   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000146   0x.... 0x....      BL       v_Revelation_WriteBytes
    187              Mono_OLED_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
   \   0000014A   0x2200             MOVS     R2,#+0
   \   0000014C   0x21A4             MOVS     R1,#+164
   \   0000014E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000152   0x.... 0x....      BL       v_Revelation_WriteBytes
    188              Mono_OLED_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
   \   00000156   0x2200             MOVS     R2,#+0
   \   00000158   0x21A6             MOVS     R1,#+166
   \   0000015A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000015E   0x.... 0x....      BL       v_Revelation_WriteBytes
    189              Mono_OLED_WrCmd(0xaf);//--turn on oled panel
   \   00000162   0x2200             MOVS     R2,#+0
   \   00000164   0x21AF             MOVS     R1,#+175
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000016A   0x.... 0x....      BL       v_Revelation_WriteBytes
    190              
    191              v_MonoRev_Fill(0x00);  //初始清屏
   \   0000016E   0x2000             MOVS     R0,#+0
   \   00000170   0x.... 0x....      BL       v_MonoRev_Fill
    192              
    193              Mono_OLED_WrCmd(0xb0+0);                         // 设置目标页地址（y轴）
   \   00000174   0x2200             MOVS     R2,#+0
   \   00000176   0x21B0             MOVS     R1,#+176
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000017C   0x.... 0x....      BL       v_Revelation_WriteBytes
    194              Mono_OLED_WrCmd(((0&0xf0)>>4)|0x10);             // High
   \   00000180   0x2200             MOVS     R2,#+0
   \   00000182   0x2110             MOVS     R1,#+16
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000188   0x.... 0x....      BL       v_Revelation_WriteBytes
    195              Mono_OLED_WrCmd(0&0x0f);                         // Low
   \   0000018C   0x2200             MOVS     R2,#+0
   \   0000018E   0x2100             MOVS     R1,#+0
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000194   0x.... 0x....      BL       v_Revelation_WriteBytes
    196              Revelation_CS_1(m_MonoOLED_pins);
   \   00000198   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000019C   0x6880             LDR      R0,[R0, #+8]
   \   0000019E   0x6800             LDR      R0,[R0, #+0]
   \   000001A0   0x2101             MOVS     R1,#+1
   \   000001A2   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   000001A6   0x68D2             LDR      R2,[R2, #+12]
   \   000001A8   0x4091             LSLS     R1,R1,R2
   \   000001AA   0x4308             ORRS     R0,R1,R0
   \   000001AC   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   000001B0   0x6889             LDR      R1,[R1, #+8]
   \   000001B2   0x6008             STR      R0,[R1, #+0]
    197          } 
   \   000001B4   0xBD01             POP      {R0,PC}          ;; return
    198          
    199          
    200          //============================================================================//
    201          //Revelation

   \                                 In section .text, align 2, keep-with-next
    202          void v_Revelation_WriteBytes(const s_Revelation_PinSet * owner,uint8 data,uint8 data_command_choose)
    203          {
   \                     v_Revelation_WriteBytes: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB08B             SUB      SP,SP,#+44
   \   00000004   0x0003             MOVS     R3,R0
   \   00000006   0x000C             MOVS     R4,R1
   \   00000008   0x0015             MOVS     R5,R2
    204          //    bin_CS_turn_0;
    205              s_Revelation_PinSet Temp = * owner;
   \   0000000A   0xA800             ADD      R0,SP,#+0
   \   0000000C   0x0019             MOVS     R1,R3
   \   0000000E   0x2228             MOVS     R2,#+40
   \   00000010   0x.... 0x....      BL       __aeabi_memcpy4
    206              uint8 loop = 8;
   \   00000014   0x2008             MOVS     R0,#+8
    207              if(data_command_choose)//Data=>1//Command=>0
   \   00000016   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000018   0x2D00             CMP      R5,#+0
   \   0000001A   0xD008             BEQ.N    ??v_Revelation_WriteBytes_0
    208              {
    209                  Revelation_DC_1(Temp);//DC=0//DC=1
   \   0000001C   0x9908             LDR      R1,[SP, #+32]
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x2201             MOVS     R2,#+1
   \   00000022   0x9B09             LDR      R3,[SP, #+36]
   \   00000024   0x409A             LSLS     R2,R2,R3
   \   00000026   0x4311             ORRS     R1,R2,R1
   \   00000028   0x9A08             LDR      R2,[SP, #+32]
   \   0000002A   0x6011             STR      R1,[R2, #+0]
   \   0000002C   0xE007             B.N      ??v_Revelation_WriteBytes_1
    210              }
    211              else
    212              {
    213                  Revelation_DC_0(Temp);//DC=0//DC=1
   \                     ??v_Revelation_WriteBytes_0: (+1)
   \   0000002E   0x9908             LDR      R1,[SP, #+32]
   \   00000030   0x6809             LDR      R1,[R1, #+0]
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0x9B09             LDR      R3,[SP, #+36]
   \   00000036   0x409A             LSLS     R2,R2,R3
   \   00000038   0x4391             BICS     R1,R1,R2
   \   0000003A   0x9A08             LDR      R2,[SP, #+32]
   \   0000003C   0x6011             STR      R1,[R2, #+0]
    214              }
    215              Revelation_CLK_0(Temp);//CLK/D0=0
   \                     ??v_Revelation_WriteBytes_1: (+1)
   \   0000003E   0x9904             LDR      R1,[SP, #+16]
   \   00000040   0x6809             LDR      R1,[R1, #+0]
   \   00000042   0x2201             MOVS     R2,#+1
   \   00000044   0x9B05             LDR      R3,[SP, #+20]
   \   00000046   0x409A             LSLS     R2,R2,R3
   \   00000048   0x4391             BICS     R1,R1,R2
   \   0000004A   0x9A04             LDR      R2,[SP, #+16]
   \   0000004C   0x6011             STR      R1,[R2, #+0]
   \   0000004E   0xE018             B.N      ??v_Revelation_WriteBytes_2
    216              while(loop --)
    217              {
    218                  if(data&0x80){Revelation_DATA_1(Temp);}//SDA/D1=1
    219                  else{Revelation_DATA_0(Temp);}//SDA/D1=0
   \                     ??v_Revelation_WriteBytes_3: (+1)
   \   00000050   0x9906             LDR      R1,[SP, #+24]
   \   00000052   0x6809             LDR      R1,[R1, #+0]
   \   00000054   0x2201             MOVS     R2,#+1
   \   00000056   0x9B07             LDR      R3,[SP, #+28]
   \   00000058   0x409A             LSLS     R2,R2,R3
   \   0000005A   0x4391             BICS     R1,R1,R2
   \   0000005C   0x9A06             LDR      R2,[SP, #+24]
   \   0000005E   0x6011             STR      R1,[R2, #+0]
    220                  Revelation_CLK_1(Temp);//SCL//CLK/D0=1
   \                     ??v_Revelation_WriteBytes_4: (+1)
   \   00000060   0x9904             LDR      R1,[SP, #+16]
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0x2201             MOVS     R2,#+1
   \   00000066   0x9B05             LDR      R3,[SP, #+20]
   \   00000068   0x409A             LSLS     R2,R2,R3
   \   0000006A   0x4311             ORRS     R1,R2,R1
   \   0000006C   0x9A04             LDR      R2,[SP, #+16]
   \   0000006E   0x6011             STR      R1,[R2, #+0]
    221                  Revelation_CLK_0(Temp);//SCL//CLK/D0=0    
   \   00000070   0x9904             LDR      R1,[SP, #+16]
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x2201             MOVS     R2,#+1
   \   00000076   0x9B05             LDR      R3,[SP, #+20]
   \   00000078   0x409A             LSLS     R2,R2,R3
   \   0000007A   0x4391             BICS     R1,R1,R2
   \   0000007C   0x9A04             LDR      R2,[SP, #+16]
   \   0000007E   0x6011             STR      R1,[R2, #+0]
    222                  data<<=1;    
   \   00000080   0x0064             LSLS     R4,R4,#+1
   \                     ??v_Revelation_WriteBytes_2: (+1)
   \   00000082   0x0001             MOVS     R1,R0
   \   00000084   0x1E48             SUBS     R0,R1,#+1
   \   00000086   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000088   0x2900             CMP      R1,#+0
   \   0000008A   0xD00A             BEQ.N    ??v_Revelation_WriteBytes_5
   \   0000008C   0x0621             LSLS     R1,R4,#+24
   \   0000008E   0xD5DF             BPL.N    ??v_Revelation_WriteBytes_3
   \   00000090   0x9906             LDR      R1,[SP, #+24]
   \   00000092   0x6809             LDR      R1,[R1, #+0]
   \   00000094   0x2201             MOVS     R2,#+1
   \   00000096   0x9B07             LDR      R3,[SP, #+28]
   \   00000098   0x409A             LSLS     R2,R2,R3
   \   0000009A   0x4311             ORRS     R1,R2,R1
   \   0000009C   0x9A06             LDR      R2,[SP, #+24]
   \   0000009E   0x6011             STR      R1,[R2, #+0]
   \   000000A0   0xE7DE             B.N      ??v_Revelation_WriteBytes_4
    223              }
    224          //    bin_CS_turn_1;
    225          }
   \                     ??v_Revelation_WriteBytes_5: (+1)
   \   000000A2   0xB00B             ADD      SP,SP,#+44
   \   000000A4   0xBD30             POP      {R4,R5,PC}       ;; return
    226          
    227          
    228          //============================================================================//
    229          //画点

   \                                 In section .text, align 2, keep-with-next
    230          void v_ColorRev_PutPoint(uint8 x,uint8 y,s_color * color)
    231          {
   \                     v_ColorRev_PutPoint: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
   \   00000006   0x0016             MOVS     R6,R2
    232              Revelation_CS_0(m_ColorOLED_pins);
   \   00000008   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000000C   0x6880             LDR      R0,[R0, #+8]
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0x2101             MOVS     R1,#+1
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   00000016   0x68D2             LDR      R2,[R2, #+12]
   \   00000018   0x4091             LSLS     R1,R1,R2
   \   0000001A   0x4388             BICS     R0,R0,R1
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   00000020   0x6889             LDR      R1,[R1, #+8]
   \   00000022   0x6008             STR      R0,[R1, #+0]
    233              color_OLED_WrCmd(0x15);color_OLED_WrCmd(x);color_OLED_WrCmd(95);//Setup Column
   \   00000024   0x2200             MOVS     R2,#+0
   \   00000026   0x2115             MOVS     R1,#+21
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000002C   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000030   0x2200             MOVS     R2,#+0
   \   00000032   0x0021             MOVS     R1,R4
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000003A   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000003E   0x2200             MOVS     R2,#+0
   \   00000040   0x215F             MOVS     R1,#+95
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000046   0x.... 0x....      BL       v_Revelation_WriteBytes
    234              color_OLED_WrCmd(0x75);color_OLED_WrCmd(y);color_OLED_WrCmd(63);//Setup Row
   \   0000004A   0x2200             MOVS     R2,#+0
   \   0000004C   0x2175             MOVS     R1,#+117
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000052   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x0029             MOVS     R1,R5
   \   0000005A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000060   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000064   0x2200             MOVS     R2,#+0
   \   00000066   0x213F             MOVS     R1,#+63
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   0000006C   0x.... 0x....      BL       v_Revelation_WriteBytes
    235              color_OLED_WrDat((color->C_Red_31 << 3)|(color->B_Green_63 >> 3));
   \   00000070   0x2201             MOVS     R2,#+1
   \   00000072   0x7830             LDRB     R0,[R6, #+0]
   \   00000074   0x7871             LDRB     R1,[R6, #+1]
   \   00000076   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000078   0x08C9             LSRS     R1,R1,#+3
   \   0000007A   0xEA51 0x01C0      ORRS     R1,R1,R0, LSL #+3
   \   0000007E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000084   0x.... 0x....      BL       v_Revelation_WriteBytes
    236              color_OLED_WrDat((color->B_Green_63 << 5)|(color->A_Blue_31));//color
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x7870             LDRB     R0,[R6, #+1]
   \   0000008C   0x78B1             LDRB     R1,[R6, #+2]
   \   0000008E   0xEA51 0x1140      ORRS     R1,R1,R0, LSL #+5
   \   00000092   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000098   0x.... 0x....      BL       v_Revelation_WriteBytes
    237              Revelation_CS_1(m_ColorOLED_pins);
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   000000A0   0x6880             LDR      R0,[R0, #+8]
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x2101             MOVS     R1,#+1
   \   000000A6   0x.... 0x....      LDR.W    R2,??DataTable11_7
   \   000000AA   0x68D2             LDR      R2,[R2, #+12]
   \   000000AC   0x4091             LSLS     R1,R1,R2
   \   000000AE   0x4308             ORRS     R0,R1,R0
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable11_7
   \   000000B4   0x6889             LDR      R1,[R1, #+8]
   \   000000B6   0x6008             STR      R0,[R1, #+0]
    238          }
   \   000000B8   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
    239          void v_MonoRev_PutPixel(uint8 x,uint8 y)
    240          {
   \                     v_MonoRev_PutPixel: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    241              Revelation_CS_0(m_MonoOLED_pins);
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000008   0x6880             LDR      R0,[R0, #+8]
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x2201             MOVS     R2,#+1
   \   0000000E   0x.... 0x....      LDR.W    R3,??DataTable11_9
   \   00000012   0x68DB             LDR      R3,[R3, #+12]
   \   00000014   0x409A             LSLS     R2,R2,R3
   \   00000016   0x4390             BICS     R0,R0,R2
   \   00000018   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   0000001C   0x6892             LDR      R2,[R2, #+8]
   \   0000001E   0x6010             STR      R0,[R2, #+0]
    242              uint8 data1;  //data1当前点的数据 
    243              data1 = 0x01<<(y%8); 	
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000024   0x2208             MOVS     R2,#+8
   \   00000026   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \   0000002A   0xFB03 0x1312      MLS      R3,R3,R2,R1
   \   0000002E   0xFA10 0xF503      LSLS     R5,R0,R3
    244              Mono_OLED_WrCmd(0xb0+(y>>3));//设置页号，y右移3位相当于除以8，即由行号得出页号
   \   00000032   0x2200             MOVS     R2,#+0
   \   00000034   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000036   0x08C8             LSRS     R0,R1,#+3
   \   00000038   0xF1B0 0x0150      SUBS     R1,R0,#+80
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000042   0x.... 0x....      BL       v_Revelation_WriteBytes
    245              Mono_OLED_WrCmd(((x&0xf0)>>4)|0x10);//设置列号的高4位
   \   00000046   0x2200             MOVS     R2,#+0
   \   00000048   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000004A   0x0920             LSRS     R0,R4,#+4
   \   0000004C   0xF050 0x0110      ORRS     R1,R0,#0x10
   \   00000050   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000056   0x.... 0x....      BL       v_Revelation_WriteBytes
    246              Mono_OLED_WrCmd(x&0x0f);//设置列号的低4位
   \   0000005A   0x2200             MOVS     R2,#+0
   \   0000005C   0xF014 0x010F      ANDS     R1,R4,#0xF
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000064   0x.... 0x....      BL       v_Revelation_WriteBytes
    247              Mono_OLED_WrDat(data1); 	 
   \   00000068   0x2201             MOVS     R2,#+1
   \   0000006A   0x0029             MOVS     R1,R5
   \   0000006C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000072   0x.... 0x....      BL       v_Revelation_WriteBytes
    248              Revelation_CS_1(m_MonoOLED_pins);
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000007A   0x6880             LDR      R0,[R0, #+8]
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x2101             MOVS     R1,#+1
   \   00000080   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   00000084   0x68D2             LDR      R2,[R2, #+12]
   \   00000086   0x4091             LSLS     R1,R1,R2
   \   00000088   0x4308             ORRS     R0,R1,R0
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000008E   0x6889             LDR      R1,[R1, #+8]
   \   00000090   0x6008             STR      R0,[R1, #+0]
    249          }
   \   00000092   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    250          //============================================================================//
    251          //灰阶

   \                                 In section .text, align 4, keep-with-next
    252          void v_65kcolor2Mono(uint8 MonoValue,s_color * color)
    253          {
    254              //256 => 64
    255              //0   => 0
    256              MonoValue = (uint8)(-((float)MonoValue*(float)MonoValue)/1024.f + ((float)MonoValue)/2.f);//高光压缩
   \                     v_65kcolor2Mono: (+1)
   \   00000000   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000002   0xEE00 0x0A10      VMOV     S0,R0
   \   00000006   0xEEB8 0x0A40      VCVT.F32.U32 S0,S0
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0xEE00 0x0A90      VMOV     S1,R0
   \   00000010   0xEEF8 0x0A60      VCVT.F32.U32 S1,S1
   \   00000014   0xEE20 0x0A60      VNMUL.F32 S0,S0,S1
   \   00000018   0xEDDF 0x....      VLDR.W   S1,??DataTable8  ;; 0x44800000
   \   0000001C   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0xEE00 0x0A90      VMOV     S1,R0
   \   00000026   0xEEF8 0x0A60      VCVT.F32.U32 S1,S1
   \   0000002A   0xEEB0 0x1A00      VMOV.F32 S2,#2.0
   \   0000002E   0xEEC0 0x0A81      VDIV.F32 S1,S1,S2
   \   00000032   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \   00000036   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   0000003A   0xEE10 0x0A10      VMOV     R0,S0
    257              color->C_Red_31 = MonoValue >> 1;
   \   0000003E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000040   0x0842             LSRS     R2,R0,#+1
   \   00000042   0x700A             STRB     R2,[R1, #+0]
    258              color->B_Green_63 = MonoValue;
   \   00000044   0x7048             STRB     R0,[R1, #+1]
    259              color->A_Blue_31 = MonoValue >> 1;
   \   00000046   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000048   0x0840             LSRS     R0,R0,#+1
   \   0000004A   0x7088             STRB     R0,[R1, #+2]
    260          }
   \   0000004C   0x4770             BX       LR               ;; return
    261          
    262          
    263          //============================================================================//
    264          //灰阶清屏

   \                                 In section .text, align 2, keep-with-next
    265          void v_MonoRev_Fill(uint8 bmp_data)
    266          {
   \                     v_MonoRev_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    267              Revelation_CS_0(m_MonoOLED_pins);
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000008   0x6880             LDR      R0,[R0, #+8]
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   00000012   0x68D2             LDR      R2,[R2, #+12]
   \   00000014   0x4091             LSLS     R1,R1,R2
   \   00000016   0x4388             BICS     R0,R0,R1
   \   00000018   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000001C   0x6889             LDR      R1,[R1, #+8]
   \   0000001E   0x6008             STR      R0,[R1, #+0]
    268              uint8 y,x;	
    269              for(y=0;y<8;y++)
   \   00000020   0x2500             MOVS     R5,#+0
   \   00000022   0xE00B             B.N      ??v_MonoRev_Fill_0
    270              {
    271                  Mono_OLED_WrCmd(0xb0+y);
    272                  Mono_OLED_WrCmd(0x01);
    273                  Mono_OLED_WrCmd(0x10);
    274                  for(x=0;x < DE_MonoReve_X_WIDTH;x++)
    275                  {
    276                      Mono_OLED_WrDat(bmp_data);
   \                     ??v_MonoRev_Fill_1: (+1)
   \   00000024   0x2201             MOVS     R2,#+1
   \   00000026   0x0021             MOVS     R1,R4
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000002E   0x.... 0x....      BL       v_Revelation_WriteBytes
    277                  }
   \   00000032   0x1C76             ADDS     R6,R6,#+1
   \                     ??v_MonoRev_Fill_2: (+1)
   \   00000034   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000036   0x2E80             CMP      R6,#+128
   \   00000038   0xDBF4             BLT.N    ??v_MonoRev_Fill_1
   \   0000003A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??v_MonoRev_Fill_0: (+1)
   \   0000003C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003E   0x2D08             CMP      R5,#+8
   \   00000040   0xDA15             BGE.N    ??v_MonoRev_Fill_3
   \   00000042   0x2200             MOVS     R2,#+0
   \   00000044   0xF1B5 0x0150      SUBS     R1,R5,#+80
   \   00000048   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000004E   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000052   0x2200             MOVS     R2,#+0
   \   00000054   0x2101             MOVS     R1,#+1
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   0000005A   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000005E   0x2200             MOVS     R2,#+0
   \   00000060   0x2110             MOVS     R1,#+16
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000066   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000006A   0x2600             MOVS     R6,#+0
   \   0000006C   0xE7E2             B.N      ??v_MonoRev_Fill_2
    278              }
    279              Revelation_CS_1(m_MonoOLED_pins);
   \                     ??v_MonoRev_Fill_3: (+1)
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000072   0x6880             LDR      R0,[R0, #+8]
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x2101             MOVS     R1,#+1
   \   00000078   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   0000007C   0x68D2             LDR      R2,[R2, #+12]
   \   0000007E   0x4091             LSLS     R1,R1,R2
   \   00000080   0x4308             ORRS     R0,R1,R0
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000086   0x6889             LDR      R1,[R1, #+8]
   \   00000088   0x6008             STR      R0,[R1, #+0]
    280          }
   \   0000008A   0xBD70             POP      {R4-R6,PC}       ;; return
    281          
    282          
    283          //============================================================================//
    284          //灰阶输出字符串

   \                                 In section .text, align 2, keep-with-next
    285          void v_MonoRev_6x8Str(uint8 x,uint8 y,char ch[],uint8 isUnderline)
    286          {
   \                     v_MonoRev_6x8Str: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    287              Revelation_CS_0(m_MonoOLED_pins);
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000010   0x6880             LDR      R0,[R0, #+8]
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   0000001A   0x68D2             LDR      R2,[R2, #+12]
   \   0000001C   0x4091             LSLS     R1,R1,R2
   \   0000001E   0x4388             BICS     R0,R0,R1
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   00000024   0x6889             LDR      R1,[R1, #+8]
   \   00000026   0x6008             STR      R0,[R1, #+0]
    288              uint8 c=0,i=0,j=0;
   \   00000028   0xF05F 0x0800      MOVS     R8,#+0
   \   0000002C   0xF05F 0x0900      MOVS     R9,#+0
   \   00000030   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000034   0xE019             B.N      ??v_MonoRev_6x8Str_0
    289              while (ch[j]!='\0')
    290              {    
    291                  c =ch[j]-32;
    292                  if(x>126){x=0;y++;} // MOD(126,6) = 0
    293                  /////
    294                  Mono_OLED_WrCmd(0xb0+y);
    295                  Mono_OLED_WrCmd(((x&0xf0)>>4)|0x10);
    296                  Mono_OLED_WrCmd(x&0x0f);  
    297                  /////
    298                  if(1 == isUnderline)
    299                  {
    300                      for(i=0;i<6;i++){Mono_OLED_WrDat(C6x8[c][i] | 0x80);}
    301                  }
    302                  else
    303                  {
    304                      for(i=0;i<6;i++){Mono_OLED_WrDat(C6x8[c][i]);}
   \                     ??v_MonoRev_6x8Str_1: (+1)
   \   00000036   0x2201             MOVS     R2,#+1
   \   00000038   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000003C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000040   0x2006             MOVS     R0,#+6
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable11_10
   \   00000046   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   0000004A   0xF819 0x1000      LDRB     R1,[R9, R0]
   \   0000004E   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000052   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000056   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??v_MonoRev_6x8Str_2: (+1)
   \   0000005A   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000005E   0xF1B9 0x0F06      CMP      R9,#+6
   \   00000062   0xDBE8             BLT.N    ??v_MonoRev_6x8Str_1
    305                  }
    306                  
    307                  x+=6;
   \                     ??v_MonoRev_6x8Str_3: (+1)
   \   00000064   0x1DA4             ADDS     R4,R4,#+6
    308                  j++;
   \   00000066   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??v_MonoRev_6x8Str_0: (+1)
   \   0000006A   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000006E   0xF81A 0x0006      LDRB     R0,[R10, R6]
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD046             BEQ.N    ??v_MonoRev_6x8Str_4
   \   00000076   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   0000007A   0xF81A 0x0006      LDRB     R0,[R10, R6]
   \   0000007E   0xF1B0 0x0820      SUBS     R8,R0,#+32
   \   00000082   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000084   0x2C7F             CMP      R4,#+127
   \   00000086   0xDB01             BLT.N    ??v_MonoRev_6x8Str_5
   \   00000088   0x2400             MOVS     R4,#+0
   \   0000008A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??v_MonoRev_6x8Str_5: (+1)
   \   0000008C   0x2200             MOVS     R2,#+0
   \   0000008E   0xF1B5 0x0150      SUBS     R1,R5,#+80
   \   00000092   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000098   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000009C   0x2200             MOVS     R2,#+0
   \   0000009E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A0   0x0920             LSRS     R0,R4,#+4
   \   000000A2   0xF050 0x0110      ORRS     R1,R0,#0x10
   \   000000A6   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000AC   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000B0   0x2200             MOVS     R2,#+0
   \   000000B2   0xF014 0x010F      ANDS     R1,R4,#0xF
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000BA   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000BE   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000C0   0x2F01             CMP      R7,#+1
   \   000000C2   0xD11C             BNE.N    ??v_MonoRev_6x8Str_6
   \   000000C4   0xF05F 0x0900      MOVS     R9,#+0
   \                     ??v_MonoRev_6x8Str_7: (+1)
   \   000000C8   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000CC   0xF1B9 0x0F06      CMP      R9,#+6
   \   000000D0   0xDAC8             BGE.N    ??v_MonoRev_6x8Str_3
   \   000000D2   0x2201             MOVS     R2,#+1
   \   000000D4   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000D8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000DC   0x2006             MOVS     R0,#+6
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable11_10
   \   000000E2   0xFB00 0x1008      MLA      R0,R0,R8,R1
   \   000000E6   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   000000EA   0xF050 0x0180      ORRS     R1,R0,#0x80
   \   000000EE   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   000000F4   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000F8   0xF119 0x0901      ADDS     R9,R9,#+1
   \   000000FC   0xE7E4             B.N      ??v_MonoRev_6x8Str_7
   \                     ??v_MonoRev_6x8Str_6: (+1)
   \   000000FE   0xF05F 0x0900      MOVS     R9,#+0
   \   00000102   0xE7AA             B.N      ??v_MonoRev_6x8Str_2
    309              }
    310              Revelation_CS_1(m_MonoOLED_pins);
   \                     ??v_MonoRev_6x8Str_4: (+1)
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable11_9
   \   00000108   0x6880             LDR      R0,[R0, #+8]
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0x2101             MOVS     R1,#+1
   \   0000010E   0x.... 0x....      LDR.W    R2,??DataTable11_9
   \   00000112   0x68D2             LDR      R2,[R2, #+12]
   \   00000114   0x4091             LSLS     R1,R1,R2
   \   00000116   0x4308             ORRS     R0,R1,R0
   \   00000118   0x.... 0x....      LDR.W    R1,??DataTable11_9
   \   0000011C   0x6889             LDR      R1,[R1, #+8]
   \   0000011E   0x6008             STR      R0,[R1, #+0]
    311          }
   \   00000120   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    312          //输出彩色Str

   \                                 In section .text, align 2, keep-with-next
    313          void v_ColorRev_6x8str(uint16 X,uint16 Y,s_color * color,char ch[])
    314          {
   \                     v_ColorRev_6x8str: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    315              Revelation_CS_0(m_ColorOLED_pins);
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable11_7
   \   00000010   0x6880             LDR      R0,[R0, #+8]
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x2101             MOVS     R1,#+1
   \   00000016   0x....             LDR.N    R2,??DataTable11_7
   \   00000018   0x68D2             LDR      R2,[R2, #+12]
   \   0000001A   0x4091             LSLS     R1,R1,R2
   \   0000001C   0x4388             BICS     R0,R0,R1
   \   0000001E   0x....             LDR.N    R1,??DataTable11_7
   \   00000020   0x6889             LDR      R1,[R1, #+8]
   \   00000022   0x6008             STR      R0,[R1, #+0]
    316              uint8 char_Num = 0; // 显示个数数量
   \   00000024   0xF05F 0x0900      MOVS     R9,#+0
    317              for(uint8 Line_show = 0;Line_show < 8;Line_show++) // 行显示 - 8
   \   00000028   0xF05F 0x0800      MOVS     R8,#+0
   \   0000002C   0xE003             B.N      ??v_ColorRev_6x8str_0
    318              {
    319                  /////
    320                  color_OLED_WrCmd(0x15);color_OLED_WrCmd(X);color_OLED_WrCmd(95);//Setup Column
    321                  color_OLED_WrCmd(0x75);color_OLED_WrCmd(Y + Line_show);color_OLED_WrCmd(63);//Setup Row
    322                  /////
    323                  while('\0' != ch[char_Num]) // 检测是否到最后
    324                  {
    325                      for(uint8 loop = 0;loop < 6;loop++) // 列控制 - 6
    326                      {
    327                          uint8 c = ch[char_Num] - 32;
    328                          if(0 != (C6x8[c][loop]&(1<<(7-Line_show)))) // 若为真则为空，若为假则为实在
    329                          {
    330                              color_OLED_WrDat((color->C_Red_31 << 3)|(color->B_Green_63 >> 3));
    331                              color_OLED_WrDat((color->B_Green_63 << 5)|(color->A_Blue_31));//color
    332                          }
    333                          else
    334                          {
    335                              color_OLED_WrDat(0);
    336                              color_OLED_WrDat(0);//black color
    337                          }
    338                      }
    339                      char_Num ++; // 字符移动
    340                  }
    341                  char_Num = 0; // 回复最早字符
   \                     ??v_ColorRev_6x8str_1: (+1)
   \   0000002E   0xF05F 0x0900      MOVS     R9,#+0
   \   00000032   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??v_ColorRev_6x8str_0: (+1)
   \   00000036   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000003A   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000003E   0xDA66             BGE.N    ??v_ColorRev_6x8str_2
   \   00000040   0x2200             MOVS     R2,#+0
   \   00000042   0x2115             MOVS     R1,#+21
   \   00000044   0x....             LDR.N    R0,??DataTable11_7
   \   00000046   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000004A   0x2200             MOVS     R2,#+0
   \   0000004C   0x0021             MOVS     R1,R4
   \   0000004E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000050   0x....             LDR.N    R0,??DataTable11_7
   \   00000052   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000056   0x2200             MOVS     R2,#+0
   \   00000058   0x215F             MOVS     R1,#+95
   \   0000005A   0x....             LDR.N    R0,??DataTable11_7
   \   0000005C   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000060   0x2200             MOVS     R2,#+0
   \   00000062   0x2175             MOVS     R1,#+117
   \   00000064   0x....             LDR.N    R0,??DataTable11_7
   \   00000066   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0xEB18 0x0105      ADDS     R1,R8,R5
   \   00000070   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000072   0x....             LDR.N    R0,??DataTable11_7
   \   00000074   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000078   0x2200             MOVS     R2,#+0
   \   0000007A   0x213F             MOVS     R1,#+63
   \   0000007C   0x....             LDR.N    R0,??DataTable11_7
   \   0000007E   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000082   0xE001             B.N      ??v_ColorRev_6x8str_3
   \                     ??v_ColorRev_6x8str_4: (+1)
   \   00000084   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??v_ColorRev_6x8str_3: (+1)
   \   00000088   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000008C   0xF819 0x0007      LDRB     R0,[R9, R7]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD0CC             BEQ.N    ??v_ColorRev_6x8str_1
   \   00000094   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000098   0xE00B             B.N      ??v_ColorRev_6x8str_5
   \                     ??v_ColorRev_6x8str_6: (+1)
   \   0000009A   0x2201             MOVS     R2,#+1
   \   0000009C   0x2100             MOVS     R1,#+0
   \   0000009E   0x....             LDR.N    R0,??DataTable11_7
   \   000000A0   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000A4   0x2201             MOVS     R2,#+1
   \   000000A6   0x2100             MOVS     R1,#+0
   \   000000A8   0x....             LDR.N    R0,??DataTable11_7
   \   000000AA   0x.... 0x....      BL       v_Revelation_WriteBytes
   \                     ??v_ColorRev_6x8str_7: (+1)
   \   000000AE   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??v_ColorRev_6x8str_5: (+1)
   \   000000B2   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000B6   0xF1BA 0x0F06      CMP      R10,#+6
   \   000000BA   0xDAE3             BGE.N    ??v_ColorRev_6x8str_4
   \   000000BC   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   000000C0   0xF819 0x0007      LDRB     R0,[R9, R7]
   \   000000C4   0x3820             SUBS     R0,R0,#+32
   \   000000C6   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   000000CA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CC   0x2106             MOVS     R1,#+6
   \   000000CE   0x....             LDR.N    R2,??DataTable11_10
   \   000000D0   0xFB01 0x2000      MLA      R0,R1,R0,R2
   \   000000D4   0xF81A 0x0000      LDRB     R0,[R10, R0]
   \   000000D8   0x2101             MOVS     R1,#+1
   \   000000DA   0xF1D8 0x0207      RSBS     R2,R8,#+7
   \   000000DE   0x4091             LSLS     R1,R1,R2
   \   000000E0   0x4208             TST      R0,R1
   \   000000E2   0xD0DA             BEQ.N    ??v_ColorRev_6x8str_6
   \   000000E4   0x2201             MOVS     R2,#+1
   \   000000E6   0x7830             LDRB     R0,[R6, #+0]
   \   000000E8   0x7871             LDRB     R1,[R6, #+1]
   \   000000EA   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000EC   0x08C9             LSRS     R1,R1,#+3
   \   000000EE   0xEA51 0x01C0      ORRS     R1,R1,R0, LSL #+3
   \   000000F2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000F4   0x....             LDR.N    R0,??DataTable11_7
   \   000000F6   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000FA   0x2201             MOVS     R2,#+1
   \   000000FC   0x7870             LDRB     R0,[R6, #+1]
   \   000000FE   0x78B1             LDRB     R1,[R6, #+2]
   \   00000100   0xEA51 0x1140      ORRS     R1,R1,R0, LSL #+5
   \   00000104   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000106   0x....             LDR.N    R0,??DataTable11_7
   \   00000108   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000010C   0xE7CF             B.N      ??v_ColorRev_6x8str_7
    342              }
    343              Revelation_CS_1(m_ColorOLED_pins);
   \                     ??v_ColorRev_6x8str_2: (+1)
   \   0000010E   0x....             LDR.N    R0,??DataTable11_7
   \   00000110   0x6880             LDR      R0,[R0, #+8]
   \   00000112   0x6800             LDR      R0,[R0, #+0]
   \   00000114   0x2101             MOVS     R1,#+1
   \   00000116   0x....             LDR.N    R2,??DataTable11_7
   \   00000118   0x68D2             LDR      R2,[R2, #+12]
   \   0000011A   0x4091             LSLS     R1,R1,R2
   \   0000011C   0x4308             ORRS     R0,R1,R0
   \   0000011E   0x....             LDR.N    R1,??DataTable11_7
   \   00000120   0x6889             LDR      R1,[R1, #+8]
   \   00000122   0x6008             STR      R0,[R1, #+0]
    344          }
   \   00000124   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    345          
    346          
    347          //输出彩色Image

   \                                 In section .text, align 2, keep-with-next
    348          void v_ColorRev_ImageOutput(uint8 color[][64])
    349          {
   \                     v_ColorRev_ImageOutput: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xB082             SUB      SP,SP,#+8
   \   00000004   0x0004             MOVS     R4,R0
    350              Revelation_CS_0(m_ColorOLED_pins);
   \   00000006   0x....             LDR.N    R0,??DataTable11_7
   \   00000008   0x6880             LDR      R0,[R0, #+8]
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x2101             MOVS     R1,#+1
   \   0000000E   0x....             LDR.N    R2,??DataTable11_7
   \   00000010   0x68D2             LDR      R2,[R2, #+12]
   \   00000012   0x4091             LSLS     R1,R1,R2
   \   00000014   0x4388             BICS     R0,R0,R1
   \   00000016   0x....             LDR.N    R1,??DataTable11_7
   \   00000018   0x6889             LDR      R1,[R1, #+8]
   \   0000001A   0x6008             STR      R0,[R1, #+0]
    351              s_color RGBcolor;
    352              for(uint8 Line_show = 0;Line_show < DE_ColorReve_Y_WIDTH;Line_show++) // 行显示 - 8
   \   0000001C   0x2500             MOVS     R5,#+0
   \   0000001E   0xE025             B.N      ??v_ColorRev_ImageOutput_0
    353              {
    354                  /////
    355                  color_OLED_WrCmd(0x15);color_OLED_WrCmd(0);color_OLED_WrCmd(95);//Setup Column
    356                  color_OLED_WrCmd(0x75);color_OLED_WrCmd(Line_show);color_OLED_WrCmd(63);//Setup Row
    357                  /////
    358                  for(uint8 X_show = 0;X_show < DE_ColorReve_X_WIDTH;X_show++)
    359                  {
    360                      v_65kcolor2Mono(color[X_show][Line_show],&RGBcolor);
   \                     ??v_ColorRev_ImageOutput_1: (+1)
   \   00000020   0xA900             ADD      R1,SP,#+0
   \   00000022   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000024   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000026   0x2040             MOVS     R0,#+64
   \   00000028   0xFB00 0x4006      MLA      R0,R0,R6,R4
   \   0000002C   0x5C28             LDRB     R0,[R5, R0]
   \   0000002E   0x.... 0x....      BL       v_65kcolor2Mono
    361                      color_OLED_WrDat((RGBcolor.C_Red_31 << 3)|(RGBcolor.B_Green_63 >> 3));
   \   00000032   0x2201             MOVS     R2,#+1
   \   00000034   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000038   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   0000003C   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000003E   0x08C9             LSRS     R1,R1,#+3
   \   00000040   0xEA51 0x01C0      ORRS     R1,R1,R0, LSL #+3
   \   00000044   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000046   0x....             LDR.N    R0,??DataTable11_7
   \   00000048   0x.... 0x....      BL       v_Revelation_WriteBytes
    362                      color_OLED_WrDat((RGBcolor.B_Green_63 << 5)|(RGBcolor.A_Blue_31));//color
   \   0000004C   0x2201             MOVS     R2,#+1
   \   0000004E   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   00000052   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   00000056   0xEA51 0x1140      ORRS     R1,R1,R0, LSL #+5
   \   0000005A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000005C   0x....             LDR.N    R0,??DataTable11_7
   \   0000005E   0x.... 0x....      BL       v_Revelation_WriteBytes
    363                  }
   \   00000062   0x1C76             ADDS     R6,R6,#+1
   \                     ??v_ColorRev_ImageOutput_2: (+1)
   \   00000064   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000066   0x2E60             CMP      R6,#+96
   \   00000068   0xDBDA             BLT.N    ??v_ColorRev_ImageOutput_1
   \   0000006A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??v_ColorRev_ImageOutput_0: (+1)
   \   0000006C   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000006E   0x2D40             CMP      R5,#+64
   \   00000070   0xDA20             BGE.N    ??v_ColorRev_ImageOutput_3
   \   00000072   0x2200             MOVS     R2,#+0
   \   00000074   0x2115             MOVS     R1,#+21
   \   00000076   0x....             LDR.N    R0,??DataTable11_7
   \   00000078   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000007C   0x2200             MOVS     R2,#+0
   \   0000007E   0x2100             MOVS     R1,#+0
   \   00000080   0x....             LDR.N    R0,??DataTable11_7
   \   00000082   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000086   0x2200             MOVS     R2,#+0
   \   00000088   0x215F             MOVS     R1,#+95
   \   0000008A   0x....             LDR.N    R0,??DataTable11_7
   \   0000008C   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   00000090   0x2200             MOVS     R2,#+0
   \   00000092   0x2175             MOVS     R1,#+117
   \   00000094   0x....             LDR.N    R0,??DataTable11_7
   \   00000096   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   0000009A   0x2200             MOVS     R2,#+0
   \   0000009C   0x0029             MOVS     R1,R5
   \   0000009E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000A0   0x....             LDR.N    R0,??DataTable11_7
   \   000000A2   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000A6   0x2200             MOVS     R2,#+0
   \   000000A8   0x213F             MOVS     R1,#+63
   \   000000AA   0x....             LDR.N    R0,??DataTable11_7
   \   000000AC   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000B0   0x2600             MOVS     R6,#+0
   \   000000B2   0xE7D7             B.N      ??v_ColorRev_ImageOutput_2
    364              }
    365              Revelation_CS_1(m_ColorOLED_pins);
   \                     ??v_ColorRev_ImageOutput_3: (+1)
   \   000000B4   0x....             LDR.N    R0,??DataTable11_7
   \   000000B6   0x6880             LDR      R0,[R0, #+8]
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x2101             MOVS     R1,#+1
   \   000000BC   0x....             LDR.N    R2,??DataTable11_7
   \   000000BE   0x68D2             LDR      R2,[R2, #+12]
   \   000000C0   0x4091             LSLS     R1,R1,R2
   \   000000C2   0x4308             ORRS     R0,R1,R0
   \   000000C4   0x....             LDR.N    R1,??DataTable11_7
   \   000000C6   0x6889             LDR      R1,[R1, #+8]
   \   000000C8   0x6008             STR      R0,[R1, #+0]
    366          }
   \   000000CA   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    367          
    368          
    369          //============================================================================//

   \                                 In section .text, align 2, keep-with-next
    370          void v_MonoRev_Number(uint8 x,uint8 y,float number,uint8 numCounting)
    371          {
   \                     v_MonoRev_Number: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB087             SUB      SP,SP,#+28
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
    372              char numStr[21];
    373              if(10 == numCounting)
   \   00000008   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000000A   0x2A0A             CMP      R2,#+10
   \   0000000C   0xD113             BNE.N    ??v_MonoRev_Number_0
    374              {
    375                  sprintf(numStr,"%g",number);
   \   0000000E   0xEE10 0x0A10      VMOV     R0,S0
   \   00000012   0x.... 0x....      BL       __aeabi_f2d
   \   00000016   0x0002             MOVS     R2,R0
   \   00000018   0x000B             MOVS     R3,R1
   \   0000001A   0x....             ADR.N    R1,??DataTable11_8  ;; 0x25, 0x67, 0x00, 0x00
   \   0000001C   0xA800             ADD      R0,SP,#+0
   \   0000001E   0x.... 0x....      BL       sprintf
    376              }
    377              else if(16 == numCounting)
    378              {
    379                  sprintf(numStr,"0x%X",(uint8)number);
    380              }
    381              else
    382              {
    383                  return;
    384              }
    385              
    386              v_MonoRev_6x8Str(x,y,numStr,0);
   \                     ??v_MonoRev_Number_1: (+1)
   \   00000022   0x2300             MOVS     R3,#+0
   \   00000024   0xAA00             ADD      R2,SP,#+0
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000002A   0x0020             MOVS     R0,R4
   \   0000002C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002E   0x.... 0x....      BL       v_MonoRev_6x8Str
    387          }
   \                     ??v_MonoRev_Number_2: (+1)
   \   00000032   0xB007             ADD      SP,SP,#+28
   \   00000034   0xBD30             POP      {R4,R5,PC}       ;; return
   \                     ??v_MonoRev_Number_0: (+1)
   \   00000036   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000038   0x2A10             CMP      R2,#+16
   \   0000003A   0xD109             BNE.N    ??v_MonoRev_Number_3
   \   0000003C   0xEEBD 0x0AC0      VCVT.S32.F32 S0,S0
   \   00000040   0xEE10 0x2A10      VMOV     R2,S0
   \   00000044   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000046   0x....             LDR.N    R1,??DataTable11_11
   \   00000048   0xA800             ADD      R0,SP,#+0
   \   0000004A   0x.... 0x....      BL       sprintf
   \   0000004E   0xE7E8             B.N      ??v_MonoRev_Number_1
   \                     ??v_MonoRev_Number_3: (+1)
   \   00000050   0xE7EF             B.N      ??v_MonoRev_Number_2
    388          
    389          
    390          //============================================================================//
    391          //特殊功能函数

   \                                 In section .text, align 2, keep-with-next
    392          void v_ColorRev_Beholder_60_185_Output()
    393          {
   \                     v_ColorRev_Beholder_60_185_Output: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0F5             SUB      SP,SP,#+468
   \   00000004   0xF5AD 0x5DA0      SUB      SP,SP,#+5120
    394              Revelation_CS_0(m_ColorOLED_pins);
   \   00000008   0x....             LDR.N    R0,??DataTable11_7
   \   0000000A   0x6880             LDR      R0,[R0, #+8]
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x....             LDR.N    R2,??DataTable11_7
   \   00000012   0x68D2             LDR      R2,[R2, #+12]
   \   00000014   0x4091             LSLS     R1,R1,R2
   \   00000016   0x4388             BICS     R0,R0,R1
   \   00000018   0x....             LDR.N    R1,??DataTable11_7
   \   0000001A   0x6889             LDR      R1,[R1, #+8]
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    395              s_color RGBcolor;
    396              uint8 color_Message[60][93];
    397              
    398              for(uint8 Line_show = 0;Line_show < 60;Line_show++) // 行显示 - 8
   \   0000001E   0x2000             MOVS     R0,#+0
   \   00000020   0xE013             B.N      ??v_ColorRev_Beholder_60_185_Output_0
    399              {//数据暂存
    400                  for(uint8 X_show = 0;X_show < 93;X_show++)
    401                  {
    402                      color_Message[Line_show][X_show] = m_ImageBeholder_Data[Line_show][X_show * 2];
   \                     ??v_ColorRev_Beholder_60_185_Output_1: (+1)
   \   00000022   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x225D             MOVS     R2,#+93
   \   00000028   0xAB01             ADD      R3,SP,#+4
   \   0000002A   0xFB02 0x3200      MLA      R2,R2,R0,R3
   \   0000002E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x23B9             MOVS     R3,#+185
   \   00000034   0x....             LDR.N    R4,??DataTable11_12
   \   00000036   0xFB03 0x4300      MLA      R3,R3,R0,R4
   \   0000003A   0xF813 0x3011      LDRB     R3,[R3, R1, LSL #+1]
   \   0000003E   0x548B             STRB     R3,[R1, R2]
    403                  }
   \   00000040   0x1C49             ADDS     R1,R1,#+1
   \                     ??v_ColorRev_Beholder_60_185_Output_2: (+1)
   \   00000042   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000044   0x295D             CMP      R1,#+93
   \   00000046   0xDBEC             BLT.N    ??v_ColorRev_Beholder_60_185_Output_1
   \   00000048   0x1C40             ADDS     R0,R0,#+1
   \                     ??v_ColorRev_Beholder_60_185_Output_0: (+1)
   \   0000004A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004C   0x283C             CMP      R0,#+60
   \   0000004E   0xDA01             BGE.N    ??v_ColorRev_Beholder_60_185_Output_3
   \   00000050   0x2100             MOVS     R1,#+0
   \   00000052   0xE7F6             B.N      ??v_ColorRev_Beholder_60_185_Output_2
    404              }
    405              
    406              for(uint8 Line_show = 0;Line_show < 60;Line_show++) // 行显示 - 8
   \                     ??v_ColorRev_Beholder_60_185_Output_3: (+1)
   \   00000054   0x2400             MOVS     R4,#+0
   \   00000056   0xE026             B.N      ??v_ColorRev_Beholder_60_185_Output_4
    407              {
    408                  /////
    409                  color_OLED_WrCmd(0x15);color_OLED_WrCmd(2);color_OLED_WrCmd(95);//Setup Column
    410                  color_OLED_WrCmd(0x75);color_OLED_WrCmd(Line_show);color_OLED_WrCmd(63);//Setup Row
    411                  /////
    412                  for(uint8 X_show = 0;X_show < 93;X_show++)
    413                  {
    414                      v_65kcolor2Mono(color_Message[Line_show][X_show],&RGBcolor);
   \                     ??v_ColorRev_Beholder_60_185_Output_5: (+1)
   \   00000058   0xA900             ADD      R1,SP,#+0
   \   0000005A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000005C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005E   0x205D             MOVS     R0,#+93
   \   00000060   0xAA01             ADD      R2,SP,#+4
   \   00000062   0xFB00 0x2004      MLA      R0,R0,R4,R2
   \   00000066   0x5C28             LDRB     R0,[R5, R0]
   \   00000068   0x.... 0x....      BL       v_65kcolor2Mono
    415                      color_OLED_WrDat((RGBcolor.C_Red_31 << 3)|(RGBcolor.B_Green_63 >> 3));
   \   0000006C   0x2201             MOVS     R2,#+1
   \   0000006E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000072   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   00000076   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000078   0x08C9             LSRS     R1,R1,#+3
   \   0000007A   0xEA51 0x01C0      ORRS     R1,R1,R0, LSL #+3
   \   0000007E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000080   0x....             LDR.N    R0,??DataTable11_7
   \   00000082   0x.... 0x....      BL       v_Revelation_WriteBytes
    416                      color_OLED_WrDat((RGBcolor.B_Green_63 << 5)|(RGBcolor.A_Blue_31));//color
   \   00000086   0x2201             MOVS     R2,#+1
   \   00000088   0xF89D 0x0001      LDRB     R0,[SP, #+1]
   \   0000008C   0xF89D 0x1002      LDRB     R1,[SP, #+2]
   \   00000090   0xEA51 0x1140      ORRS     R1,R1,R0, LSL #+5
   \   00000094   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000096   0x....             LDR.N    R0,??DataTable11_7
   \   00000098   0x.... 0x....      BL       v_Revelation_WriteBytes
    417                  }
   \   0000009C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??v_ColorRev_Beholder_60_185_Output_6: (+1)
   \   0000009E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   000000A0   0x2D5D             CMP      R5,#+93
   \   000000A2   0xDBD9             BLT.N    ??v_ColorRev_Beholder_60_185_Output_5
   \   000000A4   0x1C64             ADDS     R4,R4,#+1
   \                     ??v_ColorRev_Beholder_60_185_Output_4: (+1)
   \   000000A6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   000000A8   0x2C3C             CMP      R4,#+60
   \   000000AA   0xDA20             BGE.N    ??v_ColorRev_Beholder_60_185_Output_7
   \   000000AC   0x2200             MOVS     R2,#+0
   \   000000AE   0x2115             MOVS     R1,#+21
   \   000000B0   0x....             LDR.N    R0,??DataTable11_7
   \   000000B2   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000B6   0x2200             MOVS     R2,#+0
   \   000000B8   0x2102             MOVS     R1,#+2
   \   000000BA   0x....             LDR.N    R0,??DataTable11_7
   \   000000BC   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000C0   0x2200             MOVS     R2,#+0
   \   000000C2   0x215F             MOVS     R1,#+95
   \   000000C4   0x....             LDR.N    R0,??DataTable11_7
   \   000000C6   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000CA   0x2200             MOVS     R2,#+0
   \   000000CC   0x2175             MOVS     R1,#+117
   \   000000CE   0x....             LDR.N    R0,??DataTable11_7
   \   000000D0   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000D4   0x2200             MOVS     R2,#+0
   \   000000D6   0x0021             MOVS     R1,R4
   \   000000D8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000000DA   0x....             LDR.N    R0,??DataTable11_7
   \   000000DC   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000E0   0x2200             MOVS     R2,#+0
   \   000000E2   0x213F             MOVS     R1,#+63
   \   000000E4   0x....             LDR.N    R0,??DataTable11_7
   \   000000E6   0x.... 0x....      BL       v_Revelation_WriteBytes
   \   000000EA   0x2500             MOVS     R5,#+0
   \   000000EC   0xE7D7             B.N      ??v_ColorRev_Beholder_60_185_Output_6
    418              }
    419              Revelation_CS_1(m_ColorOLED_pins);
   \                     ??v_ColorRev_Beholder_60_185_Output_7: (+1)
   \   000000EE   0x....             LDR.N    R0,??DataTable11_7
   \   000000F0   0x6880             LDR      R0,[R0, #+8]
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x2101             MOVS     R1,#+1
   \   000000F6   0x....             LDR.N    R2,??DataTable11_7
   \   000000F8   0x68D2             LDR      R2,[R2, #+12]
   \   000000FA   0x4091             LSLS     R1,R1,R2
   \   000000FC   0x4308             ORRS     R0,R1,R0
   \   000000FE   0x....             LDR.N    R1,??DataTable11_7
   \   00000100   0x6889             LDR      R1,[R1, #+8]
   \   00000102   0x6008             STR      R0,[R1, #+0]
    420          }
   \   00000104   0xB075             ADD      SP,SP,#+468
   \   00000106   0xF50D 0x5DA0      ADD      SP,SP,#+5120
   \   0000010A   0xBD30             POP      {R4,R5,PC}       ;; return
    421          

   \                                 In section .text, align 2, keep-with-next
    422          void v_MonoShow_Buzzer(char ch)
    423          {
   \                     v_MonoShow_Buzzer: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    424              v_MonoRev_6x8Str(121,0,&ch,0);//展示字符
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0xAA00             ADD      R2,SP,#+0
   \   00000006   0x2100             MOVS     R1,#+0
   \   00000008   0x2079             MOVS     R0,#+121
   \   0000000A   0x.... 0x....      BL       v_MonoRev_6x8Str
    425          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    426          void v_MonoShow_isLonly(char ch)
    427          {
   \                     v_MonoShow_isLonly: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    428              v_MonoRev_6x8Str(121,1,&ch,0);//展示字符
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0xAA00             ADD      R2,SP,#+0
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x2079             MOVS     R0,#+121
   \   0000000A   0x.... 0x....      BL       v_MonoRev_6x8Str
    429          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    430          void v_MonoShow_BlackBar(char ch)
    431          {
   \                     v_MonoShow_BlackBar: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    432              v_MonoRev_6x8Str(121,3,&ch,0);//展示字符
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0xAA00             ADD      R2,SP,#+0
   \   00000006   0x2103             MOVS     R1,#+3
   \   00000008   0x2079             MOVS     R0,#+121
   \   0000000A   0x.... 0x....      BL       v_MonoRev_6x8Str
    433          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    434          void v_MonoShow_BlackRtAngle(char ch)
    435          {
   \                     v_MonoShow_BlackRtAngle: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    436              v_MonoRev_6x8Str(121,2,&ch,0);//展示字符
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0xAA00             ADD      R2,SP,#+0
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0x2079             MOVS     R0,#+121
   \   0000000A   0x.... 0x....      BL       v_MonoRev_6x8Str
    437          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    438          void v_MonoShow_BlackTurning(char ch)
    439          {
   \                     v_MonoShow_BlackTurning: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    440              v_MonoRev_6x8Str(121,7,&ch,0);//展示字符
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0xAA00             ADD      R2,SP,#+0
   \   00000006   0x2107             MOVS     R1,#+7
   \   00000008   0x2079             MOVS     R0,#+121
   \   0000000A   0x.... 0x....      BL       v_MonoRev_6x8Str
    441          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    442          void v_MonoShow_BlackCutBar(char ch)
    443          {
   \                     v_MonoShow_BlackCutBar: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    444              v_MonoRev_6x8Str(111,7,&ch,0);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0xAA00             ADD      R2,SP,#+0
   \   00000006   0x2107             MOVS     R1,#+7
   \   00000008   0x206F             MOVS     R0,#+111
   \   0000000A   0x.... 0x....      BL       v_MonoRev_6x8Str
    445          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    446          void v_MonoShow_OutOfTheRtAngle(char ch)
    447          {
   \                     v_MonoShow_OutOfTheRtAngle: (+1)
   \   00000000   0xB501             PUSH     {R0,LR}
    448              v_MonoRev_6x8Str(101,7,&ch,0);
   \   00000002   0x2300             MOVS     R3,#+0
   \   00000004   0xAA00             ADD      R2,SP,#+0
   \   00000006   0x2107             MOVS     R1,#+7
   \   00000008   0x2065             MOVS     R0,#+101
   \   0000000A   0x.... 0x....      BL       v_MonoRev_6x8Str
    449          }
   \   0000000E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x44800000         DC32     0x44800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x40049034         DC32     0x40049034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x4004903C         DC32     0x4004903c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x40049040         DC32     0x40049040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x40049044         DC32     0x40049044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x40049038         DC32     0x40049038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x4004B000         DC32     0x4004b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x........         DC32     m_ColorOLED_pins

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x25 0x67          DC8      0x25, 0x67, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x........         DC32     m_MonoOLED_pins

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x........         DC32     C6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x........         DC32     `?<Constant "0x%X">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x........         DC32     m_ImageBeholder_Data

   \                                 In section .rodata, align 4
   \   00000000   0x25 0x67          DC8 "%g"
   \              0x00         
   \   00000003   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "0x%X">`:
   \   00000000   0x30 0x78          DC8 "0x%X"
   \              0x25 0x58    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   v_65kcolor2Mono
      32   v_ColorRev_6x8str
        32   -> v_Revelation_WriteBytes
    5600   v_ColorRev_Beholder_60_185_Output
      5600   -> v_65kcolor2Mono
      5600   -> v_Revelation_WriteBytes
      24   v_ColorRev_ImageOutput
        24   -> v_65kcolor2Mono
        24   -> v_Revelation_WriteBytes
      16   v_ColorRev_PutPoint
        16   -> v_Revelation_WriteBytes
      16   v_ColorRevelation_Init
        16   -> v_ColorRev_PutPoint
        16   -> v_Revelation_WriteBytes
      32   v_MonoRev_6x8Str
        32   -> v_Revelation_WriteBytes
      16   v_MonoRev_Fill
        16   -> v_Revelation_WriteBytes
      40   v_MonoRev_Number
        40   -> __aeabi_f2d
        40   -> sprintf
        40   -> v_MonoRev_6x8Str
      16   v_MonoRev_PutPixel
        16   -> v_Revelation_WriteBytes
       8   v_MonoRevelation_Init
         8   -> v_MonoRev_Fill
         8   -> v_Revelation_WriteBytes
       8   v_MonoShow_BlackBar
         8   -> v_MonoRev_6x8Str
       8   v_MonoShow_BlackCutBar
         8   -> v_MonoRev_6x8Str
       8   v_MonoShow_BlackRtAngle
         8   -> v_MonoRev_6x8Str
       8   v_MonoShow_BlackTurning
         8   -> v_MonoRev_6x8Str
       8   v_MonoShow_Buzzer
         8   -> v_MonoRev_6x8Str
       8   v_MonoShow_OutOfTheRtAngle
         8   -> v_MonoRev_6x8Str
       8   v_MonoShow_isLonly
         8   -> v_MonoRev_6x8Str
      56   v_Revelation_WriteBytes
        56   -> __aeabi_memcpy4
       8   v_shudderBeforeReve_Init
         8   -> v_ColorRevelation_Init
         8   -> v_MonoRevelation_Init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ?<Constant "%g">
       8  ?<Constant "0x%X">
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  ??DataTable8
      40  m_ColorOLED_pins
      40  m_MonoOLED_pins
      78  v_65kcolor2Mono
     296  v_ColorRev_6x8str
     268  v_ColorRev_Beholder_60_185_Output
     204  v_ColorRev_ImageOutput
     186  v_ColorRev_PutPoint
     560  v_ColorRevelation_Init
     292  v_MonoRev_6x8Str
     140  v_MonoRev_Fill
      82  v_MonoRev_Number
     148  v_MonoRev_PutPixel
     438  v_MonoRevelation_Init
      16  v_MonoShow_BlackBar
      16  v_MonoShow_BlackCutBar
      16  v_MonoShow_BlackRtAngle
      16  v_MonoShow_BlackTurning
      16  v_MonoShow_Buzzer
      16  v_MonoShow_OutOfTheRtAngle
      16  v_MonoShow_isLonly
     166  v_Revelation_WriteBytes
     502  v_shudderBeforeReve_Init

 
    92 bytes in section .rodata
 3 528 bytes in section .text
 
 3 528 bytes of CODE  memory
    92 bytes of CONST memory

Errors: none
Warnings: none
