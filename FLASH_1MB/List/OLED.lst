###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      29/Nov/2014  20:45:46 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    ShunAn_Panel\OLED.c                                      #
#    Command line =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    ShunAn_Panel\OLED.c -D IAR -D TWR_K60F120M -lCN          #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    FLASH_1MB\List\ -lB D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\ #
#                    ´úÂë\MK60FX512VLQ15\FLASH_1MB\List\ -o                   #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    FLASH_1MB\Obj\ --no_cse --no_unroll --no_inline          #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60F #
#                    X512VLQ15\ -I D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\M #
#                    K60FX512VLQ15\Library\ -I D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³° #
#                    µÈýºÅ\´úÂë\MK60FX512VLQ15\Library\BlessedAlien\ -I       #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    ShunAn_Panel\ -Ol --use_c++_inline                       #
#    List file    =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    FLASH_1MB\List\OLED.lst                                  #
#    Object file  =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ #
#                    FLASH_1MB\Obj\OLED.o                                     #
#                                                                             #
#                                                                             #
###############################################################################

D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\MK60FX512VLQ15\ShunAn_Panel\OLED.c
      1          #include "arm_cm4.h"
      2          #include "MK60F15.h"
      3          #include "ShunAn_Lib.h"
      4          #include "start_ShunAn.h"
      5          #include "BlessedAlien.h"
      6          #include "OLED.h"
      7          
      8          #define XLevelL		0x00
      9          #define XLevelH		0x10
     10          #define XLevel		((XLevelH&0x0F)*16+XLevelL)
     11          #define Max_Column	128
     12          #define Max_Row		64
     13          #define	Brightness	0xCF 
     14          
     15          #define X_WIDTH 128
     16          #define Y_WIDTH 64
     17          //======================================
     18          // MK60FX512VLQ15 -- Ver 2.0
     19          // DC -- C11
     20          #define DC_Port                 PTC_BASE_PTR
     21          #define DC_Pin                  11
     22          #define DC_Init                 (DC_Port->PDDR |= (1<<DC_Pin))
     23          #define DC_turn_1               (DC_Port->PDOR |= (1<<DC_Pin))
     24          #define DC_turn_0               (DC_Port->PDOR &=~(1<<DC_Pin))
     25          // RST -- C15
     26          #define RST_Port                PTC_BASE_PTR
     27          #define RST_Pin                 15
     28          #define RST_Init                (RST_Port->PDDR |= (1<<RST_Pin))
     29          #define RST_turn_1              (RST_Port->PDOR |= (1<<RST_Pin))
     30          #define RST_turn_0              (RST_Port->PDOR &=~(1<<RST_Pin))
     31          // SDA -- C18
     32          #define DATA_Port               PTC_BASE_PTR
     33          #define DATA_Pin                18
     34          #define DATA_Init               (DATA_Port->PDDR |= (1<<DATA_Pin))
     35          #define DATA_turn_1             (DATA_Port->PDOR |= (1<<DATA_Pin))
     36          #define DATA_turn_0             (DATA_Port->PDOR &=~(1<<DATA_Pin))
     37          // SCL -- D1
     38          #define CLK_Port                PTD_BASE_PTR
     39          #define CLK_Pin                 1
     40          #define CLK_Init                (CLK_Port->PDDR |= (1<<CLK_Pin))
     41          #define CLK_turn_1              (CLK_Port->PDOR |= (1<<CLK_Pin))
     42          #define CLK_turn_0              (CLK_Port->PDOR &=~(1<<CLK_Pin))
     43          //======================================

   \                                 In section .text, align 2, keep-with-next
     44          void OLED_WrDat(uint8 data)
     45          {
     46            uint8 i=8;
   \                     OLED_WrDat: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
     47            DC_turn_1;; // DC=0//DC=1
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable6  ;; 0x400ff080
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF452 0x6200      ORRS     R2,R2,#0x800
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable6  ;; 0x400ff080
   \   00000010   0x601A             STR      R2,[R3, #+0]
     48            CLK_turn_0;;//CLK/D0=0
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable6_1  ;; 0x400ff0c0
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0xF032 0x0202      BICS     R2,R2,#0x2
   \   0000001C   0x.... 0x....      LDR.W    R3,??DataTable6_1  ;; 0x400ff0c0
   \   00000020   0x601A             STR      R2,[R3, #+0]
   \   00000022   0xE018             B.N      ??OLED_WrDat_0
     49            while(i--)
     50            {
     51              if(data&0x80){DATA_turn_1;}//SDA/D1=1
     52              else{DATA_turn_0;}//SDA/D1=0
   \                     ??OLED_WrDat_1: (+1)
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable6  ;; 0x400ff080
   \   00000028   0x6812             LDR      R2,[R2, #+0]
   \   0000002A   0xF432 0x2280      BICS     R2,R2,#0x40000
   \   0000002E   0x.... 0x....      LDR.W    R3,??DataTable6  ;; 0x400ff080
   \   00000032   0x601A             STR      R2,[R3, #+0]
     53              CLK_turn_1;// SCL//CLK/D0=1
   \                     ??OLED_WrDat_2: (+1)
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable6_1  ;; 0x400ff0c0
   \   00000038   0x6812             LDR      R2,[R2, #+0]
   \   0000003A   0xF052 0x0202      ORRS     R2,R2,#0x2
   \   0000003E   0x.... 0x....      LDR.W    R3,??DataTable6_1  ;; 0x400ff0c0
   \   00000042   0x601A             STR      R2,[R3, #+0]
     54              CLK_turn_0;// SCL//CLK/D0=0    
   \   00000044   0x.... 0x....      LDR.W    R2,??DataTable6_1  ;; 0x400ff0c0
   \   00000048   0x6812             LDR      R2,[R2, #+0]
   \   0000004A   0xF032 0x0202      BICS     R2,R2,#0x2
   \   0000004E   0x.... 0x....      LDR.W    R3,??DataTable6_1  ;; 0x400ff0c0
   \   00000052   0x601A             STR      R2,[R3, #+0]
     55              data<<=1;    
   \   00000054   0x0040             LSLS     R0,R0,#+1
   \                     ??OLED_WrDat_0: (+1)
   \   00000056   0x000A             MOVS     R2,R1
   \   00000058   0x1E51             SUBS     R1,R2,#+1
   \   0000005A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005C   0x2A00             CMP      R2,#+0
   \   0000005E   0xD00A             BEQ.N    ??OLED_WrDat_3
   \   00000060   0x0602             LSLS     R2,R0,#+24
   \   00000062   0xD5DF             BPL.N    ??OLED_WrDat_1
   \   00000064   0x.... 0x....      LDR.W    R2,??DataTable6  ;; 0x400ff080
   \   00000068   0x6812             LDR      R2,[R2, #+0]
   \   0000006A   0xF452 0x2280      ORRS     R2,R2,#0x40000
   \   0000006E   0x.... 0x....      LDR.W    R3,??DataTable6  ;; 0x400ff080
   \   00000072   0x601A             STR      R2,[R3, #+0]
   \   00000074   0xE7DE             B.N      ??OLED_WrDat_2
     56            }
     57          }
   \                     ??OLED_WrDat_3: (+1)
   \   00000076   0x4770             BX       LR               ;; return
     58          
     59          

   \                                 In section .text, align 2, keep-with-next
     60          void OLED_WrCmd(uint8 cmd)
     61          {
     62            uint8 i=8;
   \                     OLED_WrCmd: (+1)
   \   00000000   0x2108             MOVS     R1,#+8
     63            DC_turn_0;
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable6  ;; 0x400ff080
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF432 0x6200      BICS     R2,R2,#0x800
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable6  ;; 0x400ff080
   \   00000010   0x601A             STR      R2,[R3, #+0]
     64            CLK_turn_0;
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable6_1  ;; 0x400ff0c0
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0xF032 0x0202      BICS     R2,R2,#0x2
   \   0000001C   0x.... 0x....      LDR.W    R3,??DataTable6_1  ;; 0x400ff0c0
   \   00000020   0x601A             STR      R2,[R3, #+0]
   \   00000022   0xE018             B.N      ??OLED_WrCmd_0
     65            while(i--)
     66            {
     67              if(cmd&0x80){DATA_turn_1;}//SDA/D1=1
     68              else{DATA_turn_0;}//SDA/D1=0
   \                     ??OLED_WrCmd_1: (+1)
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable6  ;; 0x400ff080
   \   00000028   0x6812             LDR      R2,[R2, #+0]
   \   0000002A   0xF432 0x2280      BICS     R2,R2,#0x40000
   \   0000002E   0x.... 0x....      LDR.W    R3,??DataTable6  ;; 0x400ff080
   \   00000032   0x601A             STR      R2,[R3, #+0]
     69              CLK_turn_1;// SCL//CLK/D0=1
   \                     ??OLED_WrCmd_2: (+1)
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable6_1  ;; 0x400ff0c0
   \   00000038   0x6812             LDR      R2,[R2, #+0]
   \   0000003A   0xF052 0x0202      ORRS     R2,R2,#0x2
   \   0000003E   0x.... 0x....      LDR.W    R3,??DataTable6_1  ;; 0x400ff0c0
   \   00000042   0x601A             STR      R2,[R3, #+0]
     70              CLK_turn_0;// SCL//CLK/D0=0   
   \   00000044   0x.... 0x....      LDR.W    R2,??DataTable6_1  ;; 0x400ff0c0
   \   00000048   0x6812             LDR      R2,[R2, #+0]
   \   0000004A   0xF032 0x0202      BICS     R2,R2,#0x2
   \   0000004E   0x.... 0x....      LDR.W    R3,??DataTable6_1  ;; 0x400ff0c0
   \   00000052   0x601A             STR      R2,[R3, #+0]
     71              cmd<<=1;  
   \   00000054   0x0040             LSLS     R0,R0,#+1
   \                     ??OLED_WrCmd_0: (+1)
   \   00000056   0x000A             MOVS     R2,R1
   \   00000058   0x1E51             SUBS     R1,R2,#+1
   \   0000005A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005C   0x2A00             CMP      R2,#+0
   \   0000005E   0xD00A             BEQ.N    ??OLED_WrCmd_3
   \   00000060   0x0602             LSLS     R2,R0,#+24
   \   00000062   0xD5DF             BPL.N    ??OLED_WrCmd_1
   \   00000064   0x.... 0x....      LDR.W    R2,??DataTable6  ;; 0x400ff080
   \   00000068   0x6812             LDR      R2,[R2, #+0]
   \   0000006A   0xF452 0x2280      ORRS     R2,R2,#0x40000
   \   0000006E   0x.... 0x....      LDR.W    R3,??DataTable6  ;; 0x400ff080
   \   00000072   0x601A             STR      R2,[R3, #+0]
   \   00000074   0xE7DE             B.N      ??OLED_WrCmd_2
     72            }
     73          
     74          }
   \                     ??OLED_WrCmd_3: (+1)
   \   00000076   0x4770             BX       LR               ;; return
     75          
     76          //============================================================================//
     77          // º¯ÊýÃû³Æ£ºOLED_Set_Pos
     78          // º¯Êý¹¦ÄÜ£ºÈ·¶¨Î»ÖÃ
     79          // º¯ÊýÊäÈë²ÎÊý·¶Î§ x : 0 - 127 ; y : 0 - 7
     80          //============================================================================//

   \                                 In section .text, align 2, keep-with-next
     81          void OLED_Set_Pos(uint8 x, uint8 y)
     82          { 
   \                     OLED_Set_Pos: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
     83              /*
     84               ? Set the page start address of the target display location by command B0h to B7h.
     85               ? Set the lower start column address of pointer by command 00h~0Fh.
     86               ? Set the upper start column address of pointer by command 10h~1Fh.
     87               */
     88              OLED_WrCmd(0xb0+y);                         // ÉèÖÃÄ¿±êÒ³µØÖ·£¨yÖá£©
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       OLED_WrCmd
     89              OLED_WrCmd(((x&0xf0)>>4)|0x10);             // High
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x0920             LSRS     R0,R4,#+4
   \   00000012   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       OLED_WrCmd
     90              OLED_WrCmd(x&0x0f);                         // Low
   \   0000001C   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000020   0x.... 0x....      BL       OLED_WrCmd
     91          } 
   \   00000024   0xBD10             POP      {R4,PC}          ;; return
     92          
     93          /*
     94           * ÒÔÏÂÎª¹¦ÄÜº¯Êý
     95           *
     96           *
     97           */

   \                                 In section .text, align 2, keep-with-next
     98          void v_OLED_Fill(uint8 bmp_data)
     99          {
   \                     v_OLED_Fill: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    100            uint8 y,x;	
    101            for(y=0;y<8;y++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE008             B.N      ??v_OLED_Fill_0
    102            {
    103              OLED_WrCmd(0xb0+y);
    104              OLED_WrCmd(0x01);
    105              OLED_WrCmd(0x10);
    106              for(x=0;x<X_WIDTH;x++)
    107                OLED_WrDat(bmp_data);
   \                     ??v_OLED_Fill_1: (+1)
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       OLED_WrDat
   \   00000010   0x1C76             ADDS     R6,R6,#+1
   \                     ??v_OLED_Fill_2: (+1)
   \   00000012   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   0x2E80             CMP      R6,#+128
   \   00000016   0xDBF7             BLT.N    ??v_OLED_Fill_1
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \                     ??v_OLED_Fill_0: (+1)
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D08             CMP      R5,#+8
   \   0000001E   0xDA0C             BGE.N    ??v_OLED_Fill_3
   \   00000020   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       OLED_WrCmd
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       OLED_WrCmd
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x.... 0x....      BL       OLED_WrCmd
   \   00000036   0x2600             MOVS     R6,#+0
   \   00000038   0xE7EB             B.N      ??v_OLED_Fill_2
    108            }
    109          }
   \                     ??v_OLED_Fill_3: (+1)
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
    110          

   \                                 In section .text, align 2, keep-with-next
    111          void v_OLED_Init(void)        
    112          {
   \                     v_OLED_Init: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    113              SIM_SCGC5 |= (SIM_SCGC5_PORTD_MASK|SIM_SCGC5_PORTC_MASK);
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable6_2  ;; 0x40048038
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF450 0x50C0      ORRS     R0,R0,#0x1800
   \   0000000C   0x.... 0x....      LDR.W    R1,??DataTable6_2  ;; 0x40048038
   \   00000010   0x6008             STR      R0,[R1, #+0]
    114              PORTC_PCR11  |= 0x00000100u;
   \   00000012   0x.... 0x....      LDR.W    R0,??DataTable6_3  ;; 0x4004b02c
   \   00000016   0x6800             LDR      R0,[R0, #+0]
   \   00000018   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable6_3  ;; 0x4004b02c
   \   00000020   0x6008             STR      R0,[R1, #+0]
    115              PORTC_PCR15  |= 0x00000100u;
   \   00000022   0x.... 0x....      LDR.W    R0,??DataTable6_4  ;; 0x4004b03c
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000002C   0x.... 0x....      LDR.W    R1,??DataTable6_4  ;; 0x4004b03c
   \   00000030   0x6008             STR      R0,[R1, #+0]
    116              PORTC_PCR18  |= 0x00000100u;
   \   00000032   0x.... 0x....      LDR.W    R0,??DataTable6_5  ;; 0x4004b048
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable6_5  ;; 0x4004b048
   \   00000040   0x6008             STR      R0,[R1, #+0]
    117              PORTD_PCR1   |= 0x00000100u;
   \   00000042   0x.... 0x....      LDR.W    R0,??DataTable6_6  ;; 0x4004c004
   \   00000046   0x6800             LDR      R0,[R0, #+0]
   \   00000048   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000004C   0x.... 0x....      LDR.W    R1,??DataTable6_6  ;; 0x4004c004
   \   00000050   0x6008             STR      R0,[R1, #+0]
    118              DC_Init;
   \   00000052   0x.... 0x....      LDR.W    R0,??DataTable6_7  ;; 0x400ff094
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   0000005C   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x400ff094
   \   00000060   0x6008             STR      R0,[R1, #+0]
    119              CLK_Init;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable6_8  ;; 0x400ff0d4
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000006C   0x.... 0x....      LDR.W    R1,??DataTable6_8  ;; 0x400ff0d4
   \   00000070   0x6008             STR      R0,[R1, #+0]
    120              DATA_Init;
   \   00000072   0x.... 0x....      LDR.W    R0,??DataTable6_7  ;; 0x400ff094
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0xF450 0x2080      ORRS     R0,R0,#0x40000
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x400ff094
   \   00000080   0x6008             STR      R0,[R1, #+0]
    121              RST_Init;
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable6_7  ;; 0x400ff094
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable6_7  ;; 0x400ff094
   \   00000090   0x6008             STR      R0,[R1, #+0]
    122              // ÅäÖÃÐÅÏ¢
    123              CLK_turn_1;
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable6_1  ;; 0x400ff0c0
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000009C   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x400ff0c0
   \   000000A0   0x6008             STR      R0,[R1, #+0]
    124              DATA_turn_1;
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff080
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0xF450 0x2080      ORRS     R0,R0,#0x40000
   \   000000AC   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff080
   \   000000B0   0x6008             STR      R0,[R1, #+0]
    125              RST_turn_0;
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff080
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0xF430 0x4000      BICS     R0,R0,#0x8000
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff080
   \   000000C0   0x6008             STR      R0,[R1, #+0]
    126              DC_turn_1;
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff080
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0xF450 0x6000      ORRS     R0,R0,#0x800
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff080
   \   000000D0   0x6008             STR      R0,[R1, #+0]
    127              
    128              for(unsigned short int i = 0;i<1000;i++);//ÑÓÊ±
   \   000000D2   0x2000             MOVS     R0,#+0
   \   000000D4   0xE000             B.N      ??v_OLED_Init_0
   \                     ??v_OLED_Init_1: (+1)
   \   000000D6   0x1C40             ADDS     R0,R0,#+1
   \                     ??v_OLED_Init_0: (+1)
   \   000000D8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000DA   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000000DE   0xDBFA             BLT.N    ??v_OLED_Init_1
    129              //DELAY_MS(50);
    130              RST_turn_1;  
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable6  ;; 0x400ff080
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0xF450 0x4000      ORRS     R0,R0,#0x8000
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable6  ;; 0x400ff080
   \   000000EE   0x6008             STR      R0,[R1, #+0]
    131          
    132              OLED_WrCmd(0xae);//--turn off oled panel
   \   000000F0   0x20AE             MOVS     R0,#+174
   \   000000F2   0x.... 0x....      BL       OLED_WrCmd
    133              OLED_WrCmd(0x00);//---set low column address
   \   000000F6   0x2000             MOVS     R0,#+0
   \   000000F8   0x.... 0x....      BL       OLED_WrCmd
    134              OLED_WrCmd(0x10);//---set high column address
   \   000000FC   0x2010             MOVS     R0,#+16
   \   000000FE   0x.... 0x....      BL       OLED_WrCmd
    135              OLED_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   00000102   0x2040             MOVS     R0,#+64
   \   00000104   0x.... 0x....      BL       OLED_WrCmd
    136              OLED_WrCmd(0x81);//--set contrast control register
   \   00000108   0x2081             MOVS     R0,#+129
   \   0000010A   0x.... 0x....      BL       OLED_WrCmd
    137              OLED_WrCmd(0xcf); // Set SEG Output Current Brightness
   \   0000010E   0x20CF             MOVS     R0,#+207
   \   00000110   0x.... 0x....      BL       OLED_WrCmd
    138              OLED_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0×óÓÒ·´ÖÃ 0xa1Õý³£
   \   00000114   0x20A1             MOVS     R0,#+161
   \   00000116   0x.... 0x....      BL       OLED_WrCmd
    139              OLED_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0ÉÏÏÂ·´ÖÃ 0xc8Õý³£
   \   0000011A   0x20C8             MOVS     R0,#+200
   \   0000011C   0x.... 0x....      BL       OLED_WrCmd
    140              OLED_WrCmd(0xa6);//--set normal display
   \   00000120   0x20A6             MOVS     R0,#+166
   \   00000122   0x.... 0x....      BL       OLED_WrCmd
    141              OLED_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
   \   00000126   0x20A8             MOVS     R0,#+168
   \   00000128   0x.... 0x....      BL       OLED_WrCmd
    142              OLED_WrCmd(0x3f);//--1/64 duty
   \   0000012C   0x203F             MOVS     R0,#+63
   \   0000012E   0x.... 0x....      BL       OLED_WrCmd
    143              OLED_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   00000132   0x20D3             MOVS     R0,#+211
   \   00000134   0x.... 0x....      BL       OLED_WrCmd
    144              OLED_WrCmd(0x00);//-not offset
   \   00000138   0x2000             MOVS     R0,#+0
   \   0000013A   0x.... 0x....      BL       OLED_WrCmd
    145              OLED_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
   \   0000013E   0x20D5             MOVS     R0,#+213
   \   00000140   0x.... 0x....      BL       OLED_WrCmd
    146              OLED_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   00000144   0x2080             MOVS     R0,#+128
   \   00000146   0x.... 0x....      BL       OLED_WrCmd
    147              OLED_WrCmd(0xd9);//--set pre-charge period
   \   0000014A   0x20D9             MOVS     R0,#+217
   \   0000014C   0x.... 0x....      BL       OLED_WrCmd
    148              OLED_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   00000150   0x20F1             MOVS     R0,#+241
   \   00000152   0x.... 0x....      BL       OLED_WrCmd
    149              OLED_WrCmd(0xda);//--set com pins hardware configuration
   \   00000156   0x20DA             MOVS     R0,#+218
   \   00000158   0x.... 0x....      BL       OLED_WrCmd
    150              OLED_WrCmd(0x12);
   \   0000015C   0x2012             MOVS     R0,#+18
   \   0000015E   0x.... 0x....      BL       OLED_WrCmd
    151              OLED_WrCmd(0xdb);//--set vcomh
   \   00000162   0x20DB             MOVS     R0,#+219
   \   00000164   0x.... 0x....      BL       OLED_WrCmd
    152              OLED_WrCmd(0x40);//Set VCOM Deselect Level
   \   00000168   0x2040             MOVS     R0,#+64
   \   0000016A   0x.... 0x....      BL       OLED_WrCmd
    153              OLED_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   0000016E   0x2020             MOVS     R0,#+32
   \   00000170   0x.... 0x....      BL       OLED_WrCmd
    154              OLED_WrCmd(0x02);//
   \   00000174   0x2002             MOVS     R0,#+2
   \   00000176   0x.... 0x....      BL       OLED_WrCmd
    155              OLED_WrCmd(0x8d);//--set Charge Pump enable/disable
   \   0000017A   0x208D             MOVS     R0,#+141
   \   0000017C   0x.... 0x....      BL       OLED_WrCmd
    156              OLED_WrCmd(0x14);//--set(0x10) disable
   \   00000180   0x2014             MOVS     R0,#+20
   \   00000182   0x.... 0x....      BL       OLED_WrCmd
    157              OLED_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
   \   00000186   0x20A4             MOVS     R0,#+164
   \   00000188   0x.... 0x....      BL       OLED_WrCmd
    158              OLED_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
   \   0000018C   0x20A6             MOVS     R0,#+166
   \   0000018E   0x.... 0x....      BL       OLED_WrCmd
    159              OLED_WrCmd(0xaf);//--turn on oled panel
   \   00000192   0x20AF             MOVS     R0,#+175
   \   00000194   0x.... 0x....      BL       OLED_WrCmd
    160              v_OLED_Fill(0x00);  //³õÊ¼ÇåÆÁ
   \   00000198   0x2000             MOVS     R0,#+0
   \   0000019A   0x.... 0x....      BL       v_OLED_Fill
    161              OLED_Set_Pos(0,0);  
   \   0000019E   0x2100             MOVS     R1,#+0
   \   000001A0   0x2000             MOVS     R0,#+0
   \   000001A2   0x.... 0x....      BL       OLED_Set_Pos
    162          	
    163          } 
   \   000001A6   0xBD01             POP      {R0,PC}          ;; return
    164          
    165          //==============================================================
    166          //º¯ÊýÃû£ºOLED_P6x8Str(uint8 x,uint8 y,uint8 *p)
    167          //¹¦ÄÜÃèÊö£ºÐ´ÈëÒ»×é±ê×¼ASCII×Ö·û´®
    168          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄ×Ö·û´®
    169          //·µ»Ø£ºÎÞ
    170          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    171          void v_OLED_6x8Str(uint8 x,uint8 y,uint8 ch[])
    172          {
   \                     v_OLED_6x8Str: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    173              uint8 c=0,i=0,j=0;      
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE015             B.N      ??v_OLED_6x8Str_0
    174              while (ch[j]!='\0')
    175              {    
    176                  c =ch[j]-32;
    177                  if(x>126){x=0;y++;} // MOD(126,6) = 0
    178                  OLED_Set_Pos(x,y);    
    179                  for(i=0;i<6;i++){OLED_WrDat(C6x8[c][i]);}
   \                     ??v_OLED_6x8Str_1: (+1)
   \   00000016   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x2006             MOVS     R0,#+6
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000022   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000026   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000002A   0x.... 0x....      BL       OLED_WrDat
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??v_OLED_6x8Str_2: (+1)
   \   00000032   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000036   0xF1B8 0x0F06      CMP      R8,#+6
   \   0000003A   0xDBEC             BLT.N    ??v_OLED_6x8Str_1
    180                  x+=6;
   \   0000003C   0x1DA4             ADDS     R4,R4,#+6
    181                  j++;
   \   0000003E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??v_OLED_6x8Str_0: (+1)
   \   00000042   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000046   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD013             BEQ.N    ??v_OLED_6x8Str_3
   \   0000004E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000052   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000056   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C7F             CMP      R4,#+127
   \   0000005E   0xDB01             BLT.N    ??v_OLED_6x8Str_4
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0x1C6D             ADDS     R5,R5,#+1
   \                     ??v_OLED_6x8Str_4: (+1)
   \   00000064   0x0029             MOVS     R1,R5
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x.... 0x....      BL       OLED_Set_Pos
   \   00000070   0xF05F 0x0800      MOVS     R8,#+0
   \   00000074   0xE7DD             B.N      ??v_OLED_6x8Str_2
    182              }
    183          }
   \                     ??v_OLED_6x8Str_3: (+1)
   \   00000076   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    184          
    185          //==============================================================
    186          // º¯ÊýÃû£º void v_OLED_6x8Num(uint8 x, uint8 y,float float_num) 
    187          // ¹¦ÄÜÃèÊö£ºÏÔÊ¾5Î»Ð¡Êý¡¢ÕûÊý
    188          // ²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬xÎªºá×ø±ê0¡«127£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄÊý×Ö
    189          // x => Ò»¿ªÊ¼µÄÎ»ÖÃ
    190          // y => Ò»¿ªÊ¼µÄÎ»ÖÃ
    191          // show_scale => ÏÔÊ¾µÄÊý¾Ý³¤¶È£¨Ê®½øÖÆ£©
    192          //==============================================================
    193          // 128 / 2 = 64 ; 64 / 6 => 10 => ×î¶à 10 bits
    194          // 

   \                                 In section .text, align 2, keep-with-next
    195          uint8 b_OLED_6x8Num (uint16 X ,uint16 Y ,uint8 show_scale ,double num)
    196          {
   \                     b_OLED_6x8Num: (+1)
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0xB088             SUB      SP,SP,#+32
   \   00000006   0x4682             MOV      R10,R0
   \   00000008   0x000F             MOVS     R7,R1
   \   0000000A   0x0016             MOVS     R6,R2
    197              uint8 ch[] = "-0000000000.000000"; // 10+6+2 = 18 * 6 = 108
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable6_10
   \   00000012   0x2213             MOVS     R2,#+19
   \   00000014   0x.... 0x....      BL       __aeabi_memcpy4
    198                          //0123456789A 6
    199              uint8 ch_show[] = "          "; // ×Ö·ûÏÔÊ¾ // 1000000000
   \   00000018   0xA805             ADD      R0,SP,#+20
   \   0000001A   0x.... 0x....      LDR.W    R1,??DataTable6_11
   \   0000001E   0x220B             MOVS     R2,#+11
   \   00000020   0x.... 0x....      BL       __aeabi_memcpy4
    200                                   // -0.xxxxxx
    201              if(show_scale > 10){return 'F';}
   \   00000024   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000026   0x2E0B             CMP      R6,#+11
   \   00000028   0xDB01             BLT.N    ??b_OLED_6x8Num_0
   \   0000002A   0x2046             MOVS     R0,#+70
   \   0000002C   0xE1EA             B.N      ??b_OLED_6x8Num_1
    202              else if(show_scale < 10){ch_show[show_scale] = '\0';} // ÏÞÖÆÏÔÊ¾³¤¶È
   \                     ??b_OLED_6x8Num_0: (+1)
   \   0000002E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000030   0x2E0A             CMP      R6,#+10
   \   00000032   0xDA03             BGE.N    ??b_OLED_6x8Num_2
   \   00000034   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000036   0xA805             ADD      R0,SP,#+20
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x5431             STRB     R1,[R6, R0]
    203              uint8 Gaia_Div = 0;
   \                     ??b_OLED_6x8Num_2: (+1)
   \   0000003C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000040   0xE9DD 0x4510      LDRD     R4,R5,[SP, #+64]
    204              //========================================================================//
    205              // ·Ö¸îÖ¸Êý²¿·ÖÓëÐ¡Êý²¿·Ö
    206              sint32 num_Integer = (sint32)(num);
   \   00000044   0x0020             MOVS     R0,R4
   \   00000046   0x0029             MOVS     R1,R5
   \   00000048   0x.... 0x....      BL       __aeabi_d2iz
   \   0000004C   0x4681             MOV      R9,R0
    207              if(num >= 0.0){ch[0] = '+';}
   \   0000004E   0x0020             MOVS     R0,R4
   \   00000050   0x0029             MOVS     R1,R5
   \   00000052   0x2200             MOVS     R2,#+0
   \   00000054   0x2300             MOVS     R3,#+0
   \   00000056   0x.... 0x....      BL       __aeabi_cdrcmple
   \   0000005A   0xD803             BHI.N    ??b_OLED_6x8Num_3
   \   0000005C   0x202B             MOVS     R0,#+43
   \   0000005E   0xF88D 0x0000      STRB     R0,[SP, #+0]
   \   00000062   0xE002             B.N      ??b_OLED_6x8Num_4
    208              else{ch[0] = '-';}
   \                     ??b_OLED_6x8Num_3: (+1)
   \   00000064   0x202D             MOVS     R0,#+45
   \   00000066   0xF88D 0x0000      STRB     R0,[SP, #+0]
    209              num_Integer = __ABS(num_Integer);
   \                     ??b_OLED_6x8Num_4: (+1)
   \   0000006A   0xF1B9 0x0F00      CMP      R9,#+0
   \   0000006E   0xD502             BPL.N    ??b_OLED_6x8Num_5
   \   00000070   0xF1D9 0x0900      RSBS     R9,R9,#+0
   \   00000074   0xE7FF             B.N      ??b_OLED_6x8Num_6
    210              // Ö¸Êý²¿·Ö
    211              if(num_Integer >= 1000000000){Gaia_Div = 9;}else
   \                     ??b_OLED_6x8Num_5: (+1)
   \                     ??b_OLED_6x8Num_6: (+1)
   \   00000076   0x.... 0x....      LDR.W    R0,??DataTable6_12  ;; 0x3b9aca00
   \   0000007A   0x4581             CMP      R9,R0
   \   0000007C   0xDB02             BLT.N    ??b_OLED_6x8Num_7
   \   0000007E   0xF05F 0x0809      MOVS     R8,#+9
   \   00000082   0xE036             B.N      ??b_OLED_6x8Num_8
    212              if(num_Integer >=  100000000){Gaia_Div = 8;}else
   \                     ??b_OLED_6x8Num_7: (+1)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable6_13  ;; 0x5f5e100
   \   00000088   0x4581             CMP      R9,R0
   \   0000008A   0xDB02             BLT.N    ??b_OLED_6x8Num_9
   \   0000008C   0xF05F 0x0808      MOVS     R8,#+8
   \   00000090   0xE02F             B.N      ??b_OLED_6x8Num_8
    213              if(num_Integer >=   10000000){Gaia_Div = 7;}else
   \                     ??b_OLED_6x8Num_9: (+1)
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable6_14  ;; 0x989680
   \   00000096   0x4581             CMP      R9,R0
   \   00000098   0xDB02             BLT.N    ??b_OLED_6x8Num_10
   \   0000009A   0xF05F 0x0807      MOVS     R8,#+7
   \   0000009E   0xE028             B.N      ??b_OLED_6x8Num_8
    214              if(num_Integer >=    1000000){Gaia_Div = 6;}else
   \                     ??b_OLED_6x8Num_10: (+1)
   \   000000A0   0x.... 0x....      LDR.W    R0,??DataTable6_15  ;; 0xf4240
   \   000000A4   0x4581             CMP      R9,R0
   \   000000A6   0xDB02             BLT.N    ??b_OLED_6x8Num_11
   \   000000A8   0xF05F 0x0806      MOVS     R8,#+6
   \   000000AC   0xE021             B.N      ??b_OLED_6x8Num_8
    215              if(num_Integer >=     100000){Gaia_Div = 5;}else
   \                     ??b_OLED_6x8Num_11: (+1)
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable6_16  ;; 0x186a0
   \   000000B2   0x4581             CMP      R9,R0
   \   000000B4   0xDB02             BLT.N    ??b_OLED_6x8Num_12
   \   000000B6   0xF05F 0x0805      MOVS     R8,#+5
   \   000000BA   0xE01A             B.N      ??b_OLED_6x8Num_8
    216              if(num_Integer >=      10000){Gaia_Div = 4;}else
   \                     ??b_OLED_6x8Num_12: (+1)
   \   000000BC   0xF242 0x7010      MOVW     R0,#+10000
   \   000000C0   0x4581             CMP      R9,R0
   \   000000C2   0xDB02             BLT.N    ??b_OLED_6x8Num_13
   \   000000C4   0xF05F 0x0804      MOVS     R8,#+4
   \   000000C8   0xE013             B.N      ??b_OLED_6x8Num_8
    217              if(num_Integer >=       1000){Gaia_Div = 3;}else
   \                     ??b_OLED_6x8Num_13: (+1)
   \   000000CA   0xF5B9 0x7F7A      CMP      R9,#+1000
   \   000000CE   0xDB02             BLT.N    ??b_OLED_6x8Num_14
   \   000000D0   0xF05F 0x0803      MOVS     R8,#+3
   \   000000D4   0xE00D             B.N      ??b_OLED_6x8Num_8
    218              if(num_Integer >=        100){Gaia_Div = 2;}else
   \                     ??b_OLED_6x8Num_14: (+1)
   \   000000D6   0xF1B9 0x0F64      CMP      R9,#+100
   \   000000DA   0xDB02             BLT.N    ??b_OLED_6x8Num_15
   \   000000DC   0xF05F 0x0802      MOVS     R8,#+2
   \   000000E0   0xE007             B.N      ??b_OLED_6x8Num_8
    219              if(num_Integer >=         10){Gaia_Div = 1;}else // num_Integer >= 0
   \                     ??b_OLED_6x8Num_15: (+1)
   \   000000E2   0xF1B9 0x0F0A      CMP      R9,#+10
   \   000000E6   0xDB02             BLT.N    ??b_OLED_6x8Num_16
   \   000000E8   0xF05F 0x0801      MOVS     R8,#+1
   \   000000EC   0xE001             B.N      ??b_OLED_6x8Num_8
    220                                           {Gaia_Div = 0;}
   \                     ??b_OLED_6x8Num_16: (+1)
   \   000000EE   0xF05F 0x0800      MOVS     R8,#+0
    221              switch(Gaia_Div)
   \                     ??b_OLED_6x8Num_8: (+1)
   \   000000F2   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000000F6   0xF1B8 0x0F00      CMP      R8,#+0
   \   000000FA   0xF000 0x8084      BEQ.W    ??b_OLED_6x8Num_17
   \   000000FE   0xF1B8 0x0F02      CMP      R8,#+2
   \   00000102   0xD06A             BEQ.N    ??b_OLED_6x8Num_18
   \   00000104   0xD374             BCC.N    ??b_OLED_6x8Num_19
   \   00000106   0xF1B8 0x0F04      CMP      R8,#+4
   \   0000010A   0xD04C             BEQ.N    ??b_OLED_6x8Num_20
   \   0000010C   0xD358             BCC.N    ??b_OLED_6x8Num_21
   \   0000010E   0xF1B8 0x0F06      CMP      R8,#+6
   \   00000112   0xD02E             BEQ.N    ??b_OLED_6x8Num_22
   \   00000114   0xD33A             BCC.N    ??b_OLED_6x8Num_23
   \   00000116   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000011A   0xD010             BEQ.N    ??b_OLED_6x8Num_24
   \   0000011C   0xD31C             BCC.N    ??b_OLED_6x8Num_25
   \   0000011E   0xF1B8 0x0F09      CMP      R8,#+9
   \   00000122   0xD174             BNE.N    ??b_OLED_6x8Num_26
    222              {
    223                  case 9:ch[1] = num_Integer/1000000000 + '0';
   \                     ??b_OLED_6x8Num_27: (+1)
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable6_12  ;; 0x3b9aca00
   \   00000128   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   0000012C   0x3030             ADDS     R0,R0,#+48
   \   0000012E   0xF88D 0x0001      STRB     R0,[SP, #+1]
    224                   num_Integer = num_Integer%1000000000;
   \   00000132   0x.... 0x....      LDR.W    R0,??DataTable6_12  ;; 0x3b9aca00
   \   00000136   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   0000013A   0xFB00 0x9911      MLS      R9,R0,R1,R9
    225                 // break;
    226                  case 8:ch[2] = num_Integer/100000000 + '0';
   \                     ??b_OLED_6x8Num_24: (+1)
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable6_13  ;; 0x5f5e100
   \   00000142   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000146   0x3030             ADDS     R0,R0,#+48
   \   00000148   0xF88D 0x0002      STRB     R0,[SP, #+2]
    227                   num_Integer = num_Integer%100000000;
   \   0000014C   0x.... 0x....      LDR.W    R0,??DataTable6_13  ;; 0x5f5e100
   \   00000150   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000154   0xFB00 0x9911      MLS      R9,R0,R1,R9
    228                 // break;
    229                  case 7:ch[3] = num_Integer/10000000 + '0';
   \                     ??b_OLED_6x8Num_25: (+1)
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable6_14  ;; 0x989680
   \   0000015C   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000160   0x3030             ADDS     R0,R0,#+48
   \   00000162   0xF88D 0x0003      STRB     R0,[SP, #+3]
    230                   num_Integer = num_Integer%10000000;
   \   00000166   0x.... 0x....      LDR.W    R0,??DataTable6_14  ;; 0x989680
   \   0000016A   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   0000016E   0xFB00 0x9911      MLS      R9,R0,R1,R9
    231                 // break;
    232                  case 6:ch[4] = num_Integer/1000000 + '0';
   \                     ??b_OLED_6x8Num_22: (+1)
   \   00000172   0x.... 0x....      LDR.W    R0,??DataTable6_15  ;; 0xf4240
   \   00000176   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   0000017A   0x3030             ADDS     R0,R0,#+48
   \   0000017C   0xF88D 0x0004      STRB     R0,[SP, #+4]
    233                   num_Integer = num_Integer%1000000;
   \   00000180   0x.... 0x....      LDR.W    R0,??DataTable6_15  ;; 0xf4240
   \   00000184   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000188   0xFB00 0x9911      MLS      R9,R0,R1,R9
    234                 // break;
    235                  case 5:ch[5] = num_Integer/100000 + '0';
   \                     ??b_OLED_6x8Num_23: (+1)
   \   0000018C   0x.... 0x....      LDR.W    R0,??DataTable6_16  ;; 0x186a0
   \   00000190   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000194   0x3030             ADDS     R0,R0,#+48
   \   00000196   0xF88D 0x0005      STRB     R0,[SP, #+5]
    236                   num_Integer = num_Integer%100000;
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable6_16  ;; 0x186a0
   \   0000019E   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000001A2   0xFB00 0x9911      MLS      R9,R0,R1,R9
    237                 // break;
    238                  case 4:ch[6] = num_Integer/10000 + '0';
   \                     ??b_OLED_6x8Num_20: (+1)
   \   000001A6   0xF242 0x7010      MOVW     R0,#+10000
   \   000001AA   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000001AE   0x3030             ADDS     R0,R0,#+48
   \   000001B0   0xF88D 0x0006      STRB     R0,[SP, #+6]
    239                   num_Integer = num_Integer%10000;
   \   000001B4   0xF242 0x7010      MOVW     R0,#+10000
   \   000001B8   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000001BC   0xFB00 0x9911      MLS      R9,R0,R1,R9
    240                 // break;
    241                  case 3:ch[7] = num_Integer/1000 + '0';
   \                     ??b_OLED_6x8Num_21: (+1)
   \   000001C0   0xF44F 0x707A      MOV      R0,#+1000
   \   000001C4   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000001C8   0x3030             ADDS     R0,R0,#+48
   \   000001CA   0xF88D 0x0007      STRB     R0,[SP, #+7]
    242                   num_Integer = num_Integer%1000;
   \   000001CE   0xF44F 0x707A      MOV      R0,#+1000
   \   000001D2   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000001D6   0xFB00 0x9911      MLS      R9,R0,R1,R9
    243                 // break;
    244                  case 2:ch[8] = num_Integer/100 + '0';
   \                     ??b_OLED_6x8Num_18: (+1)
   \   000001DA   0x2064             MOVS     R0,#+100
   \   000001DC   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000001E0   0x3030             ADDS     R0,R0,#+48
   \   000001E2   0xF88D 0x0008      STRB     R0,[SP, #+8]
    245                   num_Integer = num_Integer%100;
   \   000001E6   0x2064             MOVS     R0,#+100
   \   000001E8   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000001EC   0xFB00 0x9911      MLS      R9,R0,R1,R9
    246                 // break;
    247                  case 1:ch[9] = num_Integer/10 + '0';
   \                     ??b_OLED_6x8Num_19: (+1)
   \   000001F0   0x200A             MOVS     R0,#+10
   \   000001F2   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000001F6   0x3030             ADDS     R0,R0,#+48
   \   000001F8   0xF88D 0x0009      STRB     R0,[SP, #+9]
    248                   num_Integer = num_Integer%10;
   \   000001FC   0x200A             MOVS     R0,#+10
   \   000001FE   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000202   0xFB00 0x9911      MLS      R9,R0,R1,R9
    249                 // break;
    250                  case 0:ch[10] = num_Integer + '0';
   \                     ??b_OLED_6x8Num_17: (+1)
   \   00000206   0xF119 0x0030      ADDS     R0,R9,#+48
   \   0000020A   0xF88D 0x000A      STRB     R0,[SP, #+10]
    251                  break;
    252              }
    253              num_Integer = __ABS((sint32)(num));
   \                     ??b_OLED_6x8Num_26: (+1)
   \   0000020E   0x0020             MOVS     R0,R4
   \   00000210   0x0029             MOVS     R1,R5
   \   00000212   0x.... 0x....      BL       __aeabi_d2iz
   \   00000216   0x2800             CMP      R0,#+0
   \   00000218   0xD506             BPL.N    ??b_OLED_6x8Num_28
   \   0000021A   0x0020             MOVS     R0,R4
   \   0000021C   0x0029             MOVS     R1,R5
   \   0000021E   0x.... 0x....      BL       __aeabi_d2iz
   \   00000222   0xF1D0 0x0900      RSBS     R9,R0,#+0
   \   00000226   0xE004             B.N      ??b_OLED_6x8Num_29
   \                     ??b_OLED_6x8Num_28: (+1)
   \   00000228   0x0020             MOVS     R0,R4
   \   0000022A   0x0029             MOVS     R1,R5
   \   0000022C   0x.... 0x....      BL       __aeabi_d2iz
   \   00000230   0x4681             MOV      R9,R0
    254              float num_Decimal = __ABS(num) - num_Integer;
   \                     ??b_OLED_6x8Num_29: (+1)
   \   00000232   0x0020             MOVS     R0,R4
   \   00000234   0x0029             MOVS     R1,R5
   \   00000236   0x2200             MOVS     R2,#+0
   \   00000238   0x2300             MOVS     R3,#+0
   \   0000023A   0x.... 0x....      BL       __aeabi_cdcmple
   \   0000023E   0xD202             BCS.N    ??b_OLED_6x8Num_30
   \   00000240   0xF095 0x4500      EORS     R5,R5,#0x80000000
   \   00000244   0xE7FF             B.N      ??b_OLED_6x8Num_31
   \                     ??b_OLED_6x8Num_30: (+1)
   \                     ??b_OLED_6x8Num_31: (+1)
   \   00000246   0x4648             MOV      R0,R9
   \   00000248   0x.... 0x....      BL       __aeabi_i2d
   \   0000024C   0x0002             MOVS     R2,R0
   \   0000024E   0x000B             MOVS     R3,R1
   \   00000250   0x0020             MOVS     R0,R4
   \   00000252   0x0029             MOVS     R1,R5
   \   00000254   0x.... 0x....      BL       __aeabi_dsub
   \   00000258   0x.... 0x....      BL       __aeabi_d2f
    255              // Ð¡Êý²¿·Ö´¦Àí
    256              num_Integer = (sint32)(num_Decimal * 1000000);
   \   0000025C   0x....             LDR.N    R1,??DataTable6_17  ;; 0x49742400
   \   0000025E   0x.... 0x....      BL       __aeabi_fmul
   \   00000262   0x.... 0x....      BL       __aeabi_f2iz
   \   00000266   0x4681             MOV      R9,R0
    257              if(num_Integer >=     100000){Gaia_Div = 5;}else
   \   00000268   0x....             LDR.N    R0,??DataTable6_16  ;; 0x186a0
   \   0000026A   0x4581             CMP      R9,R0
   \   0000026C   0xDB02             BLT.N    ??b_OLED_6x8Num_32
   \   0000026E   0xF05F 0x0805      MOVS     R8,#+5
   \   00000272   0xE01A             B.N      ??b_OLED_6x8Num_33
    258              if(num_Integer >=      10000){Gaia_Div = 4;}else
   \                     ??b_OLED_6x8Num_32: (+1)
   \   00000274   0xF242 0x7010      MOVW     R0,#+10000
   \   00000278   0x4581             CMP      R9,R0
   \   0000027A   0xDB02             BLT.N    ??b_OLED_6x8Num_34
   \   0000027C   0xF05F 0x0804      MOVS     R8,#+4
   \   00000280   0xE013             B.N      ??b_OLED_6x8Num_33
    259              if(num_Integer >=       1000){Gaia_Div = 3;}else
   \                     ??b_OLED_6x8Num_34: (+1)
   \   00000282   0xF5B9 0x7F7A      CMP      R9,#+1000
   \   00000286   0xDB02             BLT.N    ??b_OLED_6x8Num_35
   \   00000288   0xF05F 0x0803      MOVS     R8,#+3
   \   0000028C   0xE00D             B.N      ??b_OLED_6x8Num_33
    260              if(num_Integer >=        100){Gaia_Div = 2;}else
   \                     ??b_OLED_6x8Num_35: (+1)
   \   0000028E   0xF1B9 0x0F64      CMP      R9,#+100
   \   00000292   0xDB02             BLT.N    ??b_OLED_6x8Num_36
   \   00000294   0xF05F 0x0802      MOVS     R8,#+2
   \   00000298   0xE007             B.N      ??b_OLED_6x8Num_33
    261              if(num_Integer >=         10){Gaia_Div = 1;}else // num_Integer >= 0
   \                     ??b_OLED_6x8Num_36: (+1)
   \   0000029A   0xF1B9 0x0F0A      CMP      R9,#+10
   \   0000029E   0xDB02             BLT.N    ??b_OLED_6x8Num_37
   \   000002A0   0xF05F 0x0801      MOVS     R8,#+1
   \   000002A4   0xE001             B.N      ??b_OLED_6x8Num_33
    262                                           {Gaia_Div = 0;}
   \                     ??b_OLED_6x8Num_37: (+1)
   \   000002A6   0xF05F 0x0800      MOVS     R8,#+0
    263              switch(Gaia_Div)
   \                     ??b_OLED_6x8Num_33: (+1)
   \   000002AA   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000002AE   0xF1B8 0x0F00      CMP      R8,#+0
   \   000002B2   0xD045             BEQ.N    ??b_OLED_6x8Num_38
   \   000002B4   0xF1B8 0x0F02      CMP      R8,#+2
   \   000002B8   0xD02C             BEQ.N    ??b_OLED_6x8Num_39
   \   000002BA   0xD336             BCC.N    ??b_OLED_6x8Num_40
   \   000002BC   0xF1B8 0x0F04      CMP      R8,#+4
   \   000002C0   0xD00E             BEQ.N    ??b_OLED_6x8Num_41
   \   000002C2   0xD31A             BCC.N    ??b_OLED_6x8Num_42
   \   000002C4   0xF1B8 0x0F05      CMP      R8,#+5
   \   000002C8   0xD13E             BNE.N    ??b_OLED_6x8Num_43
    264              {
    265                  case 5:ch[12] = num_Integer/100000 + '0';
   \                     ??b_OLED_6x8Num_44: (+1)
   \   000002CA   0x....             LDR.N    R0,??DataTable6_16  ;; 0x186a0
   \   000002CC   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000002D0   0x3030             ADDS     R0,R0,#+48
   \   000002D2   0xF88D 0x000C      STRB     R0,[SP, #+12]
    266                   num_Integer = num_Integer%100000;
   \   000002D6   0x....             LDR.N    R0,??DataTable6_16  ;; 0x186a0
   \   000002D8   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000002DC   0xFB00 0x9911      MLS      R9,R0,R1,R9
    267                 // break;
    268                  case 4:ch[13] = num_Integer/10000 + '0';
   \                     ??b_OLED_6x8Num_41: (+1)
   \   000002E0   0xF242 0x7010      MOVW     R0,#+10000
   \   000002E4   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   000002E8   0x3030             ADDS     R0,R0,#+48
   \   000002EA   0xF88D 0x000D      STRB     R0,[SP, #+13]
    269                   num_Integer = num_Integer%10000;
   \   000002EE   0xF242 0x7010      MOVW     R0,#+10000
   \   000002F2   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   000002F6   0xFB00 0x9911      MLS      R9,R0,R1,R9
    270                 // break;
    271                  case 3:ch[14] = num_Integer/1000 + '0';
   \                     ??b_OLED_6x8Num_42: (+1)
   \   000002FA   0xF44F 0x707A      MOV      R0,#+1000
   \   000002FE   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000302   0x3030             ADDS     R0,R0,#+48
   \   00000304   0xF88D 0x000E      STRB     R0,[SP, #+14]
    272                   num_Integer = num_Integer%1000;
   \   00000308   0xF44F 0x707A      MOV      R0,#+1000
   \   0000030C   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000310   0xFB00 0x9911      MLS      R9,R0,R1,R9
    273                 // break;
    274                  case 2:ch[15] = num_Integer/100 + '0';
   \                     ??b_OLED_6x8Num_39: (+1)
   \   00000314   0x2064             MOVS     R0,#+100
   \   00000316   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   0000031A   0x3030             ADDS     R0,R0,#+48
   \   0000031C   0xF88D 0x000F      STRB     R0,[SP, #+15]
    275                   num_Integer = num_Integer%100;
   \   00000320   0x2064             MOVS     R0,#+100
   \   00000322   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   00000326   0xFB00 0x9911      MLS      R9,R0,R1,R9
    276                 // break;
    277                  case 1:ch[16] = num_Integer/10 + '0';
   \                     ??b_OLED_6x8Num_40: (+1)
   \   0000032A   0x200A             MOVS     R0,#+10
   \   0000032C   0xFB99 0xF0F0      SDIV     R0,R9,R0
   \   00000330   0x3030             ADDS     R0,R0,#+48
   \   00000332   0xF88D 0x0010      STRB     R0,[SP, #+16]
    278                   num_Integer = num_Integer%10;
   \   00000336   0x200A             MOVS     R0,#+10
   \   00000338   0xFB99 0xF1F0      SDIV     R1,R9,R0
   \   0000033C   0xFB00 0x9911      MLS      R9,R0,R1,R9
    279                 // break;
    280                  case 0:ch[17] = num_Integer + '0';
   \                     ??b_OLED_6x8Num_38: (+1)
   \   00000340   0xF119 0x0030      ADDS     R0,R9,#+48
   \   00000344   0xF88D 0x0011      STRB     R0,[SP, #+17]
    281                  break;
    282              }
    283              //========================================================================//
    284              // ÏÔÊ¾²¿·Ö
    285              uint8 Integer_length = 0; // ÕûÊý²¿·Ö³¤¶È
   \                     ??b_OLED_6x8Num_43: (+1)
   \   00000348   0x2000             MOVS     R0,#+0
    286              for(uint8 loop = 1;loop < 11;loop ++)
   \   0000034A   0x2101             MOVS     R1,#+1
   \   0000034C   0xE004             B.N      ??b_OLED_6x8Num_45
    287              {
    288                  if('0' != ch[loop])
    289                  {
    290                      Integer_length = 11 - loop;
    291                      break;
    292                  }
    293                  if(10 == loop)
   \                     ??b_OLED_6x8Num_46: (+1)
   \   0000034E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000350   0x290A             CMP      R1,#+10
   \   00000352   0xD100             BNE.N    ??b_OLED_6x8Num_47
    294                  {Integer_length++;}
   \   00000354   0x1C40             ADDS     R0,R0,#+1
   \                     ??b_OLED_6x8Num_47: (+1)
   \   00000356   0x1C49             ADDS     R1,R1,#+1
   \                     ??b_OLED_6x8Num_45: (+1)
   \   00000358   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000035A   0x290B             CMP      R1,#+11
   \   0000035C   0xDA06             BGE.N    ??b_OLED_6x8Num_48
   \   0000035E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000360   0xAA00             ADD      R2,SP,#+0
   \   00000362   0x5C8A             LDRB     R2,[R1, R2]
   \   00000364   0x2A30             CMP      R2,#+48
   \   00000366   0xD0F2             BEQ.N    ??b_OLED_6x8Num_46
   \   00000368   0xF1D1 0x000B      RSBS     R0,R1,#+11
    295              }
    296              // num_Integer ÔÝÎªÆðÊ¼Î»ÖÃ
    297              num_Integer = 11 - Integer_length;
   \                     ??b_OLED_6x8Num_48: (+1)
   \   0000036C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000036E   0xF1D0 0x090B      RSBS     R9,R0,#+11
    298              if('-' == ch[0]){++Integer_length;} // ÏÔÊ¾³¤¶ÈÔö¼Ó
   \   00000372   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   00000376   0x292D             CMP      R1,#+45
   \   00000378   0xD100             BNE.N    ??b_OLED_6x8Num_49
   \   0000037A   0x1C40             ADDS     R0,R0,#+1
    299              if(Integer_length > show_scale){return 'F';} // ÏÔÊ¾ÏÞ·ù
   \                     ??b_OLED_6x8Num_49: (+1)
   \   0000037C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000037E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000380   0x4286             CMP      R6,R0
   \   00000382   0xD201             BCS.N    ??b_OLED_6x8Num_50
   \   00000384   0x2046             MOVS     R0,#+70
   \   00000386   0xE03D             B.N      ??b_OLED_6x8Num_1
    300              if(show_scale - Integer_length > 1)
   \                     ??b_OLED_6x8Num_50: (+1)
   \   00000388   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000038A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000038C   0x1A31             SUBS     R1,R6,R0
   \   0000038E   0x2902             CMP      R1,#+2
   \   00000390   0xDB13             BLT.N    ??b_OLED_6x8Num_51
    301              { // °üº¬Ð¡Êý²¿·Ö
    302                  uint8 loop = 12 + show_scale - Integer_length - 1 - 1;
   \   00000392   0xF116 0x010C      ADDS     R1,R6,#+12
   \   00000396   0x1A08             SUBS     R0,R1,R0
   \   00000398   0x1E81             SUBS     R1,R0,#+2
    303                  Integer_length = show_scale; // °üÀ¨Ð¡Êý²¿·Ö
   \   0000039A   0x0030             MOVS     R0,R6
   \   0000039C   0xE001             B.N      ??b_OLED_6x8Num_52
    304                  for(;loop > 11;loop --)
    305                  {
    306                      if('0' != ch[loop]){break;} // ÇåÁã²Ù×÷
    307                      Integer_length--; // ³¤¶ÈµÝ¼õ
   \                     ??b_OLED_6x8Num_53: (+1)
   \   0000039E   0x1E40             SUBS     R0,R0,#+1
   \   000003A0   0x1E49             SUBS     R1,R1,#+1
   \                     ??b_OLED_6x8Num_52: (+1)
   \   000003A2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003A4   0x290C             CMP      R1,#+12
   \   000003A6   0xDB04             BLT.N    ??b_OLED_6x8Num_54
   \   000003A8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003AA   0xAA00             ADD      R2,SP,#+0
   \   000003AC   0x5C8A             LDRB     R2,[R1, R2]
   \   000003AE   0x2A30             CMP      R2,#+48
   \   000003B0   0xD0F5             BEQ.N    ??b_OLED_6x8Num_53
    308                  }
    309                  if(11 == loop)
   \                     ??b_OLED_6x8Num_54: (+1)
   \   000003B2   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003B4   0x290B             CMP      R1,#+11
   \   000003B6   0xD100             BNE.N    ??b_OLED_6x8Num_51
    310                  {Integer_length--;} // ³¤¶È¼õÒ»
   \   000003B8   0x1E40             SUBS     R0,R0,#+1
    311              }
    312              //========================================================================//
    313              // ×Ö·ûÊä³ö²¿·Ö // Gaia_Div => ÔÝÓÃÎªÆðÊ¼Î»ÖÃ
    314              Gaia_Div = 0;
   \                     ??b_OLED_6x8Num_51: (+1)
   \   000003BA   0xF05F 0x0800      MOVS     R8,#+0
    315              if('-' == ch[0]){ch_show[0] = '-';Gaia_Div = 1;}
   \   000003BE   0xF89D 0x1000      LDRB     R1,[SP, #+0]
   \   000003C2   0x292D             CMP      R1,#+45
   \   000003C4   0xD104             BNE.N    ??b_OLED_6x8Num_55
   \   000003C6   0x212D             MOVS     R1,#+45
   \   000003C8   0xF88D 0x1014      STRB     R1,[SP, #+20]
   \   000003CC   0xF05F 0x0801      MOVS     R8,#+1
    316              for(uint8 loop = Gaia_Div;loop < Integer_length;loop ++)
   \                     ??b_OLED_6x8Num_55: (+1)
   \   000003D0   0x4641             MOV      R1,R8
   \   000003D2   0xE00B             B.N      ??b_OLED_6x8Num_56
    317              {
    318                  ch_show[loop] = ch[loop + num_Integer - Gaia_Div];
   \                     ??b_OLED_6x8Num_57: (+1)
   \   000003D4   0xFA59 0xF281      UXTAB    R2,R9,R1
   \   000003D8   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   000003DC   0xEBB2 0x0208      SUBS     R2,R2,R8
   \   000003E0   0xAB00             ADD      R3,SP,#+0
   \   000003E2   0x5CD2             LDRB     R2,[R2, R3]
   \   000003E4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003E6   0xAB05             ADD      R3,SP,#+20
   \   000003E8   0x54CA             STRB     R2,[R1, R3]
    319              }
   \   000003EA   0x1C49             ADDS     R1,R1,#+1
   \                     ??b_OLED_6x8Num_56: (+1)
   \   000003EC   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003EE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003F0   0x4281             CMP      R1,R0
   \   000003F2   0xD3EF             BCC.N    ??b_OLED_6x8Num_57
    320              v_OLED_6x8Str(X,Y,ch_show);
   \   000003F4   0xAA05             ADD      R2,SP,#+20
   \   000003F6   0x0039             MOVS     R1,R7
   \   000003F8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   000003FA   0x4650             MOV      R0,R10
   \   000003FC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000003FE   0x.... 0x....      BL       v_OLED_6x8Str
    321              return 'T';
   \   00000402   0x2054             MOVS     R0,#+84
   \                     ??b_OLED_6x8Num_1: (+1)
   \   00000404   0xB008             ADD      SP,SP,#+32
   \   00000406   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    322          }
    323          
    324          //==============================================================
    325          //º¯ÊýÃû£º void v_OLED_showU8(uint8 x, uint8 y,float float_num) 
    326          //¹¦ÄÜÃèÊö£ºÏÔÊ¾5Î»Ð¡Êý¡¢ÕûÊý
    327          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬xÎªºá×ø±ê0¡«127£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄÊý×Ö
    328          //·µ»Ø£ºÎÞ
    329          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    330          void v_OLED_showU8 ( uint8 x , uint8 y , uint8 U8num )
    331          {
   \                     v_OLED_showU8: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    332              uint8 show_num = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
    333              for(uint8 loop = 0;loop <= 7;loop++)
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xE013             B.N      ??v_OLED_showU8_0
    334              {
    335                  show_num = (((U8num << loop) & 0x80) >> 7)&0x01;
    336                  show_num = show_num + 16; // ÏÔÊ¾»ù´¡»¯
    337                  OLED_Set_Pos(x + 6*loop,y); 
    338                  for(uint8 inter=0;inter<6;inter++)
    339                  {
    340                      OLED_WrDat(C6x8[show_num][inter]); 
   \                     ??v_OLED_showU8_1: (+1)
   \   00000012   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000016   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000018   0x2006             MOVS     R0,#+6
   \   0000001A   0x....             LDR.N    R1,??DataTable6_9
   \   0000001C   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000020   0xF819 0x0000      LDRB     R0,[R9, R0]
   \   00000024   0x.... 0x....      BL       OLED_WrDat
    341                  }
   \   00000028   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??v_OLED_showU8_2: (+1)
   \   0000002C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000030   0xF1B9 0x0F06      CMP      R9,#+6
   \   00000034   0xDBED             BLT.N    ??v_OLED_showU8_1
   \   00000036   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??v_OLED_showU8_0: (+1)
   \   0000003A   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000003E   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000042   0xDA15             BGE.N    ??v_OLED_showU8_3
   \   00000044   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000046   0xFA16 0xF008      LSLS     R0,R6,R8
   \   0000004A   0x11C0             ASRS     R0,R0,#+7
   \   0000004C   0xF010 0x0701      ANDS     R7,R0,#0x1
   \   00000050   0x3710             ADDS     R7,R7,#+16
   \   00000052   0x0029             MOVS     R1,R5
   \   00000054   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000056   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000005A   0x2006             MOVS     R0,#+6
   \   0000005C   0xFB00 0xF008      MUL      R0,R0,R8
   \   00000060   0xFA50 0xF084      UXTAB    R0,R0,R4
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x.... 0x....      BL       OLED_Set_Pos
   \   0000006A   0xF05F 0x0900      MOVS     R9,#+0
   \   0000006E   0xE7DD             B.N      ??v_OLED_showU8_2
    342              }
    343          }
   \                     ??v_OLED_showU8_3: (+1)
   \   00000070   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    344          
    345          

   \                                 In section .text, align 2, keep-with-next
    346          void OLED_PutPixel(uint8 x,uint8 y)
    347          {
   \                     OLED_PutPixel: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    348          	uint8 data1;  //data1µ±Ç°µãµÄÊý¾Ý 
    349          	data1 = 0x01<<(y%8); 	
   \   00000004   0x2001             MOVS     R0,#+1
   \   00000006   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000008   0x2208             MOVS     R2,#+8
   \   0000000A   0xFB91 0xF3F2      SDIV     R3,R1,R2
   \   0000000E   0xFB03 0x1312      MLS      R3,R3,R2,R1
   \   00000012   0xFA10 0xF503      LSLS     R5,R0,R3
    350          	OLED_WrCmd(0xb0+(y>>3));//ÉèÖÃÒ³ºÅ£¬yÓÒÒÆ3Î»Ïàµ±ÓÚ³ýÒÔ8£¬¼´ÓÉÐÐºÅµÃ³öÒ³ºÅ
   \   00000016   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000018   0x08C8             LSRS     R0,R1,#+3
   \   0000001A   0x3850             SUBS     R0,R0,#+80
   \   0000001C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000001E   0x.... 0x....      BL       OLED_WrCmd
    351          	OLED_WrCmd(((x&0xf0)>>4)|0x10);//ÉèÖÃÁÐºÅµÄ¸ß4Î»
   \   00000022   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000024   0x0920             LSRS     R0,R4,#+4
   \   00000026   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       OLED_WrCmd
    352          	OLED_WrCmd(x&0x0f);//ÉèÖÃÁÐºÅµÄµÍ4Î»
   \   00000030   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000034   0x.... 0x....      BL       OLED_WrCmd
    353          	OLED_WrDat(data1); 	 	
   \   00000038   0x0028             MOVS     R0,R5
   \   0000003A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003C   0x.... 0x....      BL       OLED_WrDat
    354          }
   \   00000040   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    355          void OLED_showCCD(uint8 CCD_Pixel_org[])
    356          {
   \                     OLED_showCCD: (+1)
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0xB0A0             SUB      SP,SP,#+128
   \   00000006   0x0004             MOVS     R4,R0
    357            uint8 max_Pixel = 0;//Êý×éÖÐµÄ×î´óÖµ
   \   00000008   0x2500             MOVS     R5,#+0
    358            uint8 temp = 0;//ÁÙÊ±´æ´¢ÓÃ
   \   0000000A   0x2700             MOVS     R7,#+0
    359            uint8 CCD_Pixel[128] = {0};
   \   0000000C   0xA800             ADD      R0,SP,#+0
   \   0000000E   0x2180             MOVS     R1,#+128
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
    360            uint8 i = 0 ,j = 0;
   \   00000014   0x2600             MOVS     R6,#+0
   \   00000016   0x2100             MOVS     R1,#+0
    361            float temp_float = 0,temp_float2 = 0;
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0xF05F 0x0800      MOVS     R8,#+0
    362            
    363            for(i=0;i<128;i++)//½«CCDÊý¾Ý´æÈëÁÙÊ±Êý×é£¬·ÀÖ¹ÖÐ¶ÏÔì³ÉÏÔÊ¾´íÎó
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x0016             MOVS     R6,R2
   \   00000022   0xE005             B.N      ??OLED_showCCD_0
    364            {
    365              CCD_Pixel[i] = CCD_Pixel_org[i];
   \                     ??OLED_showCCD_1: (+1)
   \   00000024   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000026   0x5D30             LDRB     R0,[R6, R4]
   \   00000028   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002A   0xA900             ADD      R1,SP,#+0
   \   0000002C   0x5470             STRB     R0,[R6, R1]
    366            }
   \   0000002E   0x1C76             ADDS     R6,R6,#+1
   \                     ??OLED_showCCD_0: (+1)
   \   00000030   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000032   0x2E80             CMP      R6,#+128
   \   00000034   0xDBF6             BLT.N    ??OLED_showCCD_1
    367            for(i=0;i<128;i++)
   \   00000036   0x2600             MOVS     R6,#+0
   \   00000038   0xE009             B.N      ??OLED_showCCD_2
    368            {
    369              if(CCD_Pixel[i] > max_Pixel){max_Pixel = CCD_Pixel[i];}//Çó³ö×î´óÖµ
   \                     ??OLED_showCCD_3: (+1)
   \   0000003A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000003C   0xA800             ADD      R0,SP,#+0
   \   0000003E   0x5C30             LDRB     R0,[R6, R0]
   \   00000040   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000042   0x4285             CMP      R5,R0
   \   00000044   0xD202             BCS.N    ??OLED_showCCD_4
   \   00000046   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000048   0xA800             ADD      R0,SP,#+0
   \   0000004A   0x5C35             LDRB     R5,[R6, R0]
    370            }
   \                     ??OLED_showCCD_4: (+1)
   \   0000004C   0x1C76             ADDS     R6,R6,#+1
   \                     ??OLED_showCCD_2: (+1)
   \   0000004E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000050   0x2E80             CMP      R6,#+128
   \   00000052   0xDBF2             BLT.N    ??OLED_showCCD_3
    371            //max_Pixel = 255;//×¢ÊÍ´ËÐÐ¿ÉÒÔ¶¯Ì¬ÏÔÊ¾×î´óÖµ£¬·ñÔò½«ÒÔ¾ø¶ÔÖµ·½Ê½ÏÔÊ¾Í¼ÐÎ
    372          
    373            temp_float2 = max_Pixel;if(temp_float2 == 0) temp_float2 = 1;//·À³ý·¨´íÎó
   \   00000054   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0x.... 0x....      BL       __aeabi_ui2f
   \   0000005C   0x4680             MOV      R8,R0
   \   0000005E   0x4640             MOV      R0,R8
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000066   0xD101             BNE.N    ??OLED_showCCD_5
   \   00000068   0xF05F 0x587E      MOVS     R8,#+1065353216
    374            
    375            v_OLED_Fill(0x00);  //ÇåÆÁ
   \                     ??OLED_showCCD_5: (+1)
   \   0000006C   0x2000             MOVS     R0,#+0
   \   0000006E   0x.... 0x....      BL       v_OLED_Fill
    376          
    377            for(i=0;i<128;i++)
   \   00000072   0x2600             MOVS     R6,#+0
   \   00000074   0xE016             B.N      ??OLED_showCCD_6
    378            {
    379              temp_float = CCD_Pixel[i];
   \                     ??OLED_showCCD_7: (+1)
   \   00000076   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000078   0xA800             ADD      R0,SP,#+0
   \   0000007A   0x5C30             LDRB     R0,[R6, R0]
   \   0000007C   0x.... 0x....      BL       __aeabi_ui2f
    380              temp_float = temp_float/temp_float2*63;//Çó³ö°´±ÈÀýµÄYÖµ
   \   00000080   0x4641             MOV      R1,R8
   \   00000082   0x.... 0x....      BL       __aeabi_fdiv
   \   00000086   0x....             LDR.N    R1,??DataTable6_18  ;; 0x427c0000
   \   00000088   0x.... 0x....      BL       __aeabi_fmul
    381              
    382              temp = (uint8) temp_float;
   \   0000008C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000090   0x0007             MOVS     R7,R0
    383              j = (uint8) temp;//½«YÖµ×ª»»Îª×Ö½ÚÐÍÊý
   \   00000092   0x0039             MOVS     R1,R7
    384              
    385              OLED_PutPixel(i,(63-j));//Êä³öÔ­Ê¼ÏñËØµã
   \   00000094   0xF1D1 0x013F      RSBS     R1,R1,#+63
   \   00000098   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000009A   0x0030             MOVS     R0,R6
   \   0000009C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009E   0x.... 0x....      BL       OLED_PutPixel
    386            }
   \   000000A2   0x1C76             ADDS     R6,R6,#+1
   \                     ??OLED_showCCD_6: (+1)
   \   000000A4   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   000000A6   0x2E80             CMP      R6,#+128
   \   000000A8   0xDBE5             BLT.N    ??OLED_showCCD_7
    387            
    388          }
   \   000000AA   0xB020             ADD      SP,SP,#+128
   \   000000AC   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x400FF080         DC32     0x400ff080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x400FF0C0         DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x4004B02C         DC32     0x4004b02c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x4004B03C         DC32     0x4004b03c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x4004B048         DC32     0x4004b048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x4004C004         DC32     0x4004c004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x400FF094         DC32     0x400ff094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x400FF0D4         DC32     0x400ff0d4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     C6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x........         DC32     `?<Constant "-0000000000.000000">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     `?<Constant "          ">`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x3B9ACA00         DC32     0x3b9aca00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x05F5E100         DC32     0x5f5e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x00989680         DC32     0x989680

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x000F4240         DC32     0xf4240

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x000186A0         DC32     0x186a0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x49742400         DC32     0x49742400

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x427C0000         DC32     0x427c0000

   \                                 In section .rodata, align 4
   \                     `?<Constant "-0000000000.000000">`:
   \   00000000   0x2D 0x30          DC8 "-0000000000.000000"
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x2E    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x30 0x30    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     `?<Constant "          ">`:
   \   00000000   0x20 0x20          DC8 "          "
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000011   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000021   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000031   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000041   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000051   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000061   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000071   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   OLED_PutPixel
        16   -> OLED_WrCmd
        16   -> OLED_WrDat
       8   OLED_Set_Pos
         8   -> OLED_WrCmd
       0   OLED_WrCmd
       0   OLED_WrDat
     152   OLED_showCCD
       152   -> OLED_PutPixel
       152   -> __aeabi_cfcmpeq
       152   -> __aeabi_f2iz
       152   -> __aeabi_fdiv
       152   -> __aeabi_fmul
       152   -> __aeabi_memclr4
       152   -> __aeabi_ui2f
       152   -> v_OLED_Fill
      64   b_OLED_6x8Num
        64   -> __aeabi_cdcmple
        64   -> __aeabi_cdrcmple
        64   -> __aeabi_d2f
        64   -> __aeabi_d2iz
        64   -> __aeabi_dsub
        64   -> __aeabi_f2iz
        64   -> __aeabi_fmul
        64   -> __aeabi_i2d
        64   -> __aeabi_memcpy4
        64   -> v_OLED_6x8Str
      32   v_OLED_6x8Str
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat
      16   v_OLED_Fill
        16   -> OLED_WrCmd
        16   -> OLED_WrDat
       8   v_OLED_Init
         8   -> OLED_Set_Pos
         8   -> OLED_WrCmd
         8   -> v_OLED_Fill
      32   v_OLED_showU8
        32   -> OLED_Set_Pos
        32   -> OLED_WrDat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant "          ">
      20  ?<Constant "-0000000000.000000">
     128  ?<Constant {0}>
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
       4  ??DataTable6_7
       4  ??DataTable6_8
       4  ??DataTable6_9
      66  OLED_PutPixel
      38  OLED_Set_Pos
     120  OLED_WrCmd
     120  OLED_WrDat
     176  OLED_showCCD
    1034  b_OLED_6x8Num
     122  v_OLED_6x8Str
      60  v_OLED_Fill
     424  v_OLED_Init
     116  v_OLED_showU8

 
   160 bytes in section .rodata
 2 352 bytes in section .text
 
 2 352 bytes of CODE  memory
   160 bytes of CONST memory

Errors: none
Warnings: none
