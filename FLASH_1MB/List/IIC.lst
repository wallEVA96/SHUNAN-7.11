###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      04/Jul/2015  06:49:10 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µ #
#                    ÚÒ»´ú°å\Library\IIC.c                                    #
#    Command line =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µ #
#                    ÚÒ»´ú°å\Library\IIC.c -D IAR -D TWR_K60F120M -lCN        #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µ #
#                    ÚÒ»´ú°å\FLASH_1MB\List\ -lB                              #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µ #
#                    ÚÒ»´ú°å\FLASH_1MB\List\ -o D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³ #
#                    °µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µÚÒ»´ú°å\FLASH_1MB\Obj\        #
#                    --no_cse --no_unroll --no_inline --no_code_motion        #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=VFPv4_sp        #
#                    --dlib_config "C:\Program Files (x86)\IAR                #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈ #
#                    ýºÅ-ÆðÔ´-µÚÒ»´ú°å\ -I D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýº #
#                    Å\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µÚÒ»´ú°å\Library\ -I                #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µ #
#                    ÚÒ»´ú°å\Library\BlessedAlien\ -I                         #
#                    D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µ #
#                    ÚÒ»´ú°å\ShunAn_Panel\ -Ol --use_c++_inline               #
#    List file    =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µ #
#                    ÚÒ»´ú°å\FLASH_1MB\List\IIC.lst                           #
#    Object file  =  D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µ #
#                    ÚÒ»´ú°å\FLASH_1MB\Obj\IIC.o                              #
#                                                                             #
#                                                                             #
###############################################################################

D:\´´×÷ÊÒ\·ÉË¼¿¨¶ûÖÇÄÜÐ¡³µ\Ë³°µÈýºÅ\´úÂë\Ë³°µÈýºÅ-ÆðÔ´-µÚÒ»´ú°å\Library\IIC.c
      1          #include "arm_cm4.h"
      2          #include "MK60F15.h"
      3          #include "ShunAn_Lib.h"
      4          #include "start_ShunAn.h"
      5          
      6          #include "IIC.h"
      7          
      8          /***********************************************************************************************************/
      9          /***********************************************************************************************************/
     10          /***********************************************************************************************************/
     11          /***********************************************************************************************************/
     12          /***********************************************************************************************************/
     13          // K60 Ó²¼þÊµÏÖ IIC
     14          /******************************************************************************/
     15          // IIC_Start
     16          #define IIC_Start(IIC_ADDR)             IIC_ADDR->C1 |= I2C_C1_TX_MASK;\
     17                                                  IIC_ADDR->C1 |= I2C_C1_MST_MASK
     18          /******************************************************************************/
     19          // IIC_Stop
     20          #define IIC_Stop(IIC_ADDR)              IIC_ADDR->C1 &= ~I2C_C1_MST_MASK;\
     21                                                  IIC_ADDR->C1 &= ~I2C_C1_TX_MASK; \
     22                                                  while(0!=(IIC_ADDR->S & I2C_S_BUSY_MASK)){}
     23          /******************************************************************************/
     24          // IIC_Wait
     25          #define IIC_Wait(IIC_ADDR)              {uint32 delay = 120000;\
     26                                                  while((0==(IIC_ADDR->S & I2C_S_IICIF_MASK))&&(--delay)){}\
     27                                                  if(0==delay){return 'F';}\
     28                                                  IIC_ADDR->S |= I2C_S_IICIF_MASK;}
     29          /******************************************************************************/
     30          // ³õÊ¼»¯ IIC ÎªÍ¨ÓÃ 400k

   \                                 In section .text, align 2, keep-with-next
     31          void v_IIC_Init()
     32          {
     33              // Ä£¿éÓëÒý½Å¿ªÆô
     34              SIM_SCGC4 |= SIM_SCGC4_IIC0_MASK; // SIM_SCGC4_IIC0_MASK
   \                     v_IIC_Init: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable2  ;; 0x40048034
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF050 0x0040      ORRS     R0,R0,#0x40
   \   00000008   0x....             LDR.N    R1,??DataTable2  ;; 0x40048034
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     35              SIM_SCGC5 |= SIM_SCGC5_PORTB_MASK;
   \   0000000C   0x....             LDR.N    R0,??DataTable2_1  ;; 0x40048038
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF450 0x6080      ORRS     R0,R0,#0x400
   \   00000014   0x....             LDR.N    R1,??DataTable2_1  ;; 0x40048038
   \   00000016   0x6008             STR      R0,[R1, #+0]
     36              PORTB_BASE_PTR->PCR[2] = 0x00000200u; // SCL
   \   00000018   0x....             LDR.N    R0,??DataTable2_2  ;; 0x4004a008
   \   0000001A   0xF44F 0x7100      MOV      R1,#+512
   \   0000001E   0x6001             STR      R1,[R0, #+0]
     37              PORTB_BASE_PTR->PCR[3] = 0x00000200u; // SDA
   \   00000020   0x....             LDR.N    R0,??DataTable2_3  ;; 0x4004a00c
   \   00000022   0xF44F 0x7100      MOV      R1,#+512
   \   00000026   0x6001             STR      R1,[R0, #+0]
     38              
     39              I2C0_BASE_PTR->F = 0; // 75MHz ·ÖÆµ45
   \   00000028   0x....             LDR.N    R0,??DataTable2_4  ;; 0x40066001
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x7001             STRB     R1,[R0, #+0]
     40              I2C0_BASE_PTR->C1 =  I2C_C1_IICEN_MASK; // ¿ªÆôIICÄ£Ê½ 
   \   0000002E   0x....             LDR.N    R0,??DataTable2_5  ;; 0x40066002
   \   00000030   0x2180             MOVS     R1,#+128
   \   00000032   0x7001             STRB     R1,[R0, #+0]
     41          }
   \   00000034   0x4770             BX       LR               ;; return
     42          
     43          /******************************************************************************/
     44          // Ñ¡¶¨Ä¿±ê // Mode => Write 0 / Read 1

   \                                 In section .text, align 2, keep-with-next
     45          void v_IIC_Start_Transmission(I2C_MemMapPtr IIC_Addr ,uint8 SlaveID ,uint8 Mode)
     46          {
     47              SlaveID = (SlaveID << 1)|Mode;
   \                     v_IIC_Start_Transmission: (+1)
   \   00000000   0xEA52 0x0141      ORRS     R1,R2,R1, LSL #+1
     48              IIC_Addr->C1 |= I2C_C1_TX_MASK;IIC_Addr->C1 |= I2C_C1_MST_MASK; // Start
   \   00000004   0x7882             LDRB     R2,[R0, #+2]
   \   00000006   0xF052 0x0210      ORRS     R2,R2,#0x10
   \   0000000A   0x7082             STRB     R2,[R0, #+2]
   \   0000000C   0x7882             LDRB     R2,[R0, #+2]
   \   0000000E   0xF052 0x0220      ORRS     R2,R2,#0x20
   \   00000012   0x7082             STRB     R2,[R0, #+2]
     49              IIC_Addr->D = SlaveID;
   \   00000014   0x7101             STRB     R1,[R0, #+4]
     50          }
   \   00000016   0x4770             BX       LR               ;; return
     51          
     52          /******************************************************************************/
     53          // Ð´¼Ä´æÆ÷ÊýÖµ

   \                                 In section .text, align 2, keep-with-next
     54          uint8 u8_IIC_WriteReg(I2C_MemMapPtr IIC_Addr ,uint8 SlaveID ,uint8 Num ,uint8 u8RegAddress)
     55          {
   \                     u8_IIC_WriteReg: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0015             MOVS     R5,R2
   \   00000006   0x001E             MOVS     R6,R3
     56              v_IIC_Start_Transmission(IIC_Addr ,SlaveID ,0);
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000C   0x0020             MOVS     R0,R4
   \   0000000E   0x.... 0x....      BL       v_IIC_Start_Transmission
     57              IIC_Wait(IIC_Addr);
   \   00000012   0x....             LDR.N    R0,??DataTable2_6  ;; 0x1d4c0
   \                     ??u8_IIC_WriteReg_0: (+1)
   \   00000014   0x78E1             LDRB     R1,[R4, #+3]
   \   00000016   0x0789             LSLS     R1,R1,#+30
   \   00000018   0xD402             BMI.N    ??u8_IIC_WriteReg_1
   \   0000001A   0x1E40             SUBS     R0,R0,#+1
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD1F9             BNE.N    ??u8_IIC_WriteReg_0
   \                     ??u8_IIC_WriteReg_1: (+1)
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD101             BNE.N    ??u8_IIC_WriteReg_2
   \   00000024   0x2046             MOVS     R0,#+70
   \   00000026   0xE02F             B.N      ??u8_IIC_WriteReg_3
   \                     ??u8_IIC_WriteReg_2: (+1)
   \   00000028   0x78E0             LDRB     R0,[R4, #+3]
   \   0000002A   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000002E   0x70E0             STRB     R0,[R4, #+3]
     58              
     59              IIC_Addr->D = u8RegAddress;
   \   00000030   0x7126             STRB     R6,[R4, #+4]
     60              IIC_Wait(IIC_Addr);
   \   00000032   0x....             LDR.N    R0,??DataTable2_6  ;; 0x1d4c0
   \                     ??u8_IIC_WriteReg_4: (+1)
   \   00000034   0x78E1             LDRB     R1,[R4, #+3]
   \   00000036   0x0789             LSLS     R1,R1,#+30
   \   00000038   0xD402             BMI.N    ??u8_IIC_WriteReg_5
   \   0000003A   0x1E40             SUBS     R0,R0,#+1
   \   0000003C   0x2800             CMP      R0,#+0
   \   0000003E   0xD1F9             BNE.N    ??u8_IIC_WriteReg_4
   \                     ??u8_IIC_WriteReg_5: (+1)
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD101             BNE.N    ??u8_IIC_WriteReg_6
   \   00000044   0x2046             MOVS     R0,#+70
   \   00000046   0xE01F             B.N      ??u8_IIC_WriteReg_3
   \                     ??u8_IIC_WriteReg_6: (+1)
   \   00000048   0x78E0             LDRB     R0,[R4, #+3]
   \   0000004A   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000004E   0x70E0             STRB     R0,[R4, #+3]
     61          
     62              IIC_Addr->D = Num;
   \   00000050   0x7125             STRB     R5,[R4, #+4]
     63              IIC_Wait(IIC_Addr);
   \   00000052   0x....             LDR.N    R0,??DataTable2_6  ;; 0x1d4c0
   \                     ??u8_IIC_WriteReg_7: (+1)
   \   00000054   0x78E1             LDRB     R1,[R4, #+3]
   \   00000056   0x0789             LSLS     R1,R1,#+30
   \   00000058   0xD402             BMI.N    ??u8_IIC_WriteReg_8
   \   0000005A   0x1E40             SUBS     R0,R0,#+1
   \   0000005C   0x2800             CMP      R0,#+0
   \   0000005E   0xD1F9             BNE.N    ??u8_IIC_WriteReg_7
   \                     ??u8_IIC_WriteReg_8: (+1)
   \   00000060   0x2800             CMP      R0,#+0
   \   00000062   0xD101             BNE.N    ??u8_IIC_WriteReg_9
   \   00000064   0x2046             MOVS     R0,#+70
   \   00000066   0xE00F             B.N      ??u8_IIC_WriteReg_3
   \                     ??u8_IIC_WriteReg_9: (+1)
   \   00000068   0x78E0             LDRB     R0,[R4, #+3]
   \   0000006A   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   0000006E   0x70E0             STRB     R0,[R4, #+3]
     64          
     65              IIC_Stop(IIC_Addr);
   \   00000070   0x78A0             LDRB     R0,[R4, #+2]
   \   00000072   0xF010 0x00DF      ANDS     R0,R0,#0xDF
   \   00000076   0x70A0             STRB     R0,[R4, #+2]
   \   00000078   0x78A0             LDRB     R0,[R4, #+2]
   \   0000007A   0xF010 0x00EF      ANDS     R0,R0,#0xEF
   \   0000007E   0x70A0             STRB     R0,[R4, #+2]
   \                     ??u8_IIC_WriteReg_10: (+1)
   \   00000080   0x78E0             LDRB     R0,[R4, #+3]
   \   00000082   0x0680             LSLS     R0,R0,#+26
   \   00000084   0xD4FC             BMI.N    ??u8_IIC_WriteReg_10
     66              
     67              //uint8 time = 200;while(time--){asm("nop");};
     68              return 0;
   \   00000086   0x2000             MOVS     R0,#+0
   \                     ??u8_IIC_WriteReg_3: (+1)
   \   00000088   0xBD70             POP      {R4-R6,PC}       ;; return
     69          }
     70          /******************************************************************************/
     71          // ¶ÁÈ¡¼Ä´æÆ÷ÊýÖµ

   \                                 In section .text, align 2, keep-with-next
     72          uint8 u8_IIC_ReadReg(I2C_MemMapPtr IIC_Addr ,uint8 SlaveID ,uint8 * Num ,uint8 u8RegAddress)
     73          {
   \                     u8_IIC_ReadReg: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000E             MOVS     R6,R1
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001F             MOVS     R7,R3
     74              v_IIC_Start_Transmission(IIC_Addr ,SlaveID ,0);
   \   0000000A   0x2200             MOVS     R2,#+0
   \   0000000C   0x0031             MOVS     R1,R6
   \   0000000E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000010   0x0020             MOVS     R0,R4
   \   00000012   0x.... 0x....      BL       v_IIC_Start_Transmission
     75              IIC_Wait(IIC_Addr);
   \   00000016   0x....             LDR.N    R0,??DataTable2_6  ;; 0x1d4c0
   \                     ??u8_IIC_ReadReg_0: (+1)
   \   00000018   0x78E1             LDRB     R1,[R4, #+3]
   \   0000001A   0x0789             LSLS     R1,R1,#+30
   \   0000001C   0xD402             BMI.N    ??u8_IIC_ReadReg_1
   \   0000001E   0x1E40             SUBS     R0,R0,#+1
   \   00000020   0x2800             CMP      R0,#+0
   \   00000022   0xD1F9             BNE.N    ??u8_IIC_ReadReg_0
   \                     ??u8_IIC_ReadReg_1: (+1)
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD101             BNE.N    ??u8_IIC_ReadReg_2
   \   00000028   0x2046             MOVS     R0,#+70
   \   0000002A   0xE051             B.N      ??u8_IIC_ReadReg_3
   \                     ??u8_IIC_ReadReg_2: (+1)
   \   0000002C   0x78E0             LDRB     R0,[R4, #+3]
   \   0000002E   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000032   0x70E0             STRB     R0,[R4, #+3]
     76              
     77              IIC_Addr->D = u8RegAddress;
   \   00000034   0x7127             STRB     R7,[R4, #+4]
     78              IIC_Wait(IIC_Addr);
   \   00000036   0x....             LDR.N    R0,??DataTable2_6  ;; 0x1d4c0
   \                     ??u8_IIC_ReadReg_4: (+1)
   \   00000038   0x78E1             LDRB     R1,[R4, #+3]
   \   0000003A   0x0789             LSLS     R1,R1,#+30
   \   0000003C   0xD402             BMI.N    ??u8_IIC_ReadReg_5
   \   0000003E   0x1E40             SUBS     R0,R0,#+1
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD1F9             BNE.N    ??u8_IIC_ReadReg_4
   \                     ??u8_IIC_ReadReg_5: (+1)
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD101             BNE.N    ??u8_IIC_ReadReg_6
   \   00000048   0x2046             MOVS     R0,#+70
   \   0000004A   0xE041             B.N      ??u8_IIC_ReadReg_3
   \                     ??u8_IIC_ReadReg_6: (+1)
   \   0000004C   0x78E0             LDRB     R0,[R4, #+3]
   \   0000004E   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000052   0x70E0             STRB     R0,[R4, #+3]
     79              
     80              IIC_Addr->C1 |= I2C_C1_RSTA_MASK; // repeated start
   \   00000054   0x78A0             LDRB     R0,[R4, #+2]
   \   00000056   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   0000005A   0x70A0             STRB     R0,[R4, #+2]
     81              
     82              SlaveID = (SlaveID << 1)|0x01;IIC_Addr->D = SlaveID;
   \   0000005C   0x0070             LSLS     R0,R6,#+1
   \   0000005E   0xF050 0x0601      ORRS     R6,R0,#0x1
   \   00000062   0x7126             STRB     R6,[R4, #+4]
     83              IIC_Wait(IIC_Addr);
   \   00000064   0x....             LDR.N    R0,??DataTable2_6  ;; 0x1d4c0
   \                     ??u8_IIC_ReadReg_7: (+1)
   \   00000066   0x78E1             LDRB     R1,[R4, #+3]
   \   00000068   0x0789             LSLS     R1,R1,#+30
   \   0000006A   0xD402             BMI.N    ??u8_IIC_ReadReg_8
   \   0000006C   0x1E40             SUBS     R0,R0,#+1
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD1F9             BNE.N    ??u8_IIC_ReadReg_7
   \                     ??u8_IIC_ReadReg_8: (+1)
   \   00000072   0x2800             CMP      R0,#+0
   \   00000074   0xD101             BNE.N    ??u8_IIC_ReadReg_9
   \   00000076   0x2046             MOVS     R0,#+70
   \   00000078   0xE02A             B.N      ??u8_IIC_ReadReg_3
   \                     ??u8_IIC_ReadReg_9: (+1)
   \   0000007A   0x78E0             LDRB     R0,[R4, #+3]
   \   0000007C   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   00000080   0x70E0             STRB     R0,[R4, #+3]
     84              
     85              IIC_Addr->C1 &= (~I2C_C1_TX_MASK);
   \   00000082   0x78A0             LDRB     R0,[R4, #+2]
   \   00000084   0xF010 0x00EF      ANDS     R0,R0,#0xEF
   \   00000088   0x70A0             STRB     R0,[R4, #+2]
     86              IIC_Addr->C1 |= I2C_C1_TXAK_MASK;
   \   0000008A   0x78A0             LDRB     R0,[R4, #+2]
   \   0000008C   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000090   0x70A0             STRB     R0,[R4, #+2]
     87              
     88              (*Num) = IIC_Addr->D; // Dummy read
   \   00000092   0x7920             LDRB     R0,[R4, #+4]
   \   00000094   0x7028             STRB     R0,[R5, #+0]
     89              IIC_Wait(IIC_Addr);
   \   00000096   0x....             LDR.N    R0,??DataTable2_6  ;; 0x1d4c0
   \                     ??u8_IIC_ReadReg_10: (+1)
   \   00000098   0x78E1             LDRB     R1,[R4, #+3]
   \   0000009A   0x0789             LSLS     R1,R1,#+30
   \   0000009C   0xD402             BMI.N    ??u8_IIC_ReadReg_11
   \   0000009E   0x1E40             SUBS     R0,R0,#+1
   \   000000A0   0x2800             CMP      R0,#+0
   \   000000A2   0xD1F9             BNE.N    ??u8_IIC_ReadReg_10
   \                     ??u8_IIC_ReadReg_11: (+1)
   \   000000A4   0x2800             CMP      R0,#+0
   \   000000A6   0xD101             BNE.N    ??u8_IIC_ReadReg_12
   \   000000A8   0x2046             MOVS     R0,#+70
   \   000000AA   0xE011             B.N      ??u8_IIC_ReadReg_3
   \                     ??u8_IIC_ReadReg_12: (+1)
   \   000000AC   0x78E0             LDRB     R0,[R4, #+3]
   \   000000AE   0xF050 0x0002      ORRS     R0,R0,#0x2
   \   000000B2   0x70E0             STRB     R0,[R4, #+3]
     90              
     91              IIC_Stop(IIC_Addr);
   \   000000B4   0x78A0             LDRB     R0,[R4, #+2]
   \   000000B6   0xF010 0x00DF      ANDS     R0,R0,#0xDF
   \   000000BA   0x70A0             STRB     R0,[R4, #+2]
   \   000000BC   0x78A0             LDRB     R0,[R4, #+2]
   \   000000BE   0xF010 0x00EF      ANDS     R0,R0,#0xEF
   \   000000C2   0x70A0             STRB     R0,[R4, #+2]
   \                     ??u8_IIC_ReadReg_13: (+1)
   \   000000C4   0x78E0             LDRB     R0,[R4, #+3]
   \   000000C6   0x0680             LSLS     R0,R0,#+26
   \   000000C8   0xD4FC             BMI.N    ??u8_IIC_ReadReg_13
     92              
     93              (*Num) = IIC_Addr->D;
   \   000000CA   0x7920             LDRB     R0,[R4, #+4]
   \   000000CC   0x7028             STRB     R0,[R5, #+0]
     94              
     95              return 'T';
   \   000000CE   0x2054             MOVS     R0,#+84
   \                     ??u8_IIC_ReadReg_3: (+1)
   \   000000D0   0xBDF2             POP      {R1,R4-R7,PC}    ;; return
     96          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x4004A008         DC32     0x4004a008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x4004A00C         DC32     0x4004a00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40066001         DC32     0x40066001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x40066002         DC32     0x40066002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x0001D4C0         DC32     0x1d4c0

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   u8_IIC_ReadReg
        24   -> v_IIC_Start_Transmission
      16   u8_IIC_WriteReg
        16   -> v_IIC_Start_Transmission
       0   v_IIC_Init
       0   v_IIC_Start_Transmission


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
     210  u8_IIC_ReadReg
     138  u8_IIC_WriteReg
      54  v_IIC_Init
      24  v_IIC_Start_Transmission

 
 454 bytes in section .text
 
 454 bytes of CODE memory

Errors: none
Warnings: none
