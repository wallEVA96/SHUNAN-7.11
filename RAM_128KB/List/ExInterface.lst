###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.60.1.5097/W32 for ARM      03/Sep/2014  15:08:09 #
# Copyright 1999-2013 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  D:\创作室\飞思卡尔智能小车\调试板\遥控器\ShunAn_Panel\Ex #
#                    Interface.c                                              #
#    Command line =  D:\创作室\飞思卡尔智能小车\调试板\遥控器\ShunAn_Panel\Ex #
#                    Interface.c -D IAR -D TWR_K60F120M -lCN                  #
#                    D:\创作室\飞思卡尔智能小车\调试板\遥控器\RAM_128KB\List\ #
#                     -lB D:\创作室\飞思卡尔智能小车\调试板\遥控器\RAM_128KB\ #
#                    List\ -o D:\创作室\飞思卡尔智能小车\调试板\遥控器\RAM_12 #
#                    8KB\Obj\ --no_cse --no_unroll --no_inline                #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files (x86)\IAR  #
#                    Systems\Embedded Workbench 6.5\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I D:\创作室\飞思卡尔智能小车\调试板\遥控器\ -I   #
#                    D:\创作室\飞思卡尔智能小车\调试板\遥控器\Library\ -I     #
#                    D:\创作室\飞思卡尔智能小车\调试板\遥控器\Library\Blessed #
#                    Alien\ -I D:\创作室\飞思卡尔智能小车\调试板\遥控器\ShunA #
#                    n_Panel\ -Ol --use_c++_inline                            #
#    List file    =  D:\创作室\飞思卡尔智能小车\调试板\遥控器\RAM_128KB\List\ #
#                    ExInterface.lst                                          #
#    Object file  =  D:\创作室\飞思卡尔智能小车\调试板\遥控器\RAM_128KB\Obj\E #
#                    xInterface.o                                             #
#                                                                             #
#                                                                             #
###############################################################################

D:\创作室\飞思卡尔智能小车\调试板\遥控器\ShunAn_Panel\ExInterface.c
      1          #include "MK60F15.h"
      2          #include "ShunAn_Lib.h"
      3          #include "start_ShunAn.h"
      4          #include "BlessedAlien.h"
      5          
      6          #include "ControlPads.h"
      7          #include "ExInterface.h"
      8          
      9          #define Button1 (u8_Button1get())
     10          #define Button2 (u8_Button2get())
     11          #define Button3 (u8_Button3get())
     12          #define Button4 (u8_Button4get())
     13          
     14          #define Switch1 (u8_Switch1get())
     15          #define Switch2 (u8_Switch2get())
     16          #define Switch3 (u8_Switch3get())
     17          #define Switch4 (u8_Switch4get())
     18          #define Switch5 (u8_Switch5get())
     19          #define Switch6 (u8_Switch6get())
     20          #define Switch7 (u8_Switch7get())
     21          #define Switch8 (u8_Switch8get())
     22          

   \                                 In section .text, align 2, keep-with-next
     23          void v_Init_ExInterface ( void )
     24          {
     25              // 初始化拨码开关 / 按键
     26              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK|SIM_SCGC5_PORTB_MASK);//使能PORTA、B时钟
   \                     v_Init_ExInterface: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x60C0      ORRS     R0,R0,#0x600
   \   00000008   0x....             LDR.N    R1,??DataTable12  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
     27              PORTA_PCR24 |= 0x00000100u;//引脚复用选择普通IO(拨码开关1)
   \   0000000C   0x....             LDR.N    R0,??DataTable12_1  ;; 0x40049060
   \   0000000E   0x6800             LDR      R0,[R0, #+0]
   \   00000010   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000014   0x....             LDR.N    R1,??DataTable12_1  ;; 0x40049060
   \   00000016   0x6008             STR      R0,[R1, #+0]
     28              PORTA_PCR25 |= 0x00000100u;//引脚复用选择普通IO(拨码开关2)
   \   00000018   0x....             LDR.N    R0,??DataTable12_2  ;; 0x40049064
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000020   0x....             LDR.N    R1,??DataTable12_2  ;; 0x40049064
   \   00000022   0x6008             STR      R0,[R1, #+0]
     29              PORTA_PCR26 |= 0x00000100u;//引脚复用选择普通IO(拨码开关3)
   \   00000024   0x....             LDR.N    R0,??DataTable12_3  ;; 0x40049068
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000002C   0x....             LDR.N    R1,??DataTable12_3  ;; 0x40049068
   \   0000002E   0x6008             STR      R0,[R1, #+0]
     30              PORTA_PCR27 |= 0x00000100u;//引脚复用选择普通IO(拨码开关4)
   \   00000030   0x....             LDR.N    R0,??DataTable12_4  ;; 0x4004906c
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000038   0x....             LDR.N    R1,??DataTable12_4  ;; 0x4004906c
   \   0000003A   0x6008             STR      R0,[R1, #+0]
     31              PORTA_PCR28 |= 0x00000100u;//引脚复用选择普通IO(拨码开关5)
   \   0000003C   0x....             LDR.N    R0,??DataTable12_5  ;; 0x40049070
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000044   0x....             LDR.N    R1,??DataTable12_5  ;; 0x40049070
   \   00000046   0x6008             STR      R0,[R1, #+0]
     32              PORTA_PCR29 |= 0x00000100u;//引脚复用选择普通IO(拨码开关6)
   \   00000048   0x....             LDR.N    R0,??DataTable12_6  ;; 0x40049074
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000050   0x....             LDR.N    R1,??DataTable12_6  ;; 0x40049074
   \   00000052   0x6008             STR      R0,[R1, #+0]
     33              PORTB_PCR0  |= 0x00000100u;//引脚复用选择普通IO(拨码开关7)
   \   00000054   0x....             LDR.N    R0,??DataTable12_7  ;; 0x4004a000
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   0000005C   0x....             LDR.N    R1,??DataTable12_7  ;; 0x4004a000
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     34              PORTB_PCR1  |= 0x00000100u;//引脚复用选择普通IO(拨码开关8)
   \   00000060   0x....             LDR.N    R0,??DataTable12_8  ;; 0x4004a004
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   00000068   0x....             LDR.N    R1,??DataTable12_8  ;; 0x4004a004
   \   0000006A   0x6008             STR      R0,[R1, #+0]
     35              GPIOA_PDDR &= ~(1<<24);//引脚选择输入方向(拨码开关1)
   \   0000006C   0x....             LDR.N    R0,??DataTable12_9  ;; 0x400ff014
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0xF030 0x7080      BICS     R0,R0,#0x1000000
   \   00000074   0x....             LDR.N    R1,??DataTable12_9  ;; 0x400ff014
   \   00000076   0x6008             STR      R0,[R1, #+0]
     36              GPIOA_PDDR &= ~(1<<25);//引脚选择输入方向(拨码开关2)
   \   00000078   0x....             LDR.N    R0,??DataTable12_9  ;; 0x400ff014
   \   0000007A   0x6800             LDR      R0,[R0, #+0]
   \   0000007C   0xF030 0x7000      BICS     R0,R0,#0x2000000
   \   00000080   0x....             LDR.N    R1,??DataTable12_9  ;; 0x400ff014
   \   00000082   0x6008             STR      R0,[R1, #+0]
     37              GPIOA_PDDR &= ~(1<<26);//引脚选择输入方向(拨码开关3)
   \   00000084   0x....             LDR.N    R0,??DataTable12_9  ;; 0x400ff014
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0xF030 0x6080      BICS     R0,R0,#0x4000000
   \   0000008C   0x....             LDR.N    R1,??DataTable12_9  ;; 0x400ff014
   \   0000008E   0x6008             STR      R0,[R1, #+0]
     38              GPIOA_PDDR &= ~(1<<27);//引脚选择输入方向(拨码开关4)
   \   00000090   0x....             LDR.N    R0,??DataTable12_9  ;; 0x400ff014
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF030 0x6000      BICS     R0,R0,#0x8000000
   \   00000098   0x....             LDR.N    R1,??DataTable12_9  ;; 0x400ff014
   \   0000009A   0x6008             STR      R0,[R1, #+0]
     39              GPIOA_PDDR &= ~(1<<28);//引脚选择输入方向(拨码开关5)
   \   0000009C   0x....             LDR.N    R0,??DataTable12_9  ;; 0x400ff014
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF030 0x5080      BICS     R0,R0,#0x10000000
   \   000000A4   0x....             LDR.N    R1,??DataTable12_9  ;; 0x400ff014
   \   000000A6   0x6008             STR      R0,[R1, #+0]
     40              GPIOA_PDDR &= ~(1<<29);//引脚选择输入方向(拨码开关6)
   \   000000A8   0x....             LDR.N    R0,??DataTable12_9  ;; 0x400ff014
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0xF030 0x5000      BICS     R0,R0,#0x20000000
   \   000000B0   0x....             LDR.N    R1,??DataTable12_9  ;; 0x400ff014
   \   000000B2   0x6008             STR      R0,[R1, #+0]
     41              GPIOB_PDDR &= ~(1<<0);//引脚选择输入方向(拨码开关7)
   \   000000B4   0x....             LDR.N    R0,??DataTable12_10  ;; 0x400ff054
   \   000000B6   0x6800             LDR      R0,[R0, #+0]
   \   000000B8   0x0840             LSRS     R0,R0,#+1
   \   000000BA   0x0040             LSLS     R0,R0,#+1
   \   000000BC   0x....             LDR.N    R1,??DataTable12_10  ;; 0x400ff054
   \   000000BE   0x6008             STR      R0,[R1, #+0]
     42              GPIOB_PDDR &= ~(1<<1);//引脚选择输入方向(拨码开关8)
   \   000000C0   0x....             LDR.N    R0,??DataTable12_10  ;; 0x400ff054
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0xF030 0x0002      BICS     R0,R0,#0x2
   \   000000C8   0x....             LDR.N    R1,??DataTable12_10  ;; 0x400ff054
   \   000000CA   0x6008             STR      R0,[R1, #+0]
     43              /* 按键配置 */
     44              PORTB_PCR2 |= 0x00000100u;//引脚复用选择普通IO(按键1)
   \   000000CC   0x....             LDR.N    R0,??DataTable12_11  ;; 0x4004a008
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000D4   0x....             LDR.N    R1,??DataTable12_11  ;; 0x4004a008
   \   000000D6   0x6008             STR      R0,[R1, #+0]
     45              PORTB_PCR3 |= 0x00000100u;//引脚复用选择普通IO(按键2)
   \   000000D8   0x....             LDR.N    R0,??DataTable12_12  ;; 0x4004a00c
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000E0   0x....             LDR.N    R1,??DataTable12_12  ;; 0x4004a00c
   \   000000E2   0x6008             STR      R0,[R1, #+0]
     46              PORTB_PCR4 |= 0x00000100u;//引脚复用选择普通IO(按键3)
   \   000000E4   0x....             LDR.N    R0,??DataTable12_13  ;; 0x4004a010
   \   000000E6   0x6800             LDR      R0,[R0, #+0]
   \   000000E8   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000EC   0x....             LDR.N    R1,??DataTable12_13  ;; 0x4004a010
   \   000000EE   0x6008             STR      R0,[R1, #+0]
     47              PORTB_PCR5 |= 0x00000100u;//引脚复用选择普通IO(按键4)
   \   000000F0   0x....             LDR.N    R0,??DataTable12_14  ;; 0x4004a014
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0xF450 0x7080      ORRS     R0,R0,#0x100
   \   000000F8   0x....             LDR.N    R1,??DataTable12_14  ;; 0x4004a014
   \   000000FA   0x6008             STR      R0,[R1, #+0]
     48              GPIOB_PDDR &= ~(1<<2);//引脚选择输入方向(按键1)
   \   000000FC   0x....             LDR.N    R0,??DataTable12_10  ;; 0x400ff054
   \   000000FE   0x6800             LDR      R0,[R0, #+0]
   \   00000100   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000104   0x....             LDR.N    R1,??DataTable12_10  ;; 0x400ff054
   \   00000106   0x6008             STR      R0,[R1, #+0]
     49              GPIOB_PDDR &= ~(1<<3);//引脚选择输入方向(按键2)
   \   00000108   0x....             LDR.N    R0,??DataTable12_10  ;; 0x400ff054
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0xF030 0x0008      BICS     R0,R0,#0x8
   \   00000110   0x....             LDR.N    R1,??DataTable12_10  ;; 0x400ff054
   \   00000112   0x6008             STR      R0,[R1, #+0]
     50              GPIOB_PDDR &= ~(1<<4);//引脚选择输入方向(按键3)
   \   00000114   0x....             LDR.N    R0,??DataTable12_10  ;; 0x400ff054
   \   00000116   0x6800             LDR      R0,[R0, #+0]
   \   00000118   0xF030 0x0010      BICS     R0,R0,#0x10
   \   0000011C   0x....             LDR.N    R1,??DataTable12_10  ;; 0x400ff054
   \   0000011E   0x6008             STR      R0,[R1, #+0]
     51              GPIOB_PDDR &= ~(1<<5);//引脚选择输入方向(按键4)
   \   00000120   0x....             LDR.N    R0,??DataTable12_10  ;; 0x400ff054
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0xF030 0x0020      BICS     R0,R0,#0x20
   \   00000128   0x....             LDR.N    R1,??DataTable12_10  ;; 0x400ff054
   \   0000012A   0x6008             STR      R0,[R1, #+0]
     52          }
   \   0000012C   0x4770             BX       LR               ;; return
     53          
     54          

   \                                 In section .text, align 2, keep-with-next
     55          unsigned char u8_Switch1get(void){return (GPIOA_PDIR >> 24) & 0x01;}
   \                     u8_Switch1get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_15  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0E00             LSRS     R0,R0,#+24
   \   00000006   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     56          unsigned char u8_Switch2get(void){return (GPIOA_PDIR >> 25) & 0x01;}
   \                     u8_Switch2get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_15  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0E40             LSRS     R0,R0,#+25
   \   00000006   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     57          unsigned char u8_Switch3get(void){return (GPIOA_PDIR >> 26) & 0x01;}
   \                     u8_Switch3get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_15  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0E80             LSRS     R0,R0,#+26
   \   00000006   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     58          unsigned char u8_Switch4get(void){return (GPIOA_PDIR >> 27) & 0x01;}
   \                     u8_Switch4get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_15  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0EC0             LSRS     R0,R0,#+27
   \   00000006   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     59          unsigned char u8_Switch5get(void){return (GPIOA_PDIR >> 28) & 0x01;}
   \                     u8_Switch5get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_15  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0F00             LSRS     R0,R0,#+28
   \   00000006   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     60          unsigned char u8_Switch6get(void){return (GPIOA_PDIR >> 29) & 0x01;}
   \                     u8_Switch6get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_15  ;; 0x400ff010
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0x0F40             LSRS     R0,R0,#+29
   \   00000006   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     61          unsigned char u8_Switch7get(void){return (GPIOB_PDIR >> 0) & 0x01;}
   \                     u8_Switch7get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_16  ;; 0x400ff050
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF010 0x0001      ANDS     R0,R0,#0x1
   \   00000008   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     62          unsigned char u8_Switch8get(void){return (GPIOB_PDIR >> 1) & 0x01;}
   \                     u8_Switch8get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_16  ;; 0x400ff050
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF3C0 0x0040      UBFX     R0,R0,#+1,#+1
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x4770             BX       LR               ;; return
     63          

   \                                 In section .text, align 2, keep-with-next
     64          unsigned char u8_Button1get(void){return (GPIOB_PDIR >> 2) & 0x01;}
   \                     u8_Button1get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_16  ;; 0x400ff050
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF3C0 0x0080      UBFX     R0,R0,#+2,#+1
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     65          unsigned char u8_Button2get(void){return (GPIOB_PDIR >> 3) & 0x01;}
   \                     u8_Button2get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_16  ;; 0x400ff050
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF3C0 0x00C0      UBFX     R0,R0,#+3,#+1
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     66          unsigned char u8_Button3get(void){return (GPIOB_PDIR >> 4) & 0x01;}
   \                     u8_Button3get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_16  ;; 0x400ff050
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF3C0 0x1000      UBFX     R0,R0,#+4,#+1
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     67          unsigned char u8_Button4get(void){return (GPIOB_PDIR >> 5) & 0x01;}
   \                     u8_Button4get: (+1)
   \   00000000   0x....             LDR.N    R0,??DataTable12_16  ;; 0x400ff050
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF3C0 0x1040      UBFX     R0,R0,#+5,#+1
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x4770             BX       LR               ;; return
     68          
     69          #define DE_BUTTON_TICK  13

   \                                 In section .bss, align 4
     70          Buttons g_Buttons;
   \                     g_Buttons:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     71          ExInterfaces g_ExInterfaces;
   \                     g_ExInterfaces:
   \   00000000                      DS8 4
     72          
     73          

   \                                 In section .text, align 2, keep-with-next
     74          uint8 u8_Button_set(Message * _Message , Buttons * _Buttons , ExInterfaces * _ExInterfaces)
     75          {
   \                     u8_Button_set: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
     76              uint8 DownEventStart = 0;
   \   0000000A   0x2700             MOVS     R7,#+0
     77              uint8 DownButton = 0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
     78              uint8 DownSwitch = 0;
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
     79              if( ( 0 == Button1 ) && ( _Buttons->BottonTotaltime - _Buttons->Button1time > DE_BUTTON_TICK ) )
   \   00000014   0x.... 0x....      BL       u8_Button1get
   \   00000018   0x2800             CMP      R0,#+0
   \   0000001A   0xD109             BNE.N    ??u8_Button_set_0
   \   0000001C   0x6828             LDR      R0,[R5, #+0]
   \   0000001E   0x6869             LDR      R1,[R5, #+4]
   \   00000020   0x1A40             SUBS     R0,R0,R1
   \   00000022   0x280E             CMP      R0,#+14
   \   00000024   0xD304             BCC.N    ??u8_Button_set_0
     80              {
     81                  // 事件成立
     82                  DownButton |= 0x01;
   \   00000026   0xF058 0x0801      ORRS     R8,R8,#0x1
     83                  DownEventStart = 1;
   \   0000002A   0x2701             MOVS     R7,#+1
     84                  _Buttons->Button1time = _Buttons->BottonTotaltime;
   \   0000002C   0x6828             LDR      R0,[R5, #+0]
   \   0000002E   0x6068             STR      R0,[R5, #+4]
     85              }
     86              if( ( 0 == Button2 ) && ( _Buttons->BottonTotaltime - _Buttons->Button2time > DE_BUTTON_TICK ) )
   \                     ??u8_Button_set_0: (+1)
   \   00000030   0x.... 0x....      BL       u8_Button2get
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD109             BNE.N    ??u8_Button_set_1
   \   00000038   0x6828             LDR      R0,[R5, #+0]
   \   0000003A   0x68A9             LDR      R1,[R5, #+8]
   \   0000003C   0x1A40             SUBS     R0,R0,R1
   \   0000003E   0x280E             CMP      R0,#+14
   \   00000040   0xD304             BCC.N    ??u8_Button_set_1
     87              {
     88                  // 事件成立
     89                  DownButton |= 0x02;
   \   00000042   0xF058 0x0802      ORRS     R8,R8,#0x2
     90                  DownEventStart = 1;
   \   00000046   0x2701             MOVS     R7,#+1
     91                  _Buttons->Button2time = _Buttons->BottonTotaltime;
   \   00000048   0x6828             LDR      R0,[R5, #+0]
   \   0000004A   0x60A8             STR      R0,[R5, #+8]
     92              }
     93              if( ( 0 == Button3 ) && ( _Buttons->BottonTotaltime - _Buttons->Button3time > DE_BUTTON_TICK ) )
   \                     ??u8_Button_set_1: (+1)
   \   0000004C   0x.... 0x....      BL       u8_Button3get
   \   00000050   0x2800             CMP      R0,#+0
   \   00000052   0xD109             BNE.N    ??u8_Button_set_2
   \   00000054   0x6828             LDR      R0,[R5, #+0]
   \   00000056   0x68E9             LDR      R1,[R5, #+12]
   \   00000058   0x1A40             SUBS     R0,R0,R1
   \   0000005A   0x280E             CMP      R0,#+14
   \   0000005C   0xD304             BCC.N    ??u8_Button_set_2
     94              {
     95                  // 事件成立
     96                  DownButton |= 0x04;
   \   0000005E   0xF058 0x0804      ORRS     R8,R8,#0x4
     97                  DownEventStart = 1;
   \   00000062   0x2701             MOVS     R7,#+1
     98                  _Buttons->Button3time = _Buttons->BottonTotaltime;
   \   00000064   0x6828             LDR      R0,[R5, #+0]
   \   00000066   0x60E8             STR      R0,[R5, #+12]
     99              }
    100              if( ( 0 == Button4 ) && ( _Buttons->BottonTotaltime - _Buttons->Button4time > DE_BUTTON_TICK ) )
   \                     ??u8_Button_set_2: (+1)
   \   00000068   0x.... 0x....      BL       u8_Button4get
   \   0000006C   0x2800             CMP      R0,#+0
   \   0000006E   0xD109             BNE.N    ??u8_Button_set_3
   \   00000070   0x6828             LDR      R0,[R5, #+0]
   \   00000072   0x6929             LDR      R1,[R5, #+16]
   \   00000074   0x1A40             SUBS     R0,R0,R1
   \   00000076   0x280E             CMP      R0,#+14
   \   00000078   0xD304             BCC.N    ??u8_Button_set_3
    101              {
    102                  // 事件成立
    103                  DownButton |= 0x08;
   \   0000007A   0xF058 0x0808      ORRS     R8,R8,#0x8
    104                  DownEventStart = 1;
   \   0000007E   0x2701             MOVS     R7,#+1
    105                  _Buttons->Button4time = _Buttons->BottonTotaltime;
   \   00000080   0x6828             LDR      R0,[R5, #+0]
   \   00000082   0x6128             STR      R0,[R5, #+16]
    106              }
    107              if(1 == DownEventStart)
   \                     ??u8_Button_set_3: (+1)
   \   00000084   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000086   0x2F01             CMP      R7,#+1
   \   00000088   0xD128             BNE.N    ??u8_Button_set_4
    108              {
    109                  DownSwitch |= Switch1 << 0;
   \   0000008A   0x.... 0x....      BL       u8_Switch1get
   \   0000008E   0xEA50 0x0909      ORRS     R9,R0,R9
    110                  DownSwitch |= Switch2 << 1;
   \   00000092   0x.... 0x....      BL       u8_Switch2get
   \   00000096   0xEA59 0x0940      ORRS     R9,R9,R0, LSL #+1
    111                  DownSwitch |= Switch3 << 2;
   \   0000009A   0x.... 0x....      BL       u8_Switch3get
   \   0000009E   0xEA59 0x0980      ORRS     R9,R9,R0, LSL #+2
    112                  DownSwitch |= Switch4 << 3;
   \   000000A2   0x.... 0x....      BL       u8_Switch4get
   \   000000A6   0xEA59 0x09C0      ORRS     R9,R9,R0, LSL #+3
    113                  DownSwitch |= Switch5 << 4;
   \   000000AA   0x.... 0x....      BL       u8_Switch5get
   \   000000AE   0xEA59 0x1900      ORRS     R9,R9,R0, LSL #+4
    114                  DownSwitch |= Switch6 << 5;
   \   000000B2   0x.... 0x....      BL       u8_Switch6get
   \   000000B6   0xEA59 0x1940      ORRS     R9,R9,R0, LSL #+5
    115                  DownSwitch |= Switch7 << 6;
   \   000000BA   0x.... 0x....      BL       u8_Switch7get
   \   000000BE   0xEA59 0x1980      ORRS     R9,R9,R0, LSL #+6
    116                  DownSwitch |= Switch8 << 7;
   \   000000C2   0x.... 0x....      BL       u8_Switch8get
   \   000000C6   0xEA59 0x19C0      ORRS     R9,R9,R0, LSL #+7
    117                  _ExInterfaces->ButtonsOn = DownButton;
   \   000000CA   0xF886 0x8000      STRB     R8,[R6, #+0]
    118                  _ExInterfaces->SwitchsOn = DownSwitch;
   \   000000CE   0xF886 0x9001      STRB     R9,[R6, #+1]
    119                  _Message->msgGaia = (void*)_ExInterfaces;
   \   000000D2   0x6026             STR      R6,[R4, #+0]
    120                  _Message->time = _Buttons->BottonTotaltime;
   \   000000D4   0x6828             LDR      R0,[R5, #+0]
   \   000000D6   0x60A0             STR      R0,[R4, #+8]
    121                  return 0;
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0xE000             B.N      ??u8_Button_set_5
    122              }
    123              return 1;
   \                     ??u8_Button_set_4: (+1)
   \   000000DC   0x2001             MOVS     R0,#+1
   \                     ??u8_Button_set_5: (+1)
   \   000000DE   0xE8BD 0x83F2      POP      {R1,R4-R9,PC}    ;; return
    124          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_1:
   \   00000000   0x40049060         DC32     0x40049060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_2:
   \   00000000   0x40049064         DC32     0x40049064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_3:
   \   00000000   0x40049068         DC32     0x40049068

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_4:
   \   00000000   0x4004906C         DC32     0x4004906c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_5:
   \   00000000   0x40049070         DC32     0x40049070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_6:
   \   00000000   0x40049074         DC32     0x40049074

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_7:
   \   00000000   0x4004A000         DC32     0x4004a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_8:
   \   00000000   0x4004A004         DC32     0x4004a004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_9:
   \   00000000   0x400FF014         DC32     0x400ff014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_10:
   \   00000000   0x400FF054         DC32     0x400ff054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_11:
   \   00000000   0x4004A008         DC32     0x4004a008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_12:
   \   00000000   0x4004A00C         DC32     0x4004a00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_13:
   \   00000000   0x4004A010         DC32     0x4004a010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_14:
   \   00000000   0x4004A014         DC32     0x4004a014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_15:
   \   00000000   0x400FF010         DC32     0x400ff010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable12_16:
   \   00000000   0x400FF050         DC32     0x400ff050
    125          
    126          #undef DE_BUTTON_TICK 

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   u8_Button1get
       0   u8_Button2get
       0   u8_Button3get
       0   u8_Button4get
      32   u8_Button_set
        32   -> u8_Button1get
        32   -> u8_Button2get
        32   -> u8_Button3get
        32   -> u8_Button4get
        32   -> u8_Switch1get
        32   -> u8_Switch2get
        32   -> u8_Switch3get
        32   -> u8_Switch4get
        32   -> u8_Switch5get
        32   -> u8_Switch6get
        32   -> u8_Switch7get
        32   -> u8_Switch8get
       0   u8_Switch1get
       0   u8_Switch2get
       0   u8_Switch3get
       0   u8_Switch4get
       0   u8_Switch5get
       0   u8_Switch6get
       0   u8_Switch7get
       0   u8_Switch8get
       0   v_Init_ExInterface


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable12
       4  ??DataTable12_1
       4  ??DataTable12_10
       4  ??DataTable12_11
       4  ??DataTable12_12
       4  ??DataTable12_13
       4  ??DataTable12_14
       4  ??DataTable12_15
       4  ??DataTable12_16
       4  ??DataTable12_2
       4  ??DataTable12_3
       4  ??DataTable12_4
       4  ??DataTable12_5
       4  ??DataTable12_6
       4  ??DataTable12_7
       4  ??DataTable12_8
       4  ??DataTable12_9
      20  g_Buttons
       4  g_ExInterfaces
      12  u8_Button1get
      12  u8_Button2get
      12  u8_Button3get
      12  u8_Button4get
     226  u8_Button_set
      12  u8_Switch1get
      12  u8_Switch2get
      12  u8_Switch3get
      12  u8_Switch4get
      12  u8_Switch5get
      12  u8_Switch6get
      10  u8_Switch7get
      12  u8_Switch8get
     302  v_Init_ExInterface

 
  24 bytes in section .bss
 738 bytes in section .text
 
 738 bytes of CODE memory
  24 bytes of DATA memory

Errors: none
Warnings: none
